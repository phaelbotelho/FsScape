

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Mar 26 15:37:33 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 12/10/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F26K22 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113 ;; Function _rd1RegCompleteHandler is unused but had its address taken
   114   000000                     
   115 ;; Function _rd2RegCompleteHandler is unused but had its address taken
   116   000000                     
   117 ;; Function _wr1RegCompleteHandler is unused but had its address taken
   118   000000                     
   119 ;; Function _wr2RegCompleteHandler is unused but had its address taken
   120   000000                     
   121 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
   122   000000                     
   123 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   124   000000                     
   125 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   126   000000                     
   127 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   128   000000                     
   129 ;; Function _I2C1_DO_IDLE is unused but had its address taken
   130   000000                     
   131 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
   132   000000                     
   133 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
   134   000000                     
   135 ;; Function _I2C1_DO_TX is unused but had its address taken
   136   000000                     
   137 ;; Function _I2C1_DO_RX is unused but had its address taken
   138   000000                     
   139 ;; Function _I2C1_DO_RCEN is unused but had its address taken
   140   000000                     
   141 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
   142   000000                     
   143 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
   144   000000                     
   145 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
   146   000000                     
   147 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
   148   000000                     
   149 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
   150   000000                     
   151 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
   152   000000                     
   153 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
   154   000000                     
   155 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
   156   000000                     
   157 ;; Function _I2C1_DO_RESET is unused but had its address taken
   158   000000                     
   159 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
   160   000000                     
   161 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
   162   000000                     
   163 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
   164   000000                     
   165                           	psect	idataBANK0
   166   001BB4                     __pidataBANK0:
   167                           	callstack 0
   168                           
   169                           ;initializer for main@F6387
   170   001BB4  61                 	db	97
   171   001BB5  62                 	db	98
   172   001BB6  63                 	db	99
   173   001BB7  64                 	db	100
   174   001BB8  65                 	db	101
   175   001BB9  66                 	db	102
   176   001BBA  67                 	db	103
   177   001BBB  68                 	db	104
   178   001BBC  69                 	db	105
   179   001BBD  6A                 	db	106
   180   001BBE  6B                 	db	107
   181                           
   182                           	psect	mediumconst
   183   00FE20                     __pmediumconst:
   184                           	callstack 0
   185   00FE20  00                 	db	0
   186   00FE21                     _i2c1_fsmStateTable:
   187                           	callstack 0
   188   00FE21  00                 	db	0
   189   00FE22  00                 	db	0
   190   00FE23  00                 	db	0
   191   00FE24  00                 	db	0
   192   00FE25  00                 	db	0
   193   00FE26  00                 	db	0
   194   00FE27  00                 	db	0
   195   00FE28  00                 	db	0
   196   00FE29  00                 	db	0
   197   00FE2A  00                 	db	0
   198   00FE2B  00                 	db	0
   199   00FE2C  00                 	db	0
   200   00FE2D  00                 	db	0
   201   00FE2E  00                 	db	0
   202   00FE2F  00                 	db	0
   203   00FE30  00                 	db	0
   204   00FE31  00                 	db	0
   205   00FE32  00                 	db	0
   206   00FE33  00                 	db	0
   207   00FE34  00                 	db	0
   208   00FE35  00                 	db	0
   209   00FE36  00                 	db	0
   210   00FE37  00                 	db	0
   211   00FE38  00                 	db	0
   212   00FE39  00                 	db	0
   213   00FE3A  00                 	db	0
   214   00FE3B  00                 	db	0
   215   00FE3C  00                 	db	0
   216   00FE3D  00                 	db	0
   217   00FE3E  00                 	db	0
   218   00FE3F  00                 	db	0
   219   00FE40  00                 	db	0
   220   00FE41                     __end_of_i2c1_fsmStateTable:
   221                           	callstack 0
   222   00FE41                     _spi2_configuration:
   223                           	callstack 0
   224   00FE41  00                 	db	0
   225   00FE42  40                 	db	64
   226   00FE43  01                 	db	1
   227   00FE44  00                 	db	0
   228   00FE45                     __end_of_spi2_configuration:
   229                           	callstack 0
   230   00FE45                     _spi1_configuration:
   231                           	callstack 0
   232   00FE45  00                 	db	0
   233   00FE46  40                 	db	64
   234   00FE47  27                 	db	39
   235   00FE48  00                 	db	0
   236   00FE49                     __end_of_spi1_configuration:
   237                           	callstack 0
   238   00FE49                     _FsScape_FLASH_interface_style:
   239                           	callstack 0
   240   00FE49  01                 	db	1
   241   00FE4A                     __end_of_FsScape_FLASH_interface_style:
   242                           	callstack 0
   243   00FE4A                     _FsScape_EEPROM_interface_style:
   244                           	callstack 0
   245   00FE4A  00                 	db	0
   246   00FE4B                     __end_of_FsScape_EEPROM_interface_style:
   247                           	callstack 0
   248   00FE4B                     _FsScape_SRAM_interface_style:
   249                           	callstack 0
   250   00FE4B  00                 	db	0
   251   00FE4C                     __end_of_FsScape_SRAM_interface_style:
   252                           	callstack 0
   253   000000                     _T1CON	set	4045
   254   000000                     _TMR1L	set	4046
   255   000000                     _TMR1H	set	4047
   256   000000                     _TXREG1	set	4013
   257   000000                     _RCREG1	set	4014
   258   000000                     _SPBRG1	set	4015
   259   000000                     _TXSTA1	set	4012
   260   000000                     _ANSELA	set	3896
   261   000000                     _ANSELB	set	3897
   262   000000                     _ANSELC	set	3898
   263   000000                     _LATA	set	3977
   264   000000                     _OSCTUNE	set	3995
   265   000000                     _OSCCON2	set	4050
   266   000000                     _OSCCON	set	4051
   267   00FE4C                     STR_5:
   268   00FE4C  56                 	db	86	;'V'
   269   00FE4D  65                 	db	101	;'e'
   270   00FE4E  72                 	db	114	;'r'
   271   00FE4F  69                 	db	105	;'i'
   272   00FE50  66                 	db	102	;'f'
   273   00FE51  69                 	db	105	;'i'
   274   00FE52  63                 	db	99	;'c'
   275   00FE53  61                 	db	97	;'a'
   276   00FE54  6E                 	db	110	;'n'
   277   00FE55  64                 	db	100	;'d'
   278   00FE56  6F                 	db	111	;'o'
   279   00FE57  20                 	db	32
   280   00FE58  6F                 	db	111	;'o'
   281   00FE59  20                 	db	32
   282   00FE5A  70                 	db	112	;'p'
   283   00FE5B  6F                 	db	111	;'o'
   284   00FE5C  6E                 	db	110	;'n'
   285   00FE5D  74                 	db	116	;'t'
   286   00FE5E  65                 	db	101	;'e'
   287   00FE5F  69                 	db	105	;'i'
   288   00FE60  72                 	db	114	;'r'
   289   00FE61  6F                 	db	111	;'o'
   290   00FE62  20                 	db	32
   291   00FE63  64                 	db	100	;'d'
   292   00FE64  65                 	db	101	;'e'
   293   00FE65  20                 	db	32
   294   00FE66  65                 	db	101	;'e'
   295   00FE67  6E                 	db	110	;'n'
   296   00FE68  64                 	db	100	;'d'
   297   00FE69  65                 	db	101	;'e'
   298   00FE6A  72                 	db	114	;'r'
   299   00FE6B  65                 	db	101	;'e'
   300   00FE6C  63                 	db	99	;'c'
   301   00FE6D  61                 	db	97	;'a'
   302   00FE6E  6D                 	db	109	;'m'
   303   00FE6F  65                 	db	101	;'e'
   304   00FE70  6E                 	db	110	;'n'
   305   00FE71  74                 	db	116	;'t'
   306   00FE72  6F                 	db	111	;'o'
   307   00FE73  2E                 	db	46
   308   00FE74  2E                 	db	46
   309   00FE75  2E                 	db	46
   310   00FE76  0A                 	db	10
   311   00FE77  00                 	db	0
   312   00FE78                     STR_7:
   313   00FE78  41                 	db	65	;'A'
   314   00FE79  6C                 	db	108	;'l'
   315   00FE7A  74                 	db	116	;'t'
   316   00FE7B  65                 	db	101	;'e'
   317   00FE7C  72                 	db	114	;'r'
   318   00FE7D  61                 	db	97	;'a'
   319   00FE7E  6E                 	db	110	;'n'
   320   00FE7F  64                 	db	100	;'d'
   321   00FE80  6F                 	db	111	;'o'
   322   00FE81  20                 	db	32
   323   00FE82  6F                 	db	111	;'o'
   324   00FE83  20                 	db	32
   325   00FE84  65                 	db	101	;'e'
   326   00FE85  6E                 	db	110	;'n'
   327   00FE86  64                 	db	100	;'d'
   328   00FE87  65                 	db	101	;'e'
   329   00FE88  72                 	db	114	;'r'
   330   00FE89  65                 	db	101	;'e'
   331   00FE8A  3C                 	db	60	;'<'
   332   00FE8B  45                 	db	69	;'E'
   333   00FE8C  37                 	db	55	;'7'
   334   00FE8D  3E                 	db	62	;'>'
   335   00FE8E  6F                 	db	111	;'o'
   336   00FE8F  20                 	db	32
   337   00FE90  70                 	db	112	;'p'
   338   00FE91  61                 	db	97	;'a'
   339   00FE92  72                 	db	114	;'r'
   340   00FE93  61                 	db	97	;'a'
   341   00FE94  3A                 	db	58	;':'
   342   00FE95  20                 	db	32
   343   00FE96  30                 	db	48	;'0'
   344   00FE97  78                 	db	120	;'x'
   345   00FE98  31                 	db	49	;'1'
   346   00FE99  32                 	db	50	;'2'
   347   00FE9A  35                 	db	53	;'5'
   348   00FE9B  36                 	db	54	;'6'
   349   00FE9C  34                 	db	52	;'4'
   350   00FE9D  37                 	db	55	;'7'
   351   00FE9E  38                 	db	56	;'8'
   352   00FE9F  39                 	db	57	;'9'
   353   00FEA0  0A                 	db	10
   354   00FEA1  00                 	db	0
   355   00FEA2                     STR_4:
   356   00FEA2  48                 	db	72	;'H'
   357   00FEA3  61                 	db	97	;'a'
   358   00FEA4  20                 	db	32
   359   00FEA5  61                 	db	97	;'a'
   360   00FEA6  6C                 	db	108	;'l'
   361   00FEA7  67                 	db	103	;'g'
   362   00FEA8  6F                 	db	111	;'o'
   363   00FEA9  20                 	db	32
   364   00FEAA  64                 	db	100	;'d'
   365   00FEAB  65                 	db	101	;'e'
   366   00FEAC  20                 	db	32
   367   00FEAD  65                 	db	101	;'e'
   368   00FEAE  72                 	db	114	;'r'
   369   00FEAF  72                 	db	114	;'r'
   370   00FEB0  61                 	db	97	;'a'
   371   00FEB1  64                 	db	100	;'d'
   372   00FEB2  6F                 	db	111	;'o'
   373   00FEB3  20                 	db	32
   374   00FEB4  63                 	db	99	;'c'
   375   00FEB5  6F                 	db	111	;'o'
   376   00FEB6  6D                 	db	109	;'m'
   377   00FEB7  20                 	db	32
   378   00FEB8  61                 	db	97	;'a'
   379   00FEB9  20                 	db	32
   380   00FEBA  6D                 	db	109	;'m'
   381   00FEBB  65                 	db	101	;'e'
   382   00FEBC  6D                 	db	109	;'m'
   383   00FEBD  6F                 	db	111	;'o'
   384   00FEBE  72                 	db	114	;'r'
   385   00FEBF  69                 	db	105	;'i'
   386   00FEC0  61                 	db	97	;'a'
   387   00FEC1  20                 	db	32
   388   00FEC2  53                 	db	83	;'S'
   389   00FEC3  52                 	db	82	;'R'
   390   00FEC4  41                 	db	65	;'A'
   391   00FEC5  4D                 	db	77	;'M'
   392   00FEC6  21                 	db	33
   393   00FEC7  21                 	db	33
   394   00FEC8  21                 	db	33
   395   00FEC9  0A                 	db	10
   396   00FECA  00                 	db	0
   397   00FECB                     STR_3:
   398   00FECB  4F                 	db	79	;'O'
   399   00FECC  20                 	db	32
   400   00FECD  73                 	db	115	;'s'
   401   00FECE  69                 	db	105	;'i'
   402   00FECF  73                 	db	115	;'s'
   403   00FED0  74                 	db	116	;'t'
   404   00FED1  65                 	db	101	;'e'
   405   00FED2  6D                 	db	109	;'m'
   406   00FED3  61                 	db	97	;'a'
   407   00FED4  20                 	db	32
   408   00FED5  69                 	db	105	;'i'
   409   00FED6  64                 	db	100	;'d'
   410   00FED7  65                 	db	101	;'e'
   411   00FED8  6E                 	db	110	;'n'
   412   00FED9  74                 	db	116	;'t'
   413   00FEDA  69                 	db	105	;'i'
   414   00FEDB  66                 	db	102	;'f'
   415   00FEDC  69                 	db	105	;'i'
   416   00FEDD  63                 	db	99	;'c'
   417   00FEDE  6F                 	db	111	;'o'
   418   00FEDF  75                 	db	117	;'u'
   419   00FEE0  20                 	db	32
   420   00FEE1  61                 	db	97	;'a'
   421   00FEE2  20                 	db	32
   422   00FEE3  6D                 	db	109	;'m'
   423   00FEE4  65                 	db	101	;'e'
   424   00FEE5  6D                 	db	109	;'m'
   425   00FEE6  6F                 	db	111	;'o'
   426   00FEE7  72                 	db	114	;'r'
   427   00FEE8  69                 	db	105	;'i'
   428   00FEE9  61                 	db	97	;'a'
   429   00FEEA  20                 	db	32
   430   00FEEB  53                 	db	83	;'S'
   431   00FEEC  52                 	db	82	;'R'
   432   00FEED  41                 	db	65	;'A'
   433   00FEEE  4D                 	db	77	;'M'
   434   00FEEF  21                 	db	33
   435   00FEF0  21                 	db	33
   436   00FEF1  21                 	db	33
   437   00FEF2  0A                 	db	10
   438   00FEF3  00                 	db	0
   439   00FEF4                     STR_10:
   440   00FEF4  41                 	db	65	;'A'
   441   00FEF5  6C                 	db	108	;'l'
   442   00FEF6  74                 	db	116	;'t'
   443   00FEF7  65                 	db	101	;'e'
   444   00FEF8  72                 	db	114	;'r'
   445   00FEF9  61                 	db	97	;'a'
   446   00FEFA  6E                 	db	110	;'n'
   447   00FEFB  64                 	db	100	;'d'
   448   00FEFC  6F                 	db	111	;'o'
   449   00FEFD  20                 	db	32
   450   00FEFE  6F                 	db	111	;'o'
   451   00FEFF  20                 	db	32
   452   00FF00  63                 	db	99	;'c'
   453   00FF01  72                 	db	114	;'r'
   454   00FF02  63                 	db	99	;'c'
   455   00FF03  20                 	db	32
   456   00FF04  70                 	db	112	;'p'
   457   00FF05  61                 	db	97	;'a'
   458   00FF06  72                 	db	114	;'r'
   459   00FF07  61                 	db	97	;'a'
   460   00FF08  3A                 	db	58	;':'
   461   00FF09  20                 	db	32
   462   00FF0A  30                 	db	48	;'0'
   463   00FF0B  78                 	db	120	;'x'
   464   00FF0C  31                 	db	49	;'1'
   465   00FF0D  32                 	db	50	;'2'
   466   00FF0E  35                 	db	53	;'5'
   467   00FF0F  36                 	db	54	;'6'
   468   00FF10  34                 	db	52	;'4'
   469   00FF11  37                 	db	55	;'7'
   470   00FF12  38                 	db	56	;'8'
   471   00FF13  39                 	db	57	;'9'
   472   00FF14  0A                 	db	10
   473   00FF15  00                 	db	0
   474   00FF16                     STR_6:
   475   00FF16  4F                 	db	79	;'O'
   476   00FF17  20                 	db	32
   477   00FF18  70                 	db	112	;'p'
   478   00FF19  6F                 	db	111	;'o'
   479   00FF1A  6E                 	db	110	;'n'
   480   00FF1B  74                 	db	116	;'t'
   481   00FF1C  65                 	db	101	;'e'
   482   00FF1D  69                 	db	105	;'i'
   483   00FF1E  72                 	db	114	;'r'
   484   00FF1F  6F                 	db	111	;'o'
   485   00FF20  20                 	db	32
   486   00FF21  65                 	db	101	;'e'
   487   00FF22  6E                 	db	110	;'n'
   488   00FF23  63                 	db	99	;'c'
   489   00FF24  6F                 	db	111	;'o'
   490   00FF25  6E                 	db	110	;'n'
   491   00FF26  74                 	db	116	;'t'
   492   00FF27  72                 	db	114	;'r'
   493   00FF28  61                 	db	97	;'a'
   494   00FF29  64                 	db	100	;'d'
   495   00FF2A  6F                 	db	111	;'o'
   496   00FF2B  20                 	db	32
   497   00FF2C  66                 	db	102	;'f'
   498   00FF2D  6F                 	db	111	;'o'
   499   00FF2E  69                 	db	105	;'i'
   500   00FF2F  3A                 	db	58	;':'
   501   00FF30  20                 	db	32
   502   00FF31  30                 	db	48	;'0'
   503   00FF32  78                 	db	120	;'x'
   504   00FF33  25                 	db	37
   505   00FF34  6C                 	db	108	;'l'
   506   00FF35  58                 	db	88	;'X'
   507   00FF36  0A                 	db	10
   508   00FF37  00                 	db	0
   509   00FF38                     STR_12:
   510   00FF38  4F                 	db	79	;'O'
   511   00FF39  20                 	db	32
   512   00FF3A  63                 	db	99	;'c'
   513   00FF3B  72                 	db	114	;'r'
   514   00FF3C  63                 	db	99	;'c'
   515   00FF3D  20                 	db	32
   516   00FF3E  65                 	db	101	;'e'
   517   00FF3F  6E                 	db	110	;'n'
   518   00FF40  63                 	db	99	;'c'
   519   00FF41  6F                 	db	111	;'o'
   520   00FF42  6E                 	db	110	;'n'
   521   00FF43  74                 	db	116	;'t'
   522   00FF44  72                 	db	114	;'r'
   523   00FF45  61                 	db	97	;'a'
   524   00FF46  64                 	db	100	;'d'
   525   00FF47  6F                 	db	111	;'o'
   526   00FF48  20                 	db	32
   527   00FF49  66                 	db	102	;'f'
   528   00FF4A  6F                 	db	111	;'o'
   529   00FF4B  69                 	db	105	;'i'
   530   00FF4C  3A                 	db	58	;':'
   531   00FF4D  20                 	db	32
   532   00FF4E  30                 	db	48	;'0'
   533   00FF4F  78                 	db	120	;'x'
   534   00FF50  25                 	db	37
   535   00FF51  6C                 	db	108	;'l'
   536   00FF52  58                 	db	88	;'X'
   537   00FF53  0A                 	db	10
   538   00FF54  00                 	db	0
   539   00FF55                     STR_8:
   540   00FF55  56                 	db	86	;'V'
   541   00FF56  65                 	db	101	;'e'
   542   00FF57  72                 	db	114	;'r'
   543   00FF58  69                 	db	105	;'i'
   544   00FF59  66                 	db	102	;'f'
   545   00FF5A  69                 	db	105	;'i'
   546   00FF5B  63                 	db	99	;'c'
   547   00FF5C  61                 	db	97	;'a'
   548   00FF5D  6E                 	db	110	;'n'
   549   00FF5E  64                 	db	100	;'d'
   550   00FF5F  6F                 	db	111	;'o'
   551   00FF60  20                 	db	32
   552   00FF61  6F                 	db	111	;'o'
   553   00FF62  20                 	db	32
   554   00FF63  6E                 	db	110	;'n'
   555   00FF64  6F                 	db	111	;'o'
   556   00FF65  76                 	db	118	;'v'
   557   00FF66  6F                 	db	111	;'o'
   558   00FF67  20                 	db	32
   559   00FF68  70                 	db	112	;'p'
   560   00FF69  6F                 	db	111	;'o'
   561   00FF6A  6E                 	db	110	;'n'
   562   00FF6B  74                 	db	116	;'t'
   563   00FF6C  65                 	db	101	;'e'
   564   00FF6D  69                 	db	105	;'i'
   565   00FF6E  72                 	db	114	;'r'
   566   00FF6F  6F                 	db	111	;'o'
   567   00FF70  0A                 	db	10
   568   00FF71  00                 	db	0
   569   00FF72                     STR_14:
   570   00FF72  4F                 	db	79	;'O'
   571   00FF73  20                 	db	32
   572   00FF74  63                 	db	99	;'c'
   573   00FF75  72                 	db	114	;'r'
   574   00FF76  63                 	db	99	;'c'
   575   00FF77  20                 	db	32
   576   00FF78  63                 	db	99	;'c'
   577   00FF79  61                 	db	97	;'a'
   578   00FF7A  6C                 	db	108	;'l'
   579   00FF7B  63                 	db	99	;'c'
   580   00FF7C  75                 	db	117	;'u'
   581   00FF7D  6C                 	db	108	;'l'
   582   00FF7E  61                 	db	97	;'a'
   583   00FF7F  64                 	db	100	;'d'
   584   00FF80  6F                 	db	111	;'o'
   585   00FF81  20                 	db	32
   586   00FF82  66                 	db	102	;'f'
   587   00FF83  6F                 	db	111	;'o'
   588   00FF84  69                 	db	105	;'i'
   589   00FF85  3A                 	db	58	;':'
   590   00FF86  20                 	db	32
   591   00FF87  30                 	db	48	;'0'
   592   00FF88  78                 	db	120	;'x'
   593   00FF89  25                 	db	37
   594   00FF8A  6C                 	db	108	;'l'
   595   00FF8B  58                 	db	88	;'X'
   596   00FF8C  0A                 	db	10
   597   00FF8D  00                 	db	0
   598   00FF8E  69                 	db	105	;'i'
   599   00FF8F  32                 	db	50	;'2'
   600   00FF90  63                 	db	99	;'c'
   601   00FF91  20                 	db	32
   602   00FF92  64                 	db	100	;'d'
   603   00FF93  69                 	db	105	;'i'
   604   00FF94  72                 	db	114	;'r'
   605   00FF95  74                 	db	116	;'t'
   606   00FF96  79                 	db	121	;'y'
   607   00FF97  20                 	db	32
   608   00FF98  6F                 	db	111	;'o'
   609   00FF99  6E                 	db	110	;'n'
   610   00FF9A  20                 	db	32
   611   00FF9B  66                 	db	102	;'f'
   612   00FF9C  69                 	db	105	;'i'
   613   00FF9D  72                 	db	114	;'r'
   614   00FF9E  73                 	db	115	;'s'
   615   00FF9F  74                 	db	116	;'t'
   616   00FFA0  20                 	db	32
   617   00FFA1  63                 	db	99	;'c'
   618   00FFA2  68                 	db	104	;'h'
   619   00FFA3  65                 	db	101	;'e'
   620   00FFA4  63                 	db	99	;'c'
   621   00FFA5  6B                 	db	107	;'k'
   622   00FFA6  0A                 	db	10
   623   00FFA7  00                 	db	0
   624   00FFA8                     STR_11:
   625   00FFA8  56                 	db	86	;'V'
   626   00FFA9  65                 	db	101	;'e'
   627   00FFAA  72                 	db	114	;'r'
   628   00FFAB  69                 	db	105	;'i'
   629   00FFAC  66                 	db	102	;'f'
   630   00FFAD  69                 	db	105	;'i'
   631   00FFAE  63                 	db	99	;'c'
   632   00FFAF  61                 	db	97	;'a'
   633   00FFB0  6E                 	db	110	;'n'
   634   00FFB1  64                 	db	100	;'d'
   635   00FFB2  6F                 	db	111	;'o'
   636   00FFB3  20                 	db	32
   637   00FFB4  6F                 	db	111	;'o'
   638   00FFB5  20                 	db	32
   639   00FFB6  6E                 	db	110	;'n'
   640   00FFB7  6F                 	db	111	;'o'
   641   00FFB8  76                 	db	118	;'v'
   642   00FFB9  6F                 	db	111	;'o'
   643   00FFBA  20                 	db	32
   644   00FFBB  63                 	db	99	;'c'
   645   00FFBC  72                 	db	114	;'r'
   646   00FFBD  63                 	db	99	;'c'
   647   00FFBE  0A                 	db	10
   648   00FFBF  00                 	db	0
   649   00FFC0                     STR_2:
   650   00FFC0  49                 	db	73	;'I'
   651   00FFC1  6E                 	db	110	;'n'
   652   00FFC2  69                 	db	105	;'i'
   653   00FFC3  74                 	db	116	;'t'
   654   00FFC4  20                 	db	32
   655   00FFC5  69                 	db	105	;'i'
   656   00FFC6  32                 	db	50	;'2'
   657   00FFC7  63                 	db	99	;'c'
   658   00FFC8  20                 	db	32
   659   00FFC9  62                 	db	98	;'b'
   660   00FFCA  75                 	db	117	;'u'
   661   00FFCB  73                 	db	115	;'s'
   662   00FFCC  5F                 	db	95	;'_'
   663   00FFCD  72                 	db	114	;'r'
   664   00FFCE  65                 	db	101	;'e'
   665   00FFCF  73                 	db	115	;'s'
   666   00FFD0  65                 	db	101	;'e'
   667   00FFD1  74                 	db	116	;'t'
   668   00FFD2  3A                 	db	58	;':'
   669   00FFD3  20                 	db	32
   670   00FFD4  25                 	db	37
   671   00FFD5  69                 	db	105	;'i'
   672   00FFD6  0A                 	db	10
   673   00FFD7  00                 	db	0
   674   00FFD8                     STR_13:
   675   00FFD8  43                 	db	67	;'C'
   676   00FFD9  61                 	db	97	;'a'
   677   00FFDA  6C                 	db	108	;'l'
   678   00FFDB  63                 	db	99	;'c'
   679   00FFDC  75                 	db	117	;'u'
   680   00FFDD  6C                 	db	108	;'l'
   681   00FFDE  61                 	db	97	;'a'
   682   00FFDF  6E                 	db	110	;'n'
   683   00FFE0  64                 	db	100	;'d'
   684   00FFE1  6F                 	db	111	;'o'
   685   00FFE2  20                 	db	32
   686   00FFE3  6F                 	db	111	;'o'
   687   00FFE4  20                 	db	32
   688   00FFE5  63                 	db	99	;'c'
   689   00FFE6  72                 	db	114	;'r'
   690   00FFE7  63                 	db	99	;'c'
   691   00FFE8  2E                 	db	46
   692   00FFE9  2E                 	db	46
   693   00FFEA  2E                 	db	46
   694   00FFEB  0A                 	db	10
   695   00FFEC  00                 	db	0
   696   00FFED                     STR_1:
   697   00FFED  53                 	db	83	;'S'
   698   00FFEE  69                 	db	105	;'i'
   699   00FFEF  73                 	db	115	;'s'
   700   00FFF0  74                 	db	116	;'t'
   701   00FFF1  65                 	db	101	;'e'
   702   00FFF2  6D                 	db	109	;'m'
   703   00FFF3  61                 	db	97	;'a'
   704   00FFF4  20                 	db	32
   705   00FFF5  49                 	db	73	;'I'
   706   00FFF6  6E                 	db	110	;'n'
   707   00FFF7  69                 	db	105	;'i'
   708   00FFF8  63                 	db	99	;'c'
   709   00FFF9  69                 	db	105	;'i'
   710   00FFFA  61                 	db	97	;'a'
   711   00FFFB  64                 	db	100	;'d'
   712   00FFFC  6F                 	db	111	;'o'
   713   00FFFD  0A                 	db	10
   714   00FFFE  00                 	db	0
   715   00FFFF  00                 	db	0	; dummy byte at the end
   716   000000                     
   717                           	psect	nvBANK0
   718   0000E3                     __pnvBANK0:
   719                           	callstack 0
   720   0000E3                     _TMR1_InterruptHandler:
   721                           	callstack 0
   722   0000E3                     	ds	2
   723   0000E5                     _EUSART1_ErrorHandler:
   724                           	callstack 0
   725   0000E5                     	ds	2
   726   0000E7                     _EUSART1_OverrunErrorHandler:
   727                           	callstack 0
   728   0000E7                     	ds	2
   729   0000E9                     _EUSART1_FramingErrorHandler:
   730                           	callstack 0
   731   0000E9                     	ds	2
   732   000000                     _TMR1	set	4046
   733   000000                     _LATCbits	set	3979
   734   000000                     _LATBbits	set	3978
   735   000000                     _SSP2CON1bits	set	3948
   736   000000                     _TRISBbits	set	3987
   737   000000                     _SSP1STATbits	set	4039
   738   000000                     _SSP1CON2bits	set	4037
   739   000000                     _T1GCONbits	set	4044
   740   000000                     _T1CONbits	set	4045
   741   000000                     _SSP1CON1bits	set	4038
   742   000000                     _TRISCbits	set	3988
   743   000000                     _RCSTA1bits	set	4011
   744   000000                     _TXSTA1bits	set	4012
   745   000000                     _INTCON2bits	set	4081
   746   000000                     _PIE1bits	set	3997
   747   000000                     _PIR1bits	set	3998
   748   000000                     _RCSTA1	set	4011
   749   000000                     _BAUDCON1	set	4024
   750   000000                     _TRISA	set	3986
   751   000000                     _LATC	set	3979
   752   000000                     _LATB	set	3978
   753   000000                     _TRISC	set	3988
   754   000000                     _TRISB	set	3987
   755   000000                     _WPUB	set	3937
   756   000000                     _SSP2CON2	set	3947
   757   000000                     _SSP2CON1	set	3948
   758   000000                     _SSP2STAT	set	3949
   759   000000                     _INTCONbits	set	4082
   760   000000                     _SSP1CON2	set	4037
   761   000000                     _SSP1CON1	set	4038
   762   000000                     _SSP1STAT	set	4039
   763   000000                     _RCONbits	set	4048
   764   000000                     _SPBRGH1	set	4016
   765   000000                     _PIR2bits	set	4001
   766   000000                     _T1GCON	set	4044
   767   000000                     _SSP1BUF	set	4041
   768   000000                     _SSP1ADD	set	4040
   769   000000                     _PIR3bits	set	4004
   770   000000                     _PORTCbits	set	3970
   771   000000                     _SSP2BUF	set	3951
   772   000000                     _SSP2ADD	set	3950
   773                           
   774                           ; #config settings
   775                           
   776                           	psect	cinit
   777   0017BE                     __pcinit:
   778                           	callstack 0
   779   0017BE                     start_initialization:
   780                           	callstack 0
   781   0017BE                     __initialization:
   782                           	callstack 0
   783                           
   784                           ; Initialize objects allocated to BANK0 (11 bytes)
   785                           ; load TBLPTR registers with __pidataBANK0
   786   0017BE  0EB4               	movlw	low __pidataBANK0
   787   0017C0  6EF6               	movwf	tblptrl,c
   788   0017C2  0E1B               	movlw	high __pidataBANK0
   789   0017C4  6EF7               	movwf	tblptrh,c
   790   0017C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   791   0017C8  6EF8               	movwf	tblptru,c
   792   0017CA  EE00  F0D8         	lfsr	0,__pdataBANK0
   793   0017CE  EE10 F00B          	lfsr	1,11
   794   0017D2                     copy_data0:
   795   0017D2  0009               	tblrd		*+
   796   0017D4  CFF5 FFEE          	movff	tablat,postinc0
   797   0017D8  50E5               	movf	postdec1,w,c
   798   0017DA  50E1               	movf	fsr1l,w,c
   799   0017DC  E1FA               	bnz	copy_data0
   800                           
   801                           ; Clear objects allocated to BANK3 (254 bytes)
   802   0017DE  EE03  F000         	lfsr	0,__pbssBANK3
   803   0017E2  0EFE               	movlw	254
   804   0017E4                     clear_0:
   805   0017E4  6AEE               	clrf	postinc0,c
   806   0017E6  06E8               	decf	wreg,f,c
   807   0017E8  E1FD               	bnz	clear_0
   808                           
   809                           ; Clear objects allocated to BANK2 (32 bytes)
   810   0017EA  EE02  F000         	lfsr	0,__pbssBANK2
   811   0017EE  0E20               	movlw	32
   812   0017F0                     clear_1:
   813   0017F0  6AEE               	clrf	postinc0,c
   814   0017F2  06E8               	decf	wreg,f,c
   815   0017F4  E1FD               	bnz	clear_1
   816                           
   817                           ; Clear objects allocated to BANK0 (75 bytes)
   818   0017F6  EE00  F060         	lfsr	0,__pbssBANK0
   819   0017FA  0E4B               	movlw	75
   820   0017FC                     clear_2:
   821   0017FC  6AEE               	clrf	postinc0,c
   822   0017FE  06E8               	decf	wreg,f,c
   823   001800  E1FD               	bnz	clear_2
   824                           
   825                           ; Clear objects allocated to COMRAM (5 bytes)
   826   001802  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   827   001804  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   828   001806  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   829   001808  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   830   00180A  6A56               	clrf	__pbssCOMRAM& (0+255),c
   831   00180C                     end_of_initialization:
   832                           	callstack 0
   833   00180C                     __end_of__initialization:
   834                           	callstack 0
   835   00180C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   836   00180E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   837   001810  0100               	movlb	0
   838   001812  EFC0  F001         	goto	_main	;jump to C main() function
   839                           
   840                           	psect	bssCOMRAM
   841   000056                     __pbssCOMRAM:
   842                           	callstack 0
   843   000056                     _I2Cflags:
   844                           	callstack 0
   845   000056                     	ds	2
   846   000058                     _timer1ReloadVal:
   847                           	callstack 0
   848   000058                     	ds	2
   849   00005A                     _eusart1RxLastError:
   850                           	callstack 0
   851   00005A                     	ds	1
   852                           
   853                           	psect	bssBANK0
   854   000060                     __pbssBANK0:
   855                           	callstack 0
   856   000060                     _I2C1_Status:
   857                           	callstack 0
   858   000060                     	ds	36
   859   000084                     _AT45dbxx:
   860                           	callstack 0
   861   000084                     	ds	6
   862   00008A                     _timer_overflow_count:
   863                           	callstack 0
   864   00008A                     	ds	4
   865   00008E                     __millis:
   866                           	callstack 0
   867   00008E                     	ds	4
   868   000092                     __micros:
   869                           	callstack 0
   870   000092                     	ds	4
   871   000096                     _fsscape_SRAM_index_addr:
   872                           	callstack 0
   873   000096                     	ds	4
   874   00009A                     _myi_AT45dbxx:
   875                           	callstack 0
   876   00009A                     	ds	4
   877   00009E                     _width:
   878                           	callstack 0
   879   00009E                     	ds	2
   880   0000A0                     _prec:
   881                           	callstack 0
   882   0000A0                     	ds	2
   883   0000A2                     _FsScape_CSbit:
   884                           	callstack 0
   885   0000A2                     	ds	2
   886   0000A4                     _FsScape_CS:
   887                           	callstack 0
   888   0000A4                     	ds	2
   889   0000A6                     _flags:
   890                           	callstack 0
   891   0000A6                     	ds	1
   892   0000A7                     _timer_fract:
   893                           	callstack 0
   894   0000A7                     	ds	1
   895   0000A8                     _FsScape_i2c_FLASH_addr:
   896                           	callstack 0
   897   0000A8                     	ds	1
   898   0000A9                     _FsScape_i2c_EEPROM_addr:
   899                           	callstack 0
   900   0000A9                     	ds	1
   901   0000AA                     _FsScape_i2c_SRAM_addr:
   902                           	callstack 0
   903   0000AA                     	ds	1
   904                           
   905                           	psect	dataBANK0
   906   0000D8                     __pdataBANK0:
   907                           	callstack 0
   908   0000D8                     main@F6387:
   909                           	callstack 0
   910   0000D8                     	ds	11
   911                           
   912                           	psect	bssBANK2
   913   000200                     __pbssBANK2:
   914                           	callstack 0
   915   000200                     _dbuf:
   916                           	callstack 0
   917   000200                     	ds	32
   918                           
   919                           	psect	bssBANK3
   920   000300                     __pbssBANK3:
   921                           	callstack 0
   922   000300                     	ds	254
   923                           
   924                           	psect	cstackBANK1
   925   000100                     __pcstackBANK1:
   926                           	callstack 0
   927   000100                     main@valoresrx:
   928                           	callstack 0
   929                           
   930                           ; 254 bytes @ 0x0
   931   000100                     	ds	254
   932                           
   933                           	psect	cstackBANK0
   934   0000AB                     __pcstackBANK0:
   935                           	callstack 0
   936   0000AB                     main@valorestx:
   937                           	callstack 0
   938                           
   939                           ; 11 bytes @ 0x0
   940   0000AB                     	ds	11
   941   0000B6                     main@valor:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0xB
   945   0000B6                     	ds	1
   946   0000B7                     main@valor2:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0xC
   950   0000B7                     	ds	1
   951   0000B8                     main@temp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0xD
   955   0000B8                     	ds	1
   956   0000B9                     main@temp2:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0xE
   960   0000B9                     	ds	1
   961   0000BA                     main@bus_reset:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0xF
   965   0000BA                     	ds	2
   966   0000BC                     main@adressme3:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x11
   970   0000BC                     	ds	4
   971   0000C0                     main@check1:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x15
   975   0000C0                     	ds	4
   976   0000C4                     main@check3:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x19
   980   0000C4                     	ds	4
   981   0000C8                     main@check4:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x1D
   985   0000C8                     	ds	4
   986   0000CC                     main@adressme:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x21
   990   0000CC                     	ds	4
   991   0000D0                     main@adressme2:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x25
   995   0000D0                     	ds	4
   996   0000D4                     main@check2:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x29
  1000   0000D4                     	ds	4
  1001                           
  1002                           	psect	cstackCOMRAM
  1003   000001                     __pcstackCOMRAM:
  1004                           	callstack 0
  1005   000001                     TMR1_WriteTimer@timerVal:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x0
  1009   000001                     	ds	2
  1010   000003                     ??_INTERRUPT_InterruptManager:
  1011   000003                     
  1012                           ; 1 bytes @ 0x2
  1013   000003                     	ds	2
  1014   000005                     ?_I2C2_M_BusReset:
  1015                           	callstack 0
  1016   000005                     ?_I2C2_M_Start:
  1017                           	callstack 0
  1018   000005                     ?_I2C2_M_WriteByte:
  1019                           	callstack 0
  1020   000005                     ?_I2C2_M_Stop:
  1021                           	callstack 0
  1022   000005                     ?_I2C2_M_Restart:
  1023                           	callstack 0
  1024   000005                     ?_I2C2_M_ReadByte:
  1025                           	callstack 0
  1026   000005                     ?_millis:
  1027                           	callstack 0
  1028   000005                     ?_calculate_crc32:
  1029                           	callstack 0
  1030   000005                     ?___lldiv:
  1031                           	callstack 0
  1032   000005                     ?___aldiv:
  1033                           	callstack 0
  1034   000005                     ?___almod:
  1035                           	callstack 0
  1036   000005                     EUSART1_Write@txData:
  1037                           	callstack 0
  1038   000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1039                           	callstack 0
  1040   000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1041                           	callstack 0
  1042   000005                     EUSART1_SetErrorHandler@interruptHandler:
  1043                           	callstack 0
  1044   000005                     TMR1_SetInterruptHandler@InterruptHandler:
  1045                           	callstack 0
  1046   000005                     calculate_crc32@state:
  1047                           	callstack 0
  1048   000005                     ___lldiv@dividend:
  1049                           	callstack 0
  1050   000005                     ___aldiv@dividend:
  1051                           	callstack 0
  1052   000005                     ___almod@dividend:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x4
  1056   000005                     	ds	1
  1057   000006                     putch@txData:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x5
  1061   000006                     	ds	1
  1062   000007                     I2C2_M_ReadByte@ACKflag:
  1063                           	callstack 0
  1064   000007                     I2C2_M_WriteByte@cData:
  1065                           	callstack 0
  1066   000007                     I2C2_M_BusReset@i:
  1067                           	callstack 0
  1068   000007                     I2C2_M_Restart@t:
  1069                           	callstack 0
  1070   000007                     I2C2_M_Start@t:
  1071                           	callstack 0
  1072   000007                     I2C2_M_Stop@t:
  1073                           	callstack 0
  1074   000007                     fputc@c:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x6
  1078   000007                     	ds	1
  1079   000008                     I2C2_M_ReadByte@t:
  1080                           	callstack 0
  1081   000008                     I2C2_M_WriteByte@t:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x7
  1085   000008                     	ds	1
  1086   000009                     ?_I2C2_M_RecoverBus:
  1087                           	callstack 0
  1088   000009                     calculate_crc32@data:
  1089                           	callstack 0
  1090   000009                     fputc@fp:
  1091                           	callstack 0
  1092   000009                     millis@m:
  1093                           	callstack 0
  1094   000009                     ___lldiv@divisor:
  1095                           	callstack 0
  1096   000009                     ___aldiv@divisor:
  1097                           	callstack 0
  1098   000009                     ___almod@divisor:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x8
  1102   000009                     	ds	1
  1103   00000A                     ??_calculate_crc32:
  1104   00000A                     ?_I2C_Mem_Write:
  1105                           	callstack 0
  1106   00000A                     ?_I2C_Mem_Read:
  1107                           	callstack 0
  1108   00000A                     I2C_Mem_Write@MemAdress:
  1109                           	callstack 0
  1110   00000A                     I2C_Mem_Read@MemAdress:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x9
  1114   00000A                     	ds	1
  1115   00000B                     ??_fputc:
  1116   00000B                     I2C2_M_RecoverBus@status:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xA
  1120   00000B                     	ds	1
  1121   00000C                     I2C_Mem_Write@MemAddSize:
  1122                           	callstack 0
  1123   00000C                     I2C_Mem_Read@MemAddSize:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0xB
  1127   00000C                     	ds	1
  1128   00000D                     ?_I2C2_M_Poll:
  1129                           	callstack 0
  1130   00000D                     ___aldiv@counter:
  1131                           	callstack 0
  1132   00000D                     ___almod@counter:
  1133                           	callstack 0
  1134   00000D                     ___lldiv@quotient:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0xC
  1138   00000D                     	ds	1
  1139   00000E                     ___aldiv@sign:
  1140                           	callstack 0
  1141   00000E                     ___almod@sign:
  1142                           	callstack 0
  1143   00000E                     I2C_Mem_Write@pData:
  1144                           	callstack 0
  1145   00000E                     I2C_Mem_Read@pData:
  1146                           	callstack 0
  1147   00000E                     calculate_crc32@b:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0xD
  1151   00000E                     	ds	1
  1152   00000F                     ?_abs:
  1153                           	callstack 0
  1154   00000F                     I2C2_M_Poll@DevAddr:
  1155                           	callstack 0
  1156   00000F                     abs@a:
  1157                           	callstack 0
  1158   00000F                     ___aldiv@quotient:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0xE
  1162   00000F                     	ds	1
  1163   000010                     I2C2_M_Poll@SlaveAddr:
  1164                           	callstack 0
  1165   000010                     I2C_Mem_Write@Size:
  1166                           	callstack 0
  1167   000010                     I2C_Mem_Read@Size:
  1168                           	callstack 0
  1169   000010                     fputs@s:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xF
  1173   000010                     	ds	1
  1174   000011                     ??_abs:
  1175   000011                     ___lldiv@counter:
  1176                           	callstack 0
  1177   000011                     I2C2_M_Poll@retval:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x10
  1181   000011                     	ds	1
  1182   000012                     calculate_crc32@j:
  1183                           	callstack 0
  1184   000012                     fputs@fp:
  1185                           	callstack 0
  1186   000012                     I2C_ModuleStart@clock_output:
  1187                           	callstack 0
  1188   000012                     I2C_Mem_Write@Timeout:
  1189                           	callstack 0
  1190   000012                     I2C_Mem_Read@Timeout:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x11
  1194   000012                     	ds	2
  1195   000014                     fputs@c:
  1196                           	callstack 0
  1197   000014                     calculate_crc32@crc:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x13
  1201   000014                     	ds	1
  1202   000015                     fputs@i:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x14
  1206   000015                     	ds	1
  1207   000016                     ??_I2C_Mem_Read:
  1208   000016                     I2C_Mem_Write@DevAddress:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x15
  1212   000016                     	ds	1
  1213   000017                     I2C_Mem_Write@SlaveAddr:
  1214                           	callstack 0
  1215   000017                     pad@fp:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x16
  1219   000017                     	ds	1
  1220   000018                     ?_calculate_crc32_buffer:
  1221                           	callstack 0
  1222   000018                     I2C_Mem_Read@DevAddress:
  1223                           	callstack 0
  1224   000018                     I2C_Mem_Write@retval:
  1225                           	callstack 0
  1226   000018                     calculate_crc32_buffer@buffer:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x17
  1230   000018                     	ds	1
  1231   000019                     I2C_Mem_Read@SlaveAddr:
  1232                           	callstack 0
  1233   000019                     pad@buf:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x18
  1237   000019                     	ds	1
  1238   00001A                     calculate_crc32_buffer@size:
  1239                           	callstack 0
  1240   00001A                     I2C_Mem_Write@i:
  1241                           	callstack 0
  1242   00001A                     I2C_Mem_Read@i:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x19
  1246   00001A                     	ds	1
  1247   00001B                     pad@p:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x1A
  1251   00001B                     	ds	1
  1252   00001C                     I2C_Mem_Read@retval:
  1253                           	callstack 0
  1254   00001C                     FsScape_set_index_SRAM@address_value:
  1255                           	callstack 0
  1256   00001C                     FsScape_set_index_crc_SRAM@crc_value:
  1257                           	callstack 0
  1258   00001C                     calculate_crc32_buffer@crc:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x1B
  1262   00001C                     	ds	1
  1263   00001D                     ??_pad:
  1264                           
  1265                           ; 1 bytes @ 0x1C
  1266   00001D                     	ds	1
  1267   00001E                     FsScape_get_index_SRAM@address:
  1268                           	callstack 0
  1269   00001E                     FsScape_get_index_crc_SRAM@crc:
  1270                           	callstack 0
  1271   00001E                     pad@i:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x1D
  1275   00001E                     	ds	2
  1276   000020                     ??_FsScape_get_index_SRAM:
  1277   000020                     ??_FsScape_get_index_crc_SRAM:
  1278   000020                     calculate_crc32_buffer@i:
  1279                           	callstack 0
  1280   000020                     pad@w:
  1281                           	callstack 0
  1282   000020                     FsScape_set_index_SRAM@_address:
  1283                           	callstack 0
  1284   000020                     FsScape_set_index_crc_SRAM@_address:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x1F
  1288   000020                     	ds	1
  1289   000021                     ?_FsScape_check_index_crc:
  1290                           	callstack 0
  1291   000021                     FsScape_check_index_crc@crc_value:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x20
  1295   000021                     	ds	1
  1296   000022                     dtoa@fp:
  1297                           	callstack 0
  1298   000022                     xtoa@fp:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x21
  1302   000022                     	ds	2
  1303   000024                     dtoa@d:
  1304                           	callstack 0
  1305   000024                     xtoa@d:
  1306                           	callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x23
  1309   000024                     	ds	1
  1310   000025                     FsScape_check_index_crc@_address:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x24
  1314   000025                     	ds	3
  1315   000028                     ??_xtoa:
  1316   000028                     _dtoa$3526:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x27
  1320   000028                     	ds	1
  1321   000029                     FsScape_check_index_crc@crc_computed:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x28
  1325   000029                     	ds	1
  1326   00002A                     dtoa@p:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x29
  1330   00002A                     	ds	2
  1331   00002C                     dtoa@w:
  1332                           	callstack 0
  1333   00002C                     xtoa@w:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x2B
  1337   00002C                     	ds	2
  1338   00002E                     dtoa@s:
  1339                           	callstack 0
  1340   00002E                     _xtoa$3535:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x2D
  1344   00002E                     	ds	1
  1345   00002F                     dtoa@i:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x2E
  1349   00002F                     	ds	1
  1350   000030                     xtoa@p:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x2F
  1354   000030                     	ds	2
  1355   000032                     xtoa@i:
  1356                           	callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x31
  1359   000032                     	ds	2
  1360   000034                     xtoa@c:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x33
  1364   000034                     	ds	1
  1365   000035                     vfpfcnvrt@fp:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x34
  1369   000035                     	ds	2
  1370   000037                     vfpfcnvrt@fmt:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x36
  1374   000037                     	ds	1
  1375   000038                     FsScape_get_index_SRAM@_address:
  1376                           	callstack 0
  1377   000038                     FsScape_get_index_crc_SRAM@_address:
  1378                           	callstack 0
  1379                           
  1380                           ; 4 bytes @ 0x37
  1381   000038                     	ds	1
  1382   000039                     vfpfcnvrt@ap:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x38
  1386   000039                     	ds	2
  1387   00003B                     ??_vfpfcnvrt:
  1388                           
  1389                           ; 1 bytes @ 0x3A
  1390   00003B                     	ds	1
  1391   00003C                     FsScape_get_index_SRAM@value:
  1392                           	callstack 0
  1393   00003C                     FsScape_get_index_crc_SRAM@value:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x3B
  1397   00003C                     	ds	3
  1398   00003F                     vfpfcnvrt@convarg:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x3E
  1402   00003F                     	ds	4
  1403   000043                     vfpfcnvrt@c:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x42
  1407   000043                     	ds	1
  1408   000044                     vfpfcnvrt@cp:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x43
  1412   000044                     	ds	2
  1413   000046                     ?_vfprintf:
  1414                           	callstack 0
  1415   000046                     vfprintf@fp:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x45
  1419   000046                     	ds	2
  1420   000048                     vfprintf@fmt:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x47
  1424   000048                     	ds	2
  1425   00004A                     vfprintf@ap:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x49
  1429   00004A                     	ds	2
  1430   00004C                     vfprintf@cfmt:
  1431                           	callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x4B
  1434   00004C                     	ds	2
  1435   00004E                     ?_printf:
  1436                           	callstack 0
  1437   00004E                     printf@fmt:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x4D
  1441   00004E                     	ds	6
  1442   000054                     printf@ap:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x53
  1446   000054                     	ds	2
  1447   000056                     
  1448                           ; 1 bytes @ 0x55
  1449 ;;
  1450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1451 ;;
  1452 ;; *************** function _main *****************
  1453 ;; Defined at:
  1454 ;;		line 61 in file "main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  valoresrx     254    0[BANK1 ] unsigned char [254]
  1459 ;;  valorestx      11    0[BANK0 ] unsigned char [11]
  1460 ;;  check2          4   41[BANK0 ] volatile unsigned long 
  1461 ;;  adressme2       4   37[BANK0 ] volatile unsigned long 
  1462 ;;  adressme        4   33[BANK0 ] volatile unsigned long 
  1463 ;;  check4          4   29[BANK0 ] volatile unsigned long 
  1464 ;;  check3          4   25[BANK0 ] volatile unsigned long 
  1465 ;;  check1          4   21[BANK0 ] volatile unsigned long 
  1466 ;;  adressme3       4   17[BANK0 ] volatile unsigned long 
  1467 ;;  endereco_atu    4    0        struct .
  1468 ;;  oldtime         4    0        unsigned long 
  1469 ;;  teste           4    0        unsigned char [4]
  1470 ;;  bus_reset       2   15[BANK0 ] volatile short 
  1471 ;;  temp2           1   14[BANK0 ] volatile unsigned char 
  1472 ;;  temp            1   13[BANK0 ] volatile unsigned char 
  1473 ;;  valor2          1   12[BANK0 ] volatile unsigned char 
  1474 ;;  valor           1   11[BANK0 ] volatile unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Locals:         0      45     254       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Totals:         0      45     254       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;Total ram usage:      299 bytes
  1489 ;; Hardware stack levels required when called: 12
  1490 ;; This function calls:
  1491 ;;		_FsScape_check_index_crc
  1492 ;;		_FsScape_get_index_SRAM
  1493 ;;		_FsScape_get_index_crc_SRAM
  1494 ;;		_FsScape_set_index_SRAM
  1495 ;;		_FsScape_set_index_crc_SRAM
  1496 ;;		_I2C2_M_BusReset
  1497 ;;		_I2C2_M_Poll
  1498 ;;		_I2C_HWini
  1499 ;;		_I2C_ModuleStart
  1500 ;;		_I2C_ModuleStop
  1501 ;;		_SYSTEM_Initialize
  1502 ;;		_TMR1_SetInterruptHandler
  1503 ;;		_millis
  1504 ;;		_printf
  1505 ;; This function is called by:
  1506 ;;		Startup code after reset
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text0
  1511   000380                     __ptext0:
  1512                           	callstack 0
  1513   000380                     _main:
  1514                           	callstack 19
  1515   000380                     
  1516                           ;main.c: 64:     char valorestx[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', '
      +                          k'};
  1517   000380  EE20  F0D8         	lfsr	2,main@F6387
  1518   000384  EE10  F0AB         	lfsr	1,main@valorestx
  1519   000388  0E0A               	movlw	10
  1520   00038A                     u5471:
  1521   00038A  CFDB FFE3          	movff	plusw2,plusw1
  1522   00038E  06E8               	decf	wreg,f,c
  1523   000390  E2FC               	bc	u5471
  1524   000392                     
  1525                           ;main.c: 65:     uint8_t valoresrx[254] = {0};
  1526   000392  EE21  F000         	lfsr	2,main@valoresrx
  1527   000396  0EFD               	movlw	253
  1528   000398                     u5481:
  1529   000398  6ADE               	clrf	postinc2,c
  1530   00039A  06E8               	decf	wreg,f,c
  1531   00039C  E2FD               	bc	u5481
  1532   00039E                     
  1533                           ;main.c: 66:     volatile uint8_t valor = 0;
  1534   00039E  0E00               	movlw	0
  1535   0003A0  0100               	movlb	0	; () banked
  1536   0003A2  6FB6               	movwf	main@valor& (0+255),b	;volatile
  1537   0003A4                     
  1538                           ; BSR set to: 0
  1539                           ;main.c: 67:     volatile uint8_t valor2 = 0;
  1540   0003A4  0E00               	movlw	0
  1541   0003A6  6FB7               	movwf	main@valor2& (0+255),b	;volatile
  1542   0003A8                     
  1543                           ; BSR set to: 0
  1544                           ;main.c: 68:     volatile int16_t bus_reset;;main.c: 69:     volatile uint8_t temp = 0;
  1545   0003A8  0E00               	movlw	0
  1546   0003AA  6FB8               	movwf	main@temp& (0+255),b	;volatile
  1547   0003AC                     
  1548                           ; BSR set to: 0
  1549                           ;main.c: 70:     volatile uint8_t temp2 = 0;
  1550   0003AC  0E00               	movlw	0
  1551   0003AE  6FB9               	movwf	main@temp2& (0+255),b	;volatile
  1552   0003B0                     
  1553                           ; BSR set to: 0
  1554                           ;main.c: 73:     SYSTEM_Initialize();
  1555   0003B0  EC9E  F00D         	call	_SYSTEM_Initialize	;wreg free
  1556   0003B4  8A8A               	bsf	138,5,c	;volatile
  1557   0003B6                     
  1558                           ;main.c: 76:     TMR1_SetInterruptHandler(increment_interrupt);
  1559   0003B6  0E96               	movlw	low _increment_interrupt
  1560   0003B8  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1561   0003BA  0E1B               	movlw	high _increment_interrupt
  1562   0003BC  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1563   0003BE  ECE5  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
  1564   0003C2                     
  1565                           ;main.c: 80:     RCONbits.SBOREN = 0;
  1566   0003C2  9CD0               	bcf	208,6,c	;volatile
  1567   0003C4                     
  1568                           ;main.c: 89:     (INTCONbits.GIE = 1);
  1569   0003C4  8EF2               	bsf	242,7,c	;volatile
  1570   0003C6                     
  1571                           ;main.c: 95:     (INTCONbits.PEIE = 1);
  1572   0003C6  8CF2               	bsf	242,6,c	;volatile
  1573   0003C8                     
  1574                           ;main.c: 104:     uint8_t teste[4];;main.c: 105:     volatile uint32_t adressme = 0;
  1575   0003C8  0E00               	movlw	0
  1576   0003CA  0100               	movlb	0	; () banked
  1577   0003CC  6FCC               	movwf	main@adressme& (0+255),b	;volatile
  1578   0003CE  0E00               	movlw	0
  1579   0003D0  6FCD               	movwf	(main@adressme+1)& (0+255),b	;volatile
  1580   0003D2  0E00               	movlw	0
  1581   0003D4  6FCE               	movwf	(main@adressme+2)& (0+255),b	;volatile
  1582   0003D6  0E00               	movlw	0
  1583   0003D8  6FCF               	movwf	(main@adressme+3)& (0+255),b	;volatile
  1584   0003DA                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 106:     volatile uint32_t adressme2 = 0;
  1587   0003DA  0E00               	movlw	0
  1588   0003DC  6FD0               	movwf	main@adressme2& (0+255),b	;volatile
  1589   0003DE  0E00               	movlw	0
  1590   0003E0  6FD1               	movwf	(main@adressme2+1)& (0+255),b	;volatile
  1591   0003E2  0E00               	movlw	0
  1592   0003E4  6FD2               	movwf	(main@adressme2+2)& (0+255),b	;volatile
  1593   0003E6  0E00               	movlw	0
  1594   0003E8  6FD3               	movwf	(main@adressme2+3)& (0+255),b	;volatile
  1595   0003EA                     
  1596                           ; BSR set to: 0
  1597                           ;main.c: 107:     volatile uint32_t adressme3 = 0;
  1598   0003EA  0E00               	movlw	0
  1599   0003EC  6FBC               	movwf	main@adressme3& (0+255),b	;volatile
  1600   0003EE  0E00               	movlw	0
  1601   0003F0  6FBD               	movwf	(main@adressme3+1)& (0+255),b	;volatile
  1602   0003F2  0E00               	movlw	0
  1603   0003F4  6FBE               	movwf	(main@adressme3+2)& (0+255),b	;volatile
  1604   0003F6  0E00               	movlw	0
  1605   0003F8  6FBF               	movwf	(main@adressme3+3)& (0+255),b	;volatile
  1606   0003FA                     
  1607                           ; BSR set to: 0
  1608                           ;main.c: 108:     volatile uint32_t check1 = 0;
  1609   0003FA  0E00               	movlw	0
  1610   0003FC  6FC0               	movwf	main@check1& (0+255),b	;volatile
  1611   0003FE  0E00               	movlw	0
  1612   000400  6FC1               	movwf	(main@check1+1)& (0+255),b	;volatile
  1613   000402  0E00               	movlw	0
  1614   000404  6FC2               	movwf	(main@check1+2)& (0+255),b	;volatile
  1615   000406  0E00               	movlw	0
  1616   000408  6FC3               	movwf	(main@check1+3)& (0+255),b	;volatile
  1617   00040A                     
  1618                           ; BSR set to: 0
  1619                           ;main.c: 109:     volatile uint32_t check2 = 0;
  1620   00040A  0E00               	movlw	0
  1621   00040C  6FD4               	movwf	main@check2& (0+255),b	;volatile
  1622   00040E  0E00               	movlw	0
  1623   000410  6FD5               	movwf	(main@check2+1)& (0+255),b	;volatile
  1624   000412  0E00               	movlw	0
  1625   000414  6FD6               	movwf	(main@check2+2)& (0+255),b	;volatile
  1626   000416  0E00               	movlw	0
  1627   000418  6FD7               	movwf	(main@check2+3)& (0+255),b	;volatile
  1628   00041A                     
  1629                           ; BSR set to: 0
  1630                           ;main.c: 110:     volatile uint32_t check3 = 0;
  1631   00041A  0E00               	movlw	0
  1632   00041C  6FC4               	movwf	main@check3& (0+255),b	;volatile
  1633   00041E  0E00               	movlw	0
  1634   000420  6FC5               	movwf	(main@check3+1)& (0+255),b	;volatile
  1635   000422  0E00               	movlw	0
  1636   000424  6FC6               	movwf	(main@check3+2)& (0+255),b	;volatile
  1637   000426  0E00               	movlw	0
  1638   000428  6FC7               	movwf	(main@check3+3)& (0+255),b	;volatile
  1639   00042A                     
  1640                           ; BSR set to: 0
  1641                           ;main.c: 111:     volatile uint32_t check4 = 0;
  1642   00042A  0E00               	movlw	0
  1643   00042C  6FC8               	movwf	main@check4& (0+255),b	;volatile
  1644   00042E  0E00               	movlw	0
  1645   000430  6FC9               	movwf	(main@check4+1)& (0+255),b	;volatile
  1646   000432  0E00               	movlw	0
  1647   000434  6FCA               	movwf	(main@check4+2)& (0+255),b	;volatile
  1648   000436  0E00               	movlw	0
  1649   000438  6FCB               	movwf	(main@check4+3)& (0+255),b	;volatile
  1650   00043A                     
  1651                           ; BSR set to: 0
  1652   00043A  EC8B  F00D         	call	_millis	;wreg free
  1653   00043E                     
  1654                           ;main.c: 115:     printf("Sistema Iniciado\n");
  1655   00043E  0EED               	movlw	low STR_1
  1656   000440  6E4E               	movwf	printf@fmt^0,c
  1657   000442  0EFF               	movlw	high STR_1
  1658   000444  6E4F               	movwf	(printf@fmt+1)^0,c
  1659   000446  EC78  F00D         	call	_printf	;wreg free
  1660   00044A                     
  1661                           ;main.c: 118:     I2C_HWini();
  1662   00044A  ECFD  F00D         	call	_I2C_HWini	;wreg free
  1663   00044E                     
  1664                           ;main.c: 119:     I2C_ModuleStart(400000UL);
  1665   00044E  0E80               	movlw	128
  1666   000450  6E12               	movwf	I2C_ModuleStart@clock_output^0,c
  1667   000452  0E1A               	movlw	26
  1668   000454  6E13               	movwf	(I2C_ModuleStart@clock_output+1)^0,c
  1669   000456  0E06               	movlw	6
  1670   000458  6E14               	movwf	(I2C_ModuleStart@clock_output+2)^0,c
  1671   00045A  0E00               	movlw	0
  1672   00045C  6E15               	movwf	(I2C_ModuleStart@clock_output+3)^0,c
  1673   00045E  ECAF  F00B         	call	_I2C_ModuleStart	;wreg free
  1674   000462                     
  1675                           ;main.c: 120:     bus_reset = I2C2_M_BusReset();
  1676   000462  EC21  F009         	call	_I2C2_M_BusReset	;wreg free
  1677   000466  C005  F0BA         	movff	?_I2C2_M_BusReset,main@bus_reset	;volatile
  1678   00046A  C006  F0BB         	movff	?_I2C2_M_BusReset+1,main@bus_reset+1	;volatile
  1679   00046E                     
  1680                           ;main.c: 121:     printf("Init i2c bus_reset: %i\n", bus_reset);
  1681   00046E  0EC0               	movlw	low STR_2
  1682   000470  6E4E               	movwf	printf@fmt^0,c
  1683   000472  0EFF               	movlw	high STR_2
  1684   000474  6E4F               	movwf	(printf@fmt+1)^0,c
  1685   000476  C0BA  F050         	movff	main@bus_reset,?_printf+2	;volatile
  1686   00047A  C0BB  F051         	movff	main@bus_reset+1,?_printf+3	;volatile
  1687   00047E  EC78  F00D         	call	_printf	;wreg free
  1688   000482                     
  1689                           ;main.c: 124:     if(I2C2_M_Poll(0xDE) == 0)
  1690   000482  0EDE               	movlw	222
  1691   000484  ECBC  F008         	call	_I2C2_M_Poll
  1692   000488  500D               	movf	?_I2C2_M_Poll^0,w,c
  1693   00048A  100E               	iorwf	(?_I2C2_M_Poll+1)^0,w,c
  1694   00048C  A4D8               	btfss	status,2,c
  1695   00048E  EF4B  F002         	goto	u5491
  1696   000492  EF4D  F002         	goto	u5490
  1697   000496                     u5491:
  1698   000496  EF55  F002         	goto	l7897
  1699   00049A                     u5490:
  1700   00049A                     
  1701                           ;main.c: 125:     {;main.c: 126:         printf("O sistema identificou a memoria SRAM!!!
      +                          \n");
  1702   00049A  0ECB               	movlw	low STR_3
  1703   00049C  6E4E               	movwf	printf@fmt^0,c
  1704   00049E  0EFE               	movlw	high STR_3
  1705   0004A0  6E4F               	movwf	(printf@fmt+1)^0,c
  1706   0004A2  EC78  F00D         	call	_printf	;wreg free
  1707                           
  1708                           ;main.c: 127:     }
  1709   0004A6  EF5B  F002         	goto	l842
  1710   0004AA                     l7897:
  1711                           
  1712                           ;main.c: 129:     {;main.c: 130:         printf("Ha algo de errado com a memoria SRAM!!!
      +                          \n");
  1713   0004AA  0EA2               	movlw	low STR_4
  1714   0004AC  6E4E               	movwf	printf@fmt^0,c
  1715   0004AE  0EFE               	movlw	high STR_4
  1716   0004B0  6E4F               	movwf	(printf@fmt+1)^0,c
  1717   0004B2  EC78  F00D         	call	_printf	;wreg free
  1718   0004B6                     l842:
  1719                           
  1720                           ;main.c: 151:     printf("Verificando o ponteiro de enderecamento...\n");
  1721   0004B6  0E4C               	movlw	low STR_5
  1722   0004B8  6E4E               	movwf	printf@fmt^0,c
  1723   0004BA  0EFE               	movlw	high STR_5
  1724   0004BC  6E4F               	movwf	(printf@fmt+1)^0,c
  1725   0004BE  EC78  F00D         	call	_printf	;wreg free
  1726   0004C2                     
  1727                           ;main.c: 152:     FsScape_get_index_SRAM(&adressme);
  1728   0004C2  0ECC               	movlw	low main@adressme
  1729   0004C4  6E1E               	movwf	FsScape_get_index_SRAM@address^0,c
  1730   0004C6  0E00               	movlw	high main@adressme
  1731   0004C8  6E1F               	movwf	(FsScape_get_index_SRAM@address+1)^0,c
  1732   0004CA  EC03  F007         	call	_FsScape_get_index_SRAM	;wreg free
  1733   0004CE                     
  1734                           ;main.c: 153:     printf("O ponteiro encontrado foi: 0x%lX\n", adressme);
  1735   0004CE  0E16               	movlw	low STR_6
  1736   0004D0  6E4E               	movwf	printf@fmt^0,c
  1737   0004D2  0EFF               	movlw	high STR_6
  1738   0004D4  6E4F               	movwf	(printf@fmt+1)^0,c
  1739   0004D6  C0CC  F050         	movff	main@adressme,?_printf+2	;volatile
  1740   0004DA  C0CD  F051         	movff	main@adressme+1,?_printf+3	;volatile
  1741   0004DE  C0CE  F052         	movff	main@adressme+2,?_printf+4	;volatile
  1742   0004E2  C0CF  F053         	movff	main@adressme+3,?_printf+5	;volatile
  1743   0004E6  EC78  F00D         	call	_printf	;wreg free
  1744   0004EA                     
  1745                           ;main.c: 155:     printf("Alterando o endere<E7>o para: 0x12564789\n");
  1746   0004EA  0E78               	movlw	low STR_7
  1747   0004EC  6E4E               	movwf	printf@fmt^0,c
  1748   0004EE  0EFE               	movlw	high STR_7
  1749   0004F0  6E4F               	movwf	(printf@fmt+1)^0,c
  1750   0004F2  EC78  F00D         	call	_printf	;wreg free
  1751   0004F6                     
  1752                           ;main.c: 156:     adressme3 = 0x12564789;
  1753   0004F6  0E89               	movlw	137
  1754   0004F8  0100               	movlb	0	; () banked
  1755   0004FA  6FBC               	movwf	main@adressme3& (0+255),b	;volatile
  1756   0004FC  0E47               	movlw	71
  1757   0004FE  6FBD               	movwf	(main@adressme3+1)& (0+255),b	;volatile
  1758   000500  0E56               	movlw	86
  1759   000502  6FBE               	movwf	(main@adressme3+2)& (0+255),b	;volatile
  1760   000504  0E12               	movlw	18
  1761   000506  6FBF               	movwf	(main@adressme3+3)& (0+255),b	;volatile
  1762   000508                     
  1763                           ; BSR set to: 0
  1764                           ;main.c: 157:     FsScape_set_index_SRAM(adressme3);
  1765   000508  C0BC  F01C         	movff	main@adressme3,FsScape_set_index_SRAM@address_value	;volatile
  1766   00050C  C0BD  F01D         	movff	main@adressme3+1,FsScape_set_index_SRAM@address_value+1	;volatile
  1767   000510  C0BE  F01E         	movff	main@adressme3+2,FsScape_set_index_SRAM@address_value+2	;volatile
  1768   000514  C0BF  F01F         	movff	main@adressme3+3,FsScape_set_index_SRAM@address_value+3	;volatile
  1769   000518  EC57  F00C         	call	_FsScape_set_index_SRAM	;wreg free
  1770   00051C                     
  1771                           ;main.c: 160:     printf("Verificando o novo ponteiro\n");
  1772   00051C  0E55               	movlw	low STR_8
  1773   00051E  6E4E               	movwf	printf@fmt^0,c
  1774   000520  0EFF               	movlw	high STR_8
  1775   000522  6E4F               	movwf	(printf@fmt+1)^0,c
  1776   000524  EC78  F00D         	call	_printf	;wreg free
  1777   000528                     
  1778                           ;main.c: 161:     FsScape_get_index_SRAM(&adressme2);
  1779   000528  0ED0               	movlw	low main@adressme2
  1780   00052A  6E1E               	movwf	FsScape_get_index_SRAM@address^0,c
  1781   00052C  0E00               	movlw	high main@adressme2
  1782   00052E  6E1F               	movwf	(FsScape_get_index_SRAM@address+1)^0,c
  1783   000530  EC03  F007         	call	_FsScape_get_index_SRAM	;wreg free
  1784   000534                     
  1785                           ;main.c: 162:     printf("O ponteiro encontrado foi: 0x%lX\n", adressme2);
  1786   000534  0E16               	movlw	low STR_6
  1787   000536  6E4E               	movwf	printf@fmt^0,c
  1788   000538  0EFF               	movlw	high STR_6
  1789   00053A  6E4F               	movwf	(printf@fmt+1)^0,c
  1790   00053C  C0D0  F050         	movff	main@adressme2,?_printf+2	;volatile
  1791   000540  C0D1  F051         	movff	main@adressme2+1,?_printf+3	;volatile
  1792   000544  C0D2  F052         	movff	main@adressme2+2,?_printf+4	;volatile
  1793   000548  C0D3  F053         	movff	main@adressme2+3,?_printf+5	;volatile
  1794   00054C  EC78  F00D         	call	_printf	;wreg free
  1795   000550                     
  1796                           ;main.c: 166:     printf("Alterando o crc para: 0x12564789\n");
  1797   000550  0EF4               	movlw	low STR_10
  1798   000552  6E4E               	movwf	printf@fmt^0,c
  1799   000554  0EFE               	movlw	high STR_10
  1800   000556  6E4F               	movwf	(printf@fmt+1)^0,c
  1801   000558  EC78  F00D         	call	_printf	;wreg free
  1802   00055C                     
  1803                           ;main.c: 167:     check1 = 0x12564789;
  1804   00055C  0E89               	movlw	137
  1805   00055E  0100               	movlb	0	; () banked
  1806   000560  6FC0               	movwf	main@check1& (0+255),b	;volatile
  1807   000562  0E47               	movlw	71
  1808   000564  6FC1               	movwf	(main@check1+1)& (0+255),b	;volatile
  1809   000566  0E56               	movlw	86
  1810   000568  6FC2               	movwf	(main@check1+2)& (0+255),b	;volatile
  1811   00056A  0E12               	movlw	18
  1812   00056C  6FC3               	movwf	(main@check1+3)& (0+255),b	;volatile
  1813                           
  1814                           ;main.c: 168:     FsScape_set_index_crc_SRAM(check1);
  1815   00056E  C0C0  F01C         	movff	main@check1,FsScape_set_index_crc_SRAM@crc_value	;volatile
  1816   000572  C0C1  F01D         	movff	main@check1+1,FsScape_set_index_crc_SRAM@crc_value+1	;volatile
  1817   000576  C0C2  F01E         	movff	main@check1+2,FsScape_set_index_crc_SRAM@crc_value+2	;volatile
  1818   00057A  C0C3  F01F         	movff	main@check1+3,FsScape_set_index_crc_SRAM@crc_value+3	;volatile
  1819   00057E  EC33  F00C         	call	_FsScape_set_index_crc_SRAM	;wreg free
  1820   000582                     
  1821                           ;main.c: 170:     printf("Verificando o novo crc\n");
  1822   000582  0EA8               	movlw	low STR_11
  1823   000584  6E4E               	movwf	printf@fmt^0,c
  1824   000586  0EFF               	movlw	high STR_11
  1825   000588  6E4F               	movwf	(printf@fmt+1)^0,c
  1826   00058A  EC78  F00D         	call	_printf	;wreg free
  1827   00058E                     
  1828                           ;main.c: 171:     FsScape_get_index_crc_SRAM(&check2);
  1829   00058E  0ED4               	movlw	low main@check2
  1830   000590  6E1E               	movwf	FsScape_get_index_crc_SRAM@crc^0,c
  1831   000592  0E00               	movlw	high main@check2
  1832   000594  6E1F               	movwf	(FsScape_get_index_crc_SRAM@crc+1)^0,c
  1833   000596  EC8C  F006         	call	_FsScape_get_index_crc_SRAM	;wreg free
  1834                           
  1835                           ;main.c: 172:     printf("O crc encontrado foi: 0x%lX\n", check2);
  1836   00059A  0E38               	movlw	low STR_12
  1837   00059C  6E4E               	movwf	printf@fmt^0,c
  1838   00059E  0EFF               	movlw	high STR_12
  1839   0005A0  6E4F               	movwf	(printf@fmt+1)^0,c
  1840   0005A2  C0D4  F050         	movff	main@check2,?_printf+2	;volatile
  1841   0005A6  C0D5  F051         	movff	main@check2+1,?_printf+3	;volatile
  1842   0005AA  C0D6  F052         	movff	main@check2+2,?_printf+4	;volatile
  1843   0005AE  C0D7  F053         	movff	main@check2+3,?_printf+5	;volatile
  1844   0005B2  EC78  F00D         	call	_printf	;wreg free
  1845   0005B6                     
  1846                           ;main.c: 174:     check3 = 0x12564789;
  1847   0005B6  0E89               	movlw	137
  1848   0005B8  0100               	movlb	0	; () banked
  1849   0005BA  6FC4               	movwf	main@check3& (0+255),b	;volatile
  1850   0005BC  0E47               	movlw	71
  1851   0005BE  6FC5               	movwf	(main@check3+1)& (0+255),b	;volatile
  1852   0005C0  0E56               	movlw	86
  1853   0005C2  6FC6               	movwf	(main@check3+2)& (0+255),b	;volatile
  1854   0005C4  0E12               	movlw	18
  1855   0005C6  6FC7               	movwf	(main@check3+3)& (0+255),b	;volatile
  1856   0005C8                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 175:     printf("Calculando o crc...\n");
  1859   0005C8  0ED8               	movlw	low STR_13
  1860   0005CA  6E4E               	movwf	printf@fmt^0,c
  1861   0005CC  0EFF               	movlw	high STR_13
  1862   0005CE  6E4F               	movwf	(printf@fmt+1)^0,c
  1863   0005D0  EC78  F00D         	call	_printf	;wreg free
  1864   0005D4                     
  1865                           ;main.c: 176:     check4 = FsScape_check_index_crc(check3);
  1866   0005D4  C0C4  F021         	movff	main@check3,FsScape_check_index_crc@crc_value	;volatile
  1867   0005D8  C0C5  F022         	movff	main@check3+1,FsScape_check_index_crc@crc_value+1	;volatile
  1868   0005DC  C0C6  F023         	movff	main@check3+2,FsScape_check_index_crc@crc_value+2	;volatile
  1869   0005E0  C0C7  F024         	movff	main@check3+3,FsScape_check_index_crc@crc_value+3	;volatile
  1870   0005E4  EC9D  F00C         	call	_FsScape_check_index_crc	;wreg free
  1871   0005E8  C021  F0C8         	movff	?_FsScape_check_index_crc,main@check4	;volatile
  1872   0005EC  C022  F0C9         	movff	?_FsScape_check_index_crc+1,main@check4+1	;volatile
  1873   0005F0  C023  F0CA         	movff	?_FsScape_check_index_crc+2,main@check4+2	;volatile
  1874   0005F4  C024  F0CB         	movff	?_FsScape_check_index_crc+3,main@check4+3	;volatile
  1875   0005F8                     
  1876                           ;main.c: 177:     printf("O crc calculado foi: 0x%lX\n", check4);
  1877   0005F8  0E72               	movlw	low STR_14
  1878   0005FA  6E4E               	movwf	printf@fmt^0,c
  1879   0005FC  0EFF               	movlw	high STR_14
  1880   0005FE  6E4F               	movwf	(printf@fmt+1)^0,c
  1881   000600  C0C8  F050         	movff	main@check4,?_printf+2	;volatile
  1882   000604  C0C9  F051         	movff	main@check4+1,?_printf+3	;volatile
  1883   000608  C0CA  F052         	movff	main@check4+2,?_printf+4	;volatile
  1884   00060C  C0CB  F053         	movff	main@check4+3,?_printf+5	;volatile
  1885   000610  EC78  F00D         	call	_printf	;wreg free
  1886   000614                     
  1887                           ;main.c: 179:     I2C_ModuleStop();
  1888   000614  EC02  F00E         	call	_I2C_ModuleStop	;wreg free
  1889   000618                     l843:
  1890   000618  EF0C  F003         	goto	l843
  1891   00061C  EF26  F000         	goto	start
  1892   000620                     __end_of_main:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _printf *****************
  1896 ;; Defined at:
  1897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  fmt             2   77[COMRAM] PTR const unsigned char 
  1900 ;;		 -> STR_15(26), STR_14(28), STR_13(21), STR_12(29), 
  1901 ;;		 -> STR_11(24), STR_10(34), STR_9(34), STR_8(29), 
  1902 ;;		 -> STR_7(42), STR_6(34), STR_5(44), STR_4(41), 
  1903 ;;		 -> STR_3(41), STR_2(24), STR_1(18), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  ap              2   83[COMRAM] PTR void [1]
  1906 ;;		 -> ?_printf(2), 
  1907 ;;  ret             2    0        int 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  2   77[COMRAM] int 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1917 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;Total ram usage:        8 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 11
  1924 ;; This function calls:
  1925 ;;		_vfprintf
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;;		_I2C2_M_Write
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text1
  1933   001AF0                     __ptext1:
  1934                           	callstack 0
  1935   001AF0                     _printf:
  1936                           	callstack 19
  1937   001AF0  0E50               	movlw	low (?_printf+2)
  1938   001AF2  6E54               	movwf	printf@ap^0,c
  1939   001AF4  0E00               	movlw	high (?_printf+2)
  1940   001AF6  6E55               	movwf	(printf@ap+1)^0,c
  1941   001AF8  0E00               	movlw	0
  1942   001AFA  6E46               	movwf	vfprintf@fp^0,c
  1943   001AFC  0E00               	movlw	0
  1944   001AFE  6E47               	movwf	(vfprintf@fp+1)^0,c
  1945   001B00  C04E  F048         	movff	printf@fmt,vfprintf@fmt
  1946   001B04  C04F  F049         	movff	printf@fmt+1,vfprintf@fmt+1
  1947   001B08  0E54               	movlw	low printf@ap
  1948   001B0A  6E4A               	movwf	vfprintf@ap^0,c
  1949   001B0C  0E00               	movlw	high printf@ap
  1950   001B0E  6E4B               	movwf	(vfprintf@ap+1)^0,c
  1951   001B10  EC0B  F00C         	call	_vfprintf	;wreg free
  1952   001B14  0012               	return		;funcret
  1953   001B16                     __end_of_printf:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _vfprintf *****************
  1957 ;; Defined at:
  1958 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1961 ;;		 -> NULL(0), 
  1962 ;;  fmt             2   71[COMRAM] PTR const unsigned char 
  1963 ;;		 -> STR_15(26), STR_14(28), STR_13(21), STR_12(29), 
  1964 ;;		 -> STR_11(24), STR_10(34), STR_9(34), STR_8(29), 
  1965 ;;		 -> STR_7(42), STR_6(34), STR_5(44), STR_4(41), 
  1966 ;;		 -> STR_3(41), STR_2(24), STR_1(18), 
  1967 ;;  ap              2   73[COMRAM] PTR PTR void 
  1968 ;;		 -> printf@ap(2), 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
  1971 ;;		 -> STR_15(26), STR_14(28), STR_13(21), STR_12(29), 
  1972 ;;		 -> STR_11(24), STR_10(34), STR_9(34), STR_8(29), 
  1973 ;;		 -> STR_7(42), STR_6(34), STR_5(44), STR_4(41), 
  1974 ;;		 -> STR_3(41), STR_2(24), STR_1(18), 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2   69[COMRAM] int 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1984 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;Total ram usage:        8 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 10
  1991 ;; This function calls:
  1992 ;;		_vfpfcnvrt
  1993 ;; This function is called by:
  1994 ;;		_printf
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text2
  1999   001816                     __ptext2:
  2000                           	callstack 0
  2001   001816                     _vfprintf:
  2002                           	callstack 19
  2003   001816                     
  2004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2005   001816  C048  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
  2006   00181A  C049  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2009   00181E  EF1F  F00C         	goto	l7709
  2010   001822                     l7707:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2013   001822  C046  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  2014   001826  C047  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2015   00182A  0E4C               	movlw	low vfprintf@cfmt
  2016   00182C  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2017   00182E  0E00               	movlw	high vfprintf@cfmt
  2018   001830  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2019   001832  C04A  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  2020   001836  C04B  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2021   00183A  EC28  F000         	call	_vfpfcnvrt	;wreg free
  2022   00183E                     l7709:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2025   00183E  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2026   001842  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2027   001846                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2028   001846  6AF8               	clrf	tblptru,c
  2029   001848                     	endif
  2030   001848                     	if	0	;tblptru may be non-zero
  2031   001848                     	endif
  2032   001848  0008               	tblrd		*
  2033   00184A  50F5               	movf	tablat,w,c
  2034   00184C  0900               	iorlw	0
  2035   00184E  A4D8               	btfss	status,2,c
  2036   001850  EF2C  F00C         	goto	u5371
  2037   001854  EF2E  F00C         	goto	u5370
  2038   001858                     u5371:
  2039   001858  EF11  F00C         	goto	l7707
  2040   00185C                     u5370:
  2041   00185C                     
  2042                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2043   00185C  0E00               	movlw	0
  2044   00185E  6E47               	movwf	(?_vfprintf+1)^0,c
  2045   001860  0E00               	movlw	0
  2046   001862  6E46               	movwf	?_vfprintf^0,c
  2047   001864  0012               	return		;funcret
  2048   001866                     __end_of_vfprintf:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _vfpfcnvrt *****************
  2052 ;; Defined at:
  2053 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  fp              2   52[COMRAM] PTR struct _IO_FILE
  2056 ;;		 -> NULL(0), 
  2057 ;;  fmt             2   54[COMRAM] PTR PTR unsigned char 
  2058 ;;		 -> vfprintf@cfmt(2), 
  2059 ;;  ap              2   56[COMRAM] PTR PTR void 
  2060 ;;		 -> printf@ap(2), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  convarg         4   62[COMRAM] struct .
  2063 ;;  cp              2   67[COMRAM] PTR unsigned char 
  2064 ;;		 -> STR_15(26), STR_14(28), STR_13(21), STR_12(29), 
  2065 ;;		 -> STR_11(24), STR_10(34), STR_9(34), STR_8(29), 
  2066 ;;		 -> STR_7(42), STR_6(34), STR_5(44), STR_4(41), 
  2067 ;;		 -> STR_3(41), STR_2(24), STR_1(18), 
  2068 ;;  i               2    0        int 
  2069 ;;  done            2    0        int 
  2070 ;;  c               1   66[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2080 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;Total ram usage:       17 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 9
  2087 ;; This function calls:
  2088 ;;		_dtoa
  2089 ;;		_fputc
  2090 ;;		_xtoa
  2091 ;; This function is called by:
  2092 ;;		_vfprintf
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text3
  2097   000050                     __ptext3:
  2098                           	callstack 0
  2099   000050                     _vfpfcnvrt:
  2100                           	callstack 19
  2101   000050                     
  2102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2103   000050  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2104   000054  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2105   000058  CFDE FFF6          	movff	postinc2,tblptrl
  2106   00005C  CFDD FFF7          	movff	postdec2,tblptrh
  2107   000060                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2108   000060  6AF8               	clrf	tblptru,c
  2109   000062                     	endif
  2110   000062                     	if	0	;tblptru may be non-zero
  2111   000062                     	endif
  2112   000062  0008               	tblrd		*
  2113   000064  50F5               	movf	tablat,w,c
  2114   000066  0A25               	xorlw	37
  2115   000068  A4D8               	btfss	status,2,c
  2116   00006A  EF39  F000         	goto	u5071
  2117   00006E  EF3B  F000         	goto	u5070
  2118   000072                     u5071:
  2119   000072  EFAA  F001         	goto	l7373
  2120   000076                     u5070:
  2121   000076                     
  2122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2123   000076  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2124   00007A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2125   00007E  2ADE               	incf	postinc2,f,c
  2126   000080  0E00               	movlw	0
  2127   000082  22DD               	addwfc	postdec2,f,c
  2128   000084                     
  2129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2130   000084  0E00               	movlw	0
  2131   000086  0100               	movlb	0	; () banked
  2132   000088  6F9F               	movwf	(_width+1)& (0+255),b
  2133   00008A  0E00               	movlw	0
  2134   00008C  6F9E               	movwf	_width& (0+255),b
  2135   00008E  C09E  F0A6         	movff	_width,_flags
  2136   000092                     
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2139   000092  69A0               	setf	_prec& (0+255),b
  2140   000094  69A1               	setf	(_prec+1)& (0+255),b
  2141   000096                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2144   000096  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145   00009A  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146   00009E  CFDE F044          	movff	postinc2,vfpfcnvrt@cp
  2147   0000A2  CFDD F045          	movff	postdec2,vfpfcnvrt@cp+1
  2148   0000A6                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1145:   c = *cp;
  2151   0000A6  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2152   0000AA  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2153   0000AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2154   0000AE  6AF8               	clrf	tblptru,c
  2155   0000B0                     	endif
  2156   0000B0                     	if	0	;tblptru may be non-zero
  2157   0000B0                     	endif
  2158   0000B0  0008               	tblrd		*
  2159   0000B2  CFF5 F043          	movff	tablat,vfpfcnvrt@c
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1146:   switch(c)
      +                           {
  2162   0000B6  EF69  F000         	goto	l7329
  2163   0000BA                     l7321:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1161:     cp++;
  2167   0000BA  4A44               	infsnz	vfpfcnvrt@cp^0,f,c
  2168   0000BC  2A45               	incf	(vfpfcnvrt@cp+1)^0,f,c
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1168:     break;
  2171   0000BE  EF86  F000         	goto	l7331
  2172   0000C2                     l7323:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1202:     c = 'i'
      +                          ;
  2176   0000C2  0E69               	movlw	105
  2177   0000C4  6E43               	movwf	vfpfcnvrt@c^0,c
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1203:     break;
  2180   0000C6  EF86  F000         	goto	l7331
  2181   0000CA                     l7325:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1205:     c = 0;
  2185   0000CA  0E00               	movlw	0
  2186   0000CC  6E43               	movwf	vfpfcnvrt@c^0,c
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1206:     break;
  2189   0000CE  EF86  F000         	goto	l7331
  2190   0000D2                     l7329:
  2191                           
  2192                           ; BSR set to: 0
  2193   0000D2  5043               	movf	vfpfcnvrt@c^0,w,c
  2194   0000D4  6E3B               	movwf	??_vfpfcnvrt^0,c
  2195   0000D6  6A3C               	clrf	(??_vfpfcnvrt+1)^0,c
  2196                           
  2197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 1, Range of values is 0 to 0
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204   0000D8  503C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2205   0000DA  0A00               	xorlw	0	; case 0
  2206   0000DC  B4D8               	btfsc	status,2,c
  2207   0000DE  EF73  F000         	goto	l8411
  2208   0000E2  EF65  F000         	goto	l7325
  2209   0000E6                     l8411:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ; Switch size 1, requested type "simple"
  2213                           ; Number of cases is 4, Range of values is 88 to 108
  2214                           ; switch strategies available:
  2215                           ; Name         Instructions Cycles
  2216                           ; simple_byte           13     7 (average)
  2217                           ;	Chosen strategy is simple_byte
  2218   0000E6  503B               	movf	??_vfpfcnvrt^0,w,c
  2219   0000E8  0A58               	xorlw	88	; case 88
  2220   0000EA  B4D8               	btfsc	status,2,c
  2221   0000EC  EF61  F000         	goto	l7323
  2222   0000F0  0A3C               	xorlw	60	; case 100
  2223   0000F2  B4D8               	btfsc	status,2,c
  2224   0000F4  EF61  F000         	goto	l7323
  2225   0000F8  0A0D               	xorlw	13	; case 105
  2226   0000FA  B4D8               	btfsc	status,2,c
  2227   0000FC  EF61  F000         	goto	l7323
  2228   000100  0A05               	xorlw	5	; case 108
  2229   000102  B4D8               	btfsc	status,2,c
  2230   000104  EF5D  F000         	goto	l7321
  2231   000108  EF65  F000         	goto	l7325
  2232   00010C                     l7331:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2236   00010C  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2237   000110  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2238   000114                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2239   000114  6AF8               	clrf	tblptru,c
  2240   000116                     	endif
  2241   000116                     	if	0	;tblptru may be non-zero
  2242   000116                     	endif
  2243   000116  0008               	tblrd		*
  2244   000118  50F5               	movf	tablat,w,c
  2245   00011A  0A64               	xorlw	100
  2246   00011C  B4D8               	btfsc	status,2,c
  2247   00011E  EF93  F000         	goto	u5081
  2248   000122  EF95  F000         	goto	u5080
  2249   000126                     u5081:
  2250   000126  EFDB  F000         	goto	l7341
  2251   00012A                     u5080:
  2252   00012A                     
  2253                           ; BSR set to: 0
  2254   00012A  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2255   00012E  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2256   000132                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2257   000132  6AF8               	clrf	tblptru,c
  2258   000134                     	endif
  2259   000134                     	if	0	;tblptru may be non-zero
  2260   000134                     	endif
  2261   000134  0008               	tblrd		*
  2262   000136  50F5               	movf	tablat,w,c
  2263   000138  0A69               	xorlw	105
  2264   00013A  A4D8               	btfss	status,2,c
  2265   00013C  EFA2  F000         	goto	u5091
  2266   000140  EFA4  F000         	goto	u5090
  2267   000144                     u5091:
  2268   000144  EF0E  F001         	goto	l7349
  2269   000148                     u5090:
  2270   000148  EFDB  F000         	goto	l7341
  2271   00014C                     l7335:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1217:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2275   00014C  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2276   000150  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2277   000154  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2278   000158  0E02               	movlw	2
  2279   00015A  26DE               	addwf	postinc2,f,c
  2280   00015C  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2281   000160  0E00               	movlw	0
  2282   000162  22DD               	addwfc	postdec2,f,c
  2283   000164  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2284   000168  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2285   00016C  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  2286   000170  CFDD F040          	movff	postdec2,vfpfcnvrt@convarg+1
  2287   000174  0E00               	movlw	0
  2288   000176  BE40               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2289   000178  0EFF               	movlw	-1
  2290   00017A  6E41               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2291   00017C  6E42               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1218:      break;
  2294   00017E  EFF0  F000         	goto	l7343
  2295   000182                     l7337:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1231:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  2299   000182  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2300   000186  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2301   00018A  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2302   00018E  0E04               	movlw	4
  2303   000190  26DE               	addwf	postinc2,f,c
  2304   000192  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2305   000196  0E00               	movlw	0
  2306   000198  22DD               	addwfc	postdec2,f,c
  2307   00019A  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2308   00019E  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2309   0001A2  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  2310   0001A6  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  2311   0001AA  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+2
  2312   0001AE  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+3
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1232:      break;
  2315   0001B2  EFF0  F000         	goto	l7343
  2316   0001B6                     l7341:
  2317                           
  2318                           ; BSR set to: 0
  2319   0001B6  5043               	movf	vfpfcnvrt@c^0,w,c
  2320   0001B8  6E3B               	movwf	??_vfpfcnvrt^0,c
  2321   0001BA  6A3C               	clrf	(??_vfpfcnvrt+1)^0,c
  2322                           
  2323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 1, Range of values is 0 to 0
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            4     3 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330   0001BC  503C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2331   0001BE  0A00               	xorlw	0	; case 0
  2332   0001C0  B4D8               	btfsc	status,2,c
  2333   0001C2  EFE5  F000         	goto	l8413
  2334   0001C6  EFF0  F000         	goto	l7343
  2335   0001CA                     l8413:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 2, Range of values is 105 to 108
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            7     4 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344   0001CA  503B               	movf	??_vfpfcnvrt^0,w,c
  2345   0001CC  0A69               	xorlw	105	; case 105
  2346   0001CE  B4D8               	btfsc	status,2,c
  2347   0001D0  EFA6  F000         	goto	l7335
  2348   0001D4  0A05               	xorlw	5	; case 108
  2349   0001D6  B4D8               	btfsc	status,2,c
  2350   0001D8  EFC1  F000         	goto	l7337
  2351   0001DC  EFF0  F000         	goto	l7343
  2352   0001E0                     l7343:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2356   0001E0  0E01               	movlw	1
  2357   0001E2  2444               	addwf	vfpfcnvrt@cp^0,w,c
  2358   0001E4  6E3B               	movwf	??_vfpfcnvrt^0,c
  2359   0001E6  0E00               	movlw	0
  2360   0001E8  2045               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2361   0001EA  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2362   0001EC  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363   0001F0  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364   0001F4  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2365   0001F8  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2366   0001FC                     
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2369   0001FC  C035  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  2370   000200  C036  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2371   000204  C03F  F024         	movff	vfpfcnvrt@convarg,dtoa@d
  2372   000208  C040  F025         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2373   00020C  C041  F026         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2374   000210  C042  F027         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2375   000214  EC10  F003         	call	_dtoa	;wreg free
  2376   000218  EFBF  F001         	goto	l2130
  2377   00021C                     l7349:
  2378                           
  2379                           ; BSR set to: 0
  2380   00021C  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2381   000220  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2382   000224                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2383   000224  6AF8               	clrf	tblptru,c
  2384   000226                     	endif
  2385   000226                     	if	0	;tblptru may be non-zero
  2386   000226                     	endif
  2387   000226  0008               	tblrd		*
  2388   000228  50F5               	movf	tablat,w,c
  2389   00022A  0A58               	xorlw	88
  2390   00022C  A4D8               	btfss	status,2,c
  2391   00022E  EF1B  F001         	goto	u5101
  2392   000232  EF1D  F001         	goto	u5100
  2393   000236                     u5101:
  2394   000236  EFA1  F001         	goto	l7369
  2395   00023A                     u5100:
  2396   00023A  EF55  F001         	goto	l7357
  2397   00023E                     l7351:
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1282:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2401   00023E  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2402   000242  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2403   000246  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2404   00024A  0E02               	movlw	2
  2405   00024C  26DE               	addwf	postinc2,f,c
  2406   00024E  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2407   000252  0E00               	movlw	0
  2408   000254  22DD               	addwfc	postdec2,f,c
  2409   000256  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2410   00025A  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2411   00025E  CFDE F03D          	movff	postinc2,??_vfpfcnvrt+2
  2412   000262  CFDD F03E          	movff	postdec2,??_vfpfcnvrt+3
  2413   000266  C03D  F03F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2414   00026A  C03E  F040         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2415   00026E  6A41               	clrf	(vfpfcnvrt@convarg+2)^0,c
  2416   000270  6A42               	clrf	(vfpfcnvrt@convarg+3)^0,c
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1283:      break;
  2419   000272  EF6A  F001         	goto	l7359
  2420   000276                     l7353:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1296:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  2424   000276  C039  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2425   00027A  C03A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2426   00027E  CFDF F03B          	movff	indf2,??_vfpfcnvrt
  2427   000282  0E04               	movlw	4
  2428   000284  26DE               	addwf	postinc2,f,c
  2429   000286  CFDF F03C          	movff	indf2,??_vfpfcnvrt+1
  2430   00028A  0E00               	movlw	0
  2431   00028C  22DD               	addwfc	postdec2,f,c
  2432   00028E  C03B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2433   000292  C03C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2434   000296  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  2435   00029A  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  2436   00029E  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+2
  2437   0002A2  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+3
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1297:      break;
  2440   0002A6  EF6A  F001         	goto	l7359
  2441   0002AA                     l7357:
  2442                           
  2443                           ; BSR set to: 0
  2444   0002AA  5043               	movf	vfpfcnvrt@c^0,w,c
  2445   0002AC  6E3B               	movwf	??_vfpfcnvrt^0,c
  2446   0002AE  6A3C               	clrf	(??_vfpfcnvrt+1)^0,c
  2447                           
  2448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2449                           ; Switch size 1, requested type "simple"
  2450                           ; Number of cases is 1, Range of values is 0 to 0
  2451                           ; switch strategies available:
  2452                           ; Name         Instructions Cycles
  2453                           ; simple_byte            4     3 (average)
  2454                           ;	Chosen strategy is simple_byte
  2455   0002B0  503C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2456   0002B2  0A00               	xorlw	0	; case 0
  2457   0002B4  B4D8               	btfsc	status,2,c
  2458   0002B6  EF5F  F001         	goto	l8415
  2459   0002BA  EF6A  F001         	goto	l7359
  2460   0002BE                     l8415:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 2, Range of values is 105 to 108
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte            7     4 (average)
  2468                           ;	Chosen strategy is simple_byte
  2469   0002BE  503B               	movf	??_vfpfcnvrt^0,w,c
  2470   0002C0  0A69               	xorlw	105	; case 105
  2471   0002C2  B4D8               	btfsc	status,2,c
  2472   0002C4  EF1F  F001         	goto	l7351
  2473   0002C8  0A05               	xorlw	5	; case 108
  2474   0002CA  B4D8               	btfsc	status,2,c
  2475   0002CC  EF3B  F001         	goto	l7353
  2476   0002D0  EF6A  F001         	goto	l7359
  2477   0002D4                     l7359:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  2481   0002D4  0E01               	movlw	1
  2482   0002D6  2444               	addwf	vfpfcnvrt@cp^0,w,c
  2483   0002D8  6E3B               	movwf	??_vfpfcnvrt^0,c
  2484   0002DA  0E00               	movlw	0
  2485   0002DC  2045               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2486   0002DE  6E3C               	movwf	(??_vfpfcnvrt+1)^0,c
  2487   0002E0  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2488   0002E4  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2489   0002E8  C03B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2490   0002EC  C03C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  2493   0002F0  EF8A  F001         	goto	l7367
  2494   0002F4                     l7361:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1340:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  2498   0002F4  C035  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  2499   0002F8  C036  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2500   0002FC  C03F  F024         	movff	vfpfcnvrt@convarg,xtoa@d
  2501   000300  C040  F025         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2502   000304  C041  F026         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  2503   000308  C042  F027         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  2504   00030C  ECCC  F004         	call	_xtoa	;wreg free
  2505   000310  EFBF  F001         	goto	l2130
  2506   000314                     l7367:
  2507                           
  2508                           ; BSR set to: 0
  2509   000314  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2510   000318  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2511   00031C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2512   00031C  6AF8               	clrf	tblptru,c
  2513   00031E                     	endif
  2514   00031E                     	if	0	;tblptru may be non-zero
  2515   00031E                     	endif
  2516   00031E  0008               	tblrd		*
  2517   000320  50F5               	movf	tablat,w,c
  2518   000322  6E3B               	movwf	??_vfpfcnvrt^0,c
  2519   000324  6A3C               	clrf	(??_vfpfcnvrt+1)^0,c
  2520                           
  2521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2522                           ; Switch size 1, requested type "simple"
  2523                           ; Number of cases is 1, Range of values is 0 to 0
  2524                           ; switch strategies available:
  2525                           ; Name         Instructions Cycles
  2526                           ; simple_byte            4     3 (average)
  2527                           ;	Chosen strategy is simple_byte
  2528   000326  503C               	movf	(??_vfpfcnvrt+1)^0,w,c
  2529   000328  0A00               	xorlw	0	; case 0
  2530   00032A  B4D8               	btfsc	status,2,c
  2531   00032C  EF9A  F001         	goto	l8417
  2532   000330  EFA1  F001         	goto	l7369
  2533   000334                     l8417:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ; Switch size 1, requested type "simple"
  2537                           ; Number of cases is 1, Range of values is 88 to 88
  2538                           ; switch strategies available:
  2539                           ; Name         Instructions Cycles
  2540                           ; simple_byte            4     3 (average)
  2541                           ;	Chosen strategy is simple_byte
  2542   000334  503B               	movf	??_vfpfcnvrt^0,w,c
  2543   000336  0A58               	xorlw	88	; case 88
  2544   000338  B4D8               	btfsc	status,2,c
  2545   00033A  EF7A  F001         	goto	l7361
  2546   00033E  EFA1  F001         	goto	l7369
  2547   000342                     l7369:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2550   000342  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2551   000346  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2552   00034A  2ADE               	incf	postinc2,f,c
  2553   00034C  0E00               	movlw	0
  2554   00034E  22DD               	addwfc	postdec2,f,c
  2555   000350  EFBF  F001         	goto	l2130
  2556   000354                     l7373:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2559   000354  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2560   000358  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2561   00035C  CFDE FFF6          	movff	postinc2,tblptrl
  2562   000360  CFDD FFF7          	movff	postdec2,tblptrh
  2563   000364                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2564   000364  6AF8               	clrf	tblptru,c
  2565   000366                     	endif
  2566   000366                     	if	0	;tblptru may be non-zero
  2567   000366                     	endif
  2568   000366  0008               	tblrd		*
  2569   000368  50F5               	movf	tablat,w,c
  2570   00036A  6E07               	movwf	fputc@c^0,c
  2571   00036C  6A08               	clrf	(fputc@c+1)^0,c
  2572   00036E  C035  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2573   000372  C036  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2574   000376  EC57  F008         	call	_fputc	;wreg free
  2575   00037A  EFA1  F001         	goto	l7369
  2576   00037E                     l2130:
  2577   00037E  0012               	return		;funcret
  2578   000380                     __end_of_vfpfcnvrt:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _xtoa *****************
  2582 ;; Defined at:
  2583 ;;		line 955 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2586 ;;		 -> NULL(0), 
  2587 ;;  d               4   35[COMRAM] unsigned long 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  i               2   49[COMRAM] int 
  2590 ;;  p               2   47[COMRAM] int 
  2591 ;;  w               2   43[COMRAM] int 
  2592 ;;  c               1   51[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:       19 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 8
  2609 ;; This function calls:
  2610 ;;		_pad
  2611 ;; This function is called by:
  2612 ;;		_vfpfcnvrt
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text4
  2617   000998                     __ptext4:
  2618                           	callstack 0
  2619   000998                     _xtoa:
  2620                           	callstack 19
  2621   000998                     
  2622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 955: static void 
      +                          xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 958: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           959:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 960
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           971:     p = (0 <= prec) ? prec : 1;
  2623   000998  0100               	movlb	0	; () banked
  2624   00099A  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  2625   00099C  EFD4  F004         	goto	u4720
  2626   0009A0  EFD2  F004         	goto	u4721
  2627   0009A4                     u4721:
  2628   0009A4  EFDA  F004         	goto	l2100
  2629   0009A8                     u4720:
  2630   0009A8                     
  2631                           ; BSR set to: 0
  2632   0009A8  0E00               	movlw	0
  2633   0009AA  6E31               	movwf	(xtoa@p+1)^0,c
  2634   0009AC  0E01               	movlw	1
  2635   0009AE  6E30               	movwf	xtoa@p^0,c
  2636   0009B0  EFDE  F004         	goto	l2102
  2637   0009B4                     l2100:
  2638                           
  2639                           ; BSR set to: 0
  2640   0009B4  C0A0  F030         	movff	_prec,xtoa@p
  2641   0009B8  C0A1  F031         	movff	_prec+1,xtoa@p+1
  2642   0009BC                     l2102:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 972:     w = widt
      +                          h;
  2646   0009BC  C09E  F02C         	movff	_width,xtoa@w
  2647   0009C0  C09F  F02D         	movff	_width+1,xtoa@w+1
  2648   0009C4                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 981:     i = size
      +                          of(dbuf) - 1;
  2651   0009C4  0E00               	movlw	0
  2652   0009C6  6E33               	movwf	(xtoa@i+1)^0,c
  2653   0009C8  0E1F               	movlw	31
  2654   0009CA  6E32               	movwf	xtoa@i^0,c
  2655   0009CC                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 982:     dbuf[i] 
      +                          = '\0';
  2658   0009CC  0E00               	movlw	0
  2659   0009CE  0102               	movlb	2	; () banked
  2660   0009D0  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  2663   0009D2  EF32  F005         	goto	l7101
  2664   0009D6                     l7081:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 987:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 988:         --i;
  2667   0009D6  0632               	decf	xtoa@i^0,f,c
  2668   0009D8  A0D8               	btfss	status,0,c
  2669   0009DA  0633               	decf	(xtoa@i+1)^0,f,c
  2670   0009DC                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 989:         c = 
      +                          d & 0x0f;
  2672   0009DC  5024               	movf	xtoa@d^0,w,c
  2673   0009DE  0B0F               	andlw	15
  2674   0009E0  6E34               	movwf	xtoa@c^0,c
  2675   0009E2                     
  2676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 998:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'A' + (c - 10);
  2677   0009E2  0E09               	movlw	9
  2678   0009E4  6434               	cpfsgt	xtoa@c^0,c
  2679   0009E6  EFF7  F004         	goto	u4731
  2680   0009EA  EFF9  F004         	goto	u4730
  2681   0009EE                     u4731:
  2682   0009EE  EF01  F005         	goto	l7089
  2683   0009F2                     u4730:
  2684   0009F2  0E37               	movlw	55
  2685   0009F4  2434               	addwf	xtoa@c^0,w,c
  2686   0009F6  6E2E               	movwf	_xtoa$3535^0,c
  2687   0009F8  6A2F               	clrf	(_xtoa$3535+1)^0,c
  2688   0009FA  0E00               	movlw	0
  2689   0009FC  222F               	addwfc	(_xtoa$3535+1)^0,f,c
  2690   0009FE  EF07  F005         	goto	l7091
  2691   000A02                     l7089:
  2692   000A02  0E30               	movlw	48
  2693   000A04  2434               	addwf	xtoa@c^0,w,c
  2694   000A06  6E2E               	movwf	_xtoa$3535^0,c
  2695   000A08  6A2F               	clrf	(_xtoa$3535+1)^0,c
  2696   000A0A  0E00               	movlw	0
  2697   000A0C  222F               	addwfc	(_xtoa$3535+1)^0,f,c
  2698   000A0E                     l7091:
  2699   000A0E  C02E  F034         	movff	_xtoa$3535,xtoa@c
  2700   000A12                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1000:         dbu
      +                          f[i] = (char)c;
  2702   000A12  0E00               	movlw	low _dbuf
  2703   000A14  2432               	addwf	xtoa@i^0,w,c
  2704   000A16  6ED9               	movwf	fsr2l,c
  2705   000A18  0E02               	movlw	high _dbuf
  2706   000A1A  2033               	addwfc	(xtoa@i+1)^0,w,c
  2707   000A1C  6EDA               	movwf	fsr2h,c
  2708   000A1E  C034  FFDF         	movff	xtoa@c,indf2
  2709   000A22                     
  2710                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1001:         --p
      +                          ;
  2711   000A22  0630               	decf	xtoa@p^0,f,c
  2712   000A24  A0D8               	btfss	status,0,c
  2713   000A26  0631               	decf	(xtoa@p+1)^0,f,c
  2714   000A28                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1002:         --w
      +                          ;
  2716   000A28  062C               	decf	xtoa@w^0,f,c
  2717   000A2A  A0D8               	btfss	status,0,c
  2718   000A2C  062D               	decf	(xtoa@w+1)^0,f,c
  2719   000A2E                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1003:         d =
      +                           d >> 4;
  2721   000A2E  C024  F028         	movff	xtoa@d,??_xtoa
  2722   000A32  C025  F029         	movff	xtoa@d+1,??_xtoa+1
  2723   000A36  C026  F02A         	movff	xtoa@d+2,??_xtoa+2
  2724   000A3A  C027  F02B         	movff	xtoa@d+3,??_xtoa+3
  2725   000A3E  0E05               	movlw	5
  2726   000A40  EF27  F005         	goto	u4740
  2727   000A44                     u4745:
  2728   000A44  90D8               	bcf	status,0,c
  2729   000A46  322B               	rrcf	(??_xtoa+3)^0,f,c
  2730   000A48  322A               	rrcf	(??_xtoa+2)^0,f,c
  2731   000A4A  3229               	rrcf	(??_xtoa+1)^0,f,c
  2732   000A4C  3228               	rrcf	??_xtoa^0,f,c
  2733   000A4E                     u4740:
  2734   000A4E  2EE8               	decfsz	wreg,f,c
  2735   000A50  EF22  F005         	goto	u4745
  2736   000A54  C028  F024         	movff	??_xtoa,xtoa@d
  2737   000A58  C029  F025         	movff	??_xtoa+1,xtoa@d+1
  2738   000A5C  C02A  F026         	movff	??_xtoa+2,xtoa@d+2
  2739   000A60  C02B  F027         	movff	??_xtoa+3,xtoa@d+3
  2740   000A64                     l7101:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  2743   000A64  BE33               	btfsc	(xtoa@i+1)^0,7,c
  2744   000A66  EF3E  F005         	goto	u4751
  2745   000A6A  5033               	movf	(xtoa@i+1)^0,w,c
  2746   000A6C  E109               	bnz	u4750
  2747   000A6E  0E02               	movlw	2
  2748   000A70  5C32               	subwf	xtoa@i^0,w,c
  2749   000A72  A0D8               	btfss	status,0,c
  2750   000A74  EF3E  F005         	goto	u4751
  2751   000A78  EF40  F005         	goto	u4750
  2752   000A7C                     u4751:
  2753   000A7C  EF58  F005         	goto	l7107
  2754   000A80                     u4750:
  2755   000A80  5024               	movf	xtoa@d^0,w,c
  2756   000A82  1025               	iorwf	(xtoa@d+1)^0,w,c
  2757   000A84  1026               	iorwf	(xtoa@d+2)^0,w,c
  2758   000A86  1027               	iorwf	(xtoa@d+3)^0,w,c
  2759   000A88  A4D8               	btfss	status,2,c
  2760   000A8A  EF49  F005         	goto	u4761
  2761   000A8E  EF4B  F005         	goto	u4760
  2762   000A92                     u4761:
  2763   000A92  EFEB  F004         	goto	l7081
  2764   000A96                     u4760:
  2765   000A96  BE31               	btfsc	(xtoa@p+1)^0,7,c
  2766   000A98  EF58  F005         	goto	u4770
  2767   000A9C  5031               	movf	(xtoa@p+1)^0,w,c
  2768   000A9E  E106               	bnz	u4771
  2769   000AA0  0430               	decf	xtoa@p^0,w,c
  2770   000AA2  B0D8               	btfsc	status,0,c
  2771   000AA4  EF56  F005         	goto	u4771
  2772   000AA8  EF58  F005         	goto	u4770
  2773   000AAC                     u4771:
  2774   000AAC  EFEB  F004         	goto	l7081
  2775   000AB0                     u4770:
  2776   000AB0                     l7107:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1023:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2779   000AB0  C022  F017         	movff	xtoa@fp,pad@fp
  2780   000AB4  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  2781   000AB8  0E00               	movlw	low _dbuf
  2782   000ABA  2432               	addwf	xtoa@i^0,w,c
  2783   000ABC  6E19               	movwf	pad@buf^0,c
  2784   000ABE  0E02               	movlw	high _dbuf
  2785   000AC0  2033               	addwfc	(xtoa@i+1)^0,w,c
  2786   000AC2  6E1A               	movwf	(pad@buf+1)^0,c
  2787   000AC4  C02C  F01B         	movff	xtoa@w,pad@p
  2788   000AC8  C02D  F01C         	movff	xtoa@w+1,pad@p+1
  2789   000ACC  ECCE  F00A         	call	_pad	;wreg free
  2790   000AD0  0012               	return		;funcret
  2791   000AD2                     __end_of_xtoa:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _dtoa *****************
  2795 ;; Defined at:
  2796 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2799 ;;		 -> NULL(0), 
  2800 ;;  d               4   35[COMRAM] long 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  i               2   46[COMRAM] int 
  2803 ;;  w               2   43[COMRAM] int 
  2804 ;;  p               2   41[COMRAM] int 
  2805 ;;  s               1   45[COMRAM] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:       15 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 8
  2822 ;; This function calls:
  2823 ;;		___aldiv
  2824 ;;		___almod
  2825 ;;		_abs
  2826 ;;		_pad
  2827 ;; This function is called by:
  2828 ;;		_vfpfcnvrt
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text5
  2833   000620                     __ptext5:
  2834                           	callstack 0
  2835   000620                     _dtoa:
  2836                           	callstack 19
  2837   000620                     
  2838                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2839   000620  BE27               	btfsc	(dtoa@d+3)^0,7,c
  2840   000622  EF15  F003         	goto	u4621
  2841   000626  EF18  F003         	goto	u4620
  2842   00062A                     u4621:
  2843   00062A  0E01               	movlw	1
  2844   00062C  EF19  F003         	goto	u4630
  2845   000630                     u4620:
  2846   000630  0E00               	movlw	0
  2847   000632                     u4630:
  2848   000632  6E2E               	movwf	dtoa@s^0,c
  2849   000634                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2851   000634  502E               	movf	dtoa@s^0,w,c
  2852   000636  B4D8               	btfsc	status,2,c
  2853   000638  EF20  F003         	goto	u4641
  2854   00063C  EF22  F003         	goto	u4640
  2855   000640                     u4641:
  2856   000640  EF2A  F003         	goto	l7029
  2857   000644                     u4640:
  2858   000644                     
  2859                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2860   000644  1E27               	comf	(dtoa@d+3)^0,f,c
  2861   000646  1E26               	comf	(dtoa@d+2)^0,f,c
  2862   000648  1E25               	comf	(dtoa@d+1)^0,f,c
  2863   00064A  6C24               	negf	dtoa@d^0,c
  2864   00064C  0E00               	movlw	0
  2865   00064E  2225               	addwfc	(dtoa@d+1)^0,f,c
  2866   000650  2226               	addwfc	(dtoa@d+2)^0,f,c
  2867   000652  2227               	addwfc	(dtoa@d+3)^0,f,c
  2868   000654                     l7029:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2871   000654  0100               	movlb	0	; () banked
  2872   000656  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  2873   000658  EF32  F003         	goto	u4650
  2874   00065C  EF30  F003         	goto	u4651
  2875   000660                     u4651:
  2876   000660  EF38  F003         	goto	l2082
  2877   000664                     u4650:
  2878   000664                     
  2879                           ; BSR set to: 0
  2880   000664  0E00               	movlw	0
  2881   000666  6E2B               	movwf	(dtoa@p+1)^0,c
  2882   000668  0E01               	movlw	1
  2883   00066A  6E2A               	movwf	dtoa@p^0,c
  2884   00066C  EF3C  F003         	goto	l2084
  2885   000670                     l2082:
  2886                           
  2887                           ; BSR set to: 0
  2888   000670  C0A0  F02A         	movff	_prec,dtoa@p
  2889   000674  C0A1  F02B         	movff	_prec+1,dtoa@p+1
  2890   000678                     l2084:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2894   000678  C09E  F02C         	movff	_width,dtoa@w
  2895   00067C  C09F  F02D         	movff	_width+1,dtoa@w+1
  2896   000680                     
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2899   000680  502E               	movf	dtoa@s^0,w,c
  2900   000682  B4D8               	btfsc	status,2,c
  2901   000684  EF46  F003         	goto	u4661
  2902   000688  EF48  F003         	goto	u4660
  2903   00068C                     u4661:
  2904   00068C  EF5F  F003         	goto	l2085
  2905   000690                     u4660:
  2906   000690                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2909   000690  062C               	decf	dtoa@w^0,f,c
  2910   000692  A0D8               	btfss	status,0,c
  2911   000694  062D               	decf	(dtoa@w+1)^0,f,c
  2912   000696                     
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2915   000696  502E               	movf	dtoa@s^0,w,c
  2916   000698  A4D8               	btfss	status,2,c
  2917   00069A  EF51  F003         	goto	u4671
  2918   00069E  EF53  F003         	goto	u4670
  2919   0006A2                     u4671:
  2920   0006A2  EF59  F003         	goto	l7041
  2921   0006A6                     u4670:
  2922   0006A6                     
  2923                           ; BSR set to: 0
  2924   0006A6  0E00               	movlw	0
  2925   0006A8  6E29               	movwf	(_dtoa$3526+1)^0,c
  2926   0006AA  0E2B               	movlw	43
  2927   0006AC  6E28               	movwf	_dtoa$3526^0,c
  2928   0006AE  EF5D  F003         	goto	l7043
  2929   0006B2                     l7041:
  2930                           
  2931                           ; BSR set to: 0
  2932   0006B2  0E00               	movlw	0
  2933   0006B4  6E29               	movwf	(_dtoa$3526+1)^0,c
  2934   0006B6  0E2D               	movlw	45
  2935   0006B8  6E28               	movwf	_dtoa$3526^0,c
  2936   0006BA                     l7043:
  2937                           
  2938                           ; BSR set to: 0
  2939   0006BA  C028  F02E         	movff	_dtoa$3526,dtoa@s
  2940   0006BE                     l2085:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2944   0006BE  0E00               	movlw	0
  2945   0006C0  6E30               	movwf	(dtoa@i+1)^0,c
  2946   0006C2  0E1F               	movlw	31
  2947   0006C4  6E2F               	movwf	dtoa@i^0,c
  2948   0006C6                     
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2951   0006C6  0E00               	movlw	0
  2952   0006C8  0102               	movlb	2	; () banked
  2953   0006CA  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2956   0006CC  EFAC  F003         	goto	l7057
  2957   0006D0                     l7047:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2960   0006D0  062F               	decf	dtoa@i^0,f,c
  2961   0006D2  A0D8               	btfss	status,0,c
  2962   0006D4  0630               	decf	(dtoa@i+1)^0,f,c
  2963   0006D6                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2965   0006D6  0E00               	movlw	low _dbuf
  2966   0006D8  242F               	addwf	dtoa@i^0,w,c
  2967   0006DA  6ED9               	movwf	fsr2l,c
  2968   0006DC  0E02               	movlw	high _dbuf
  2969   0006DE  2030               	addwfc	(dtoa@i+1)^0,w,c
  2970   0006E0  6EDA               	movwf	fsr2h,c
  2971   0006E2  C024  F005         	movff	dtoa@d,___almod@dividend
  2972   0006E6  C025  F006         	movff	dtoa@d+1,___almod@dividend+1
  2973   0006EA  C026  F007         	movff	dtoa@d+2,___almod@dividend+2
  2974   0006EE  C027  F008         	movff	dtoa@d+3,___almod@dividend+3
  2975   0006F2  0E0A               	movlw	10
  2976   0006F4  6E09               	movwf	___almod@divisor^0,c
  2977   0006F6  0E00               	movlw	0
  2978   0006F8  6E0A               	movwf	(___almod@divisor+1)^0,c
  2979   0006FA  0E00               	movlw	0
  2980   0006FC  6E0B               	movwf	(___almod@divisor+2)^0,c
  2981   0006FE  0E00               	movlw	0
  2982   000700  6E0C               	movwf	(___almod@divisor+3)^0,c
  2983   000702  EC7A  F007         	call	___almod	;wreg free
  2984   000706  C005  F00F         	movff	?___almod,abs@a
  2985   00070A  C006  F010         	movff	?___almod+1,abs@a+1
  2986   00070E  ECBE  F00C         	call	_abs	;wreg free
  2987   000712  500F               	movf	?_abs^0,w,c
  2988   000714  0F30               	addlw	48
  2989   000716  6EDF               	movwf	indf2,c
  2990   000718                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2992   000718  062A               	decf	dtoa@p^0,f,c
  2993   00071A  A0D8               	btfss	status,0,c
  2994   00071C  062B               	decf	(dtoa@p+1)^0,f,c
  2995   00071E                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2997   00071E  062C               	decf	dtoa@w^0,f,c
  2998   000720  A0D8               	btfss	status,0,c
  2999   000722  062D               	decf	(dtoa@w+1)^0,f,c
  3000   000724                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3002   000724  C024  F005         	movff	dtoa@d,___aldiv@dividend
  3003   000728  C025  F006         	movff	dtoa@d+1,___aldiv@dividend+1
  3004   00072C  C026  F007         	movff	dtoa@d+2,___aldiv@dividend+2
  3005   000730  C027  F008         	movff	dtoa@d+3,___aldiv@dividend+3
  3006   000734  0E0A               	movlw	10
  3007   000736  6E09               	movwf	___aldiv@divisor^0,c
  3008   000738  0E00               	movlw	0
  3009   00073A  6E0A               	movwf	(___aldiv@divisor+1)^0,c
  3010   00073C  0E00               	movlw	0
  3011   00073E  6E0B               	movwf	(___aldiv@divisor+2)^0,c
  3012   000740  0E00               	movlw	0
  3013   000742  6E0C               	movwf	(___aldiv@divisor+3)^0,c
  3014   000744  EC06  F006         	call	___aldiv	;wreg free
  3015   000748  C005  F024         	movff	?___aldiv,dtoa@d
  3016   00074C  C006  F025         	movff	?___aldiv+1,dtoa@d+1
  3017   000750  C007  F026         	movff	?___aldiv+2,dtoa@d+2
  3018   000754  C008  F027         	movff	?___aldiv+3,dtoa@d+3
  3019   000758                     l7057:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3022   000758  BE30               	btfsc	(dtoa@i+1)^0,7,c
  3023   00075A  EFB7  F003         	goto	u4681
  3024   00075E  5030               	movf	(dtoa@i+1)^0,w,c
  3025   000760  E108               	bnz	u4680
  3026   000762  042F               	decf	dtoa@i^0,w,c
  3027   000764  A0D8               	btfss	status,0,c
  3028   000766  EFB7  F003         	goto	u4681
  3029   00076A  EFB9  F003         	goto	u4680
  3030   00076E                     u4681:
  3031   00076E  EFD1  F003         	goto	l7063
  3032   000772                     u4680:
  3033   000772  5024               	movf	dtoa@d^0,w,c
  3034   000774  1025               	iorwf	(dtoa@d+1)^0,w,c
  3035   000776  1026               	iorwf	(dtoa@d+2)^0,w,c
  3036   000778  1027               	iorwf	(dtoa@d+3)^0,w,c
  3037   00077A  A4D8               	btfss	status,2,c
  3038   00077C  EFC2  F003         	goto	u4691
  3039   000780  EFC4  F003         	goto	u4690
  3040   000784                     u4691:
  3041   000784  EF68  F003         	goto	l7047
  3042   000788                     u4690:
  3043   000788  BE2B               	btfsc	(dtoa@p+1)^0,7,c
  3044   00078A  EFD1  F003         	goto	u4700
  3045   00078E  502B               	movf	(dtoa@p+1)^0,w,c
  3046   000790  E106               	bnz	u4701
  3047   000792  042A               	decf	dtoa@p^0,w,c
  3048   000794  B0D8               	btfsc	status,0,c
  3049   000796  EFCF  F003         	goto	u4701
  3050   00079A  EFD1  F003         	goto	u4700
  3051   00079E                     u4701:
  3052   00079E  EF68  F003         	goto	l7047
  3053   0007A2                     u4700:
  3054   0007A2                     l7063:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3057   0007A2  502E               	movf	dtoa@s^0,w,c
  3058   0007A4  B4D8               	btfsc	status,2,c
  3059   0007A6  EFD7  F003         	goto	u4711
  3060   0007AA  EFD9  F003         	goto	u4710
  3061   0007AE                     u4711:
  3062   0007AE  EFE4  F003         	goto	l7069
  3063   0007B2                     u4710:
  3064   0007B2                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3066   0007B2  062F               	decf	dtoa@i^0,f,c
  3067   0007B4  A0D8               	btfss	status,0,c
  3068   0007B6  0630               	decf	(dtoa@i+1)^0,f,c
  3069   0007B8                     
  3070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3071   0007B8  0E00               	movlw	low _dbuf
  3072   0007BA  242F               	addwf	dtoa@i^0,w,c
  3073   0007BC  6ED9               	movwf	fsr2l,c
  3074   0007BE  0E02               	movlw	high _dbuf
  3075   0007C0  2030               	addwfc	(dtoa@i+1)^0,w,c
  3076   0007C2  6EDA               	movwf	fsr2h,c
  3077   0007C4  C02E  FFDF         	movff	dtoa@s,indf2
  3078   0007C8                     l7069:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3081   0007C8  C022  F017         	movff	dtoa@fp,pad@fp
  3082   0007CC  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  3083   0007D0  0E00               	movlw	low _dbuf
  3084   0007D2  242F               	addwf	dtoa@i^0,w,c
  3085   0007D4  6E19               	movwf	pad@buf^0,c
  3086   0007D6  0E02               	movlw	high _dbuf
  3087   0007D8  2030               	addwfc	(dtoa@i+1)^0,w,c
  3088   0007DA  6E1A               	movwf	(pad@buf+1)^0,c
  3089   0007DC  C02C  F01B         	movff	dtoa@w,pad@p
  3090   0007E0  C02D  F01C         	movff	dtoa@w+1,pad@p+1
  3091   0007E4  ECCE  F00A         	call	_pad	;wreg free
  3092   0007E8  0012               	return		;funcret
  3093   0007EA                     __end_of_dtoa:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _pad *****************
  3097 ;; Defined at:
  3098 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3101 ;;		 -> NULL(0), 
  3102 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3103 ;;		 -> dbuf(32), 
  3104 ;;  p               2   26[COMRAM] int 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  w               2   31[COMRAM] int 
  3107 ;;  i               2   29[COMRAM] int 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;Total ram usage:       11 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 7
  3124 ;; This function calls:
  3125 ;;		_fputc
  3126 ;;		_fputs
  3127 ;; This function is called by:
  3128 ;;		_dtoa
  3129 ;;		_xtoa
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text6
  3134   00159C                     __ptext6:
  3135                           	callstack 0
  3136   00159C                     _pad:
  3137                           	callstack 19
  3138   00159C                     
  3139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3140   00159C  BE1C               	btfsc	(pad@p+1)^0,7,c
  3141   00159E  EFD3  F00A         	goto	u4591
  3142   0015A2  EFD5  F00A         	goto	u4590
  3143   0015A6                     u4591:
  3144   0015A6  EFDB  F00A         	goto	l7009
  3145   0015AA                     u4590:
  3146   0015AA  C01B  F020         	movff	pad@p,pad@w
  3147   0015AE  C01C  F021         	movff	pad@p+1,pad@w+1
  3148   0015B2  EFDF  F00A         	goto	l2073
  3149   0015B6                     l7009:
  3150   0015B6  0E00               	movlw	0
  3151   0015B8  6E21               	movwf	(pad@w+1)^0,c
  3152   0015BA  0E00               	movlw	0
  3153   0015BC  6E20               	movwf	pad@w^0,c
  3154   0015BE                     l2073:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3157   0015BE  0E00               	movlw	0
  3158   0015C0  6E1F               	movwf	(pad@i+1)^0,c
  3159   0015C2  0E00               	movlw	0
  3160   0015C4  6E1E               	movwf	pad@i^0,c
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3163   0015C6  EFF1  F00A         	goto	l7015
  3164   0015CA                     l7011:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3167   0015CA  0E00               	movlw	0
  3168   0015CC  6E08               	movwf	(fputc@c+1)^0,c
  3169   0015CE  0E20               	movlw	32
  3170   0015D0  6E07               	movwf	fputc@c^0,c
  3171   0015D2  C017  F009         	movff	pad@fp,fputc@fp
  3172   0015D6  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  3173   0015DA  EC57  F008         	call	_fputc	;wreg free
  3174   0015DE                     
  3175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3176   0015DE  4A1E               	infsnz	pad@i^0,f,c
  3177   0015E0  2A1F               	incf	(pad@i+1)^0,f,c
  3178   0015E2                     l7015:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3181   0015E2  5020               	movf	pad@w^0,w,c
  3182   0015E4  5C1E               	subwf	pad@i^0,w,c
  3183   0015E6  501F               	movf	(pad@i+1)^0,w,c
  3184   0015E8  0A80               	xorlw	128
  3185   0015EA  6E1D               	movwf	??_pad^0,c
  3186   0015EC  5021               	movf	(pad@w+1)^0,w,c
  3187   0015EE  0A80               	xorlw	128
  3188   0015F0  581D               	subwfb	??_pad^0,w,c
  3189   0015F2  A0D8               	btfss	status,0,c
  3190   0015F4  EFFE  F00A         	goto	u4601
  3191   0015F8  EF00  F00B         	goto	u4600
  3192   0015FC                     u4601:
  3193   0015FC  EFE5  F00A         	goto	l7011
  3194   001600                     u4600:
  3195   001600                     
  3196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3197   001600  C019  F010         	movff	pad@buf,fputs@s
  3198   001604  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3199   001608  C017  F012         	movff	pad@fp,fputs@fp
  3200   00160C  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3201   001610  EC7B  F00C         	call	_fputs	;wreg free
  3202   001614  0012               	return		;funcret
  3203   001616                     __end_of_pad:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function _fputs *****************
  3207 ;; Defined at:
  3208 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  s               2   15[COMRAM] PTR const unsigned char 
  3211 ;;		 -> dbuf(32), 
  3212 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3213 ;;		 -> NULL(0), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  i               2   20[COMRAM] int 
  3216 ;;  c               1   19[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2   15[COMRAM] int 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:        7 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 6
  3233 ;; This function calls:
  3234 ;;		_fputc
  3235 ;; This function is called by:
  3236 ;;		_pad
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text7
  3241   0018F6                     __ptext7:
  3242                           	callstack 0
  3243   0018F6                     _fputs:
  3244                           	callstack 19
  3245   0018F6  0E00               	movlw	0
  3246   0018F8  6E16               	movwf	(fputs@i+1)^0,c
  3247   0018FA  0E00               	movlw	0
  3248   0018FC  6E15               	movwf	fputs@i^0,c
  3249   0018FE  EF8C  F00C         	goto	l6923
  3250   001902                     l6919:
  3251   001902  C014  F007         	movff	fputs@c,fputc@c
  3252   001906  6A08               	clrf	(fputc@c+1)^0,c
  3253   001908  C012  F009         	movff	fputs@fp,fputc@fp
  3254   00190C  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  3255   001910  EC57  F008         	call	_fputc	;wreg free
  3256   001914  4A15               	infsnz	fputs@i^0,f,c
  3257   001916  2A16               	incf	(fputs@i+1)^0,f,c
  3258   001918                     l6923:
  3259   001918  5015               	movf	fputs@i^0,w,c
  3260   00191A  2410               	addwf	fputs@s^0,w,c
  3261   00191C  6ED9               	movwf	fsr2l,c
  3262   00191E  5016               	movf	(fputs@i+1)^0,w,c
  3263   001920  2011               	addwfc	(fputs@s+1)^0,w,c
  3264   001922  6EDA               	movwf	fsr2h,c
  3265   001924  50DF               	movf	indf2,w,c
  3266   001926  6E14               	movwf	fputs@c^0,c
  3267   001928  5014               	movf	fputs@c^0,w,c
  3268   00192A  A4D8               	btfss	status,2,c
  3269   00192C  EF9A  F00C         	goto	u4461
  3270   001930  EF9C  F00C         	goto	u4460
  3271   001934                     u4461:
  3272   001934  EF81  F00C         	goto	l6919
  3273   001938                     u4460:
  3274   001938  0012               	return		;funcret
  3275   00193A                     __end_of_fputs:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _fputc *****************
  3279 ;; Defined at:
  3280 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  c               2    6[COMRAM] int 
  3283 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  3284 ;;		 -> NULL(0), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2    6[COMRAM] int 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:        9 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 5
  3303 ;; This function calls:
  3304 ;;		_putch
  3305 ;; This function is called by:
  3306 ;;		_pad
  3307 ;;		_vfpfcnvrt
  3308 ;;		_fputs
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text8
  3313   0010AE                     __ptext8:
  3314                           	callstack 0
  3315   0010AE                     _fputc:
  3316                           	callstack 19
  3317   0010AE  5009               	movf	fputc@fp^0,w,c
  3318   0010B0  100A               	iorwf	(fputc@fp+1)^0,w,c
  3319   0010B2  B4D8               	btfsc	status,2,c
  3320   0010B4  EF5E  F008         	goto	u4421
  3321   0010B8  EF60  F008         	goto	u4420
  3322   0010BC                     u4421:
  3323   0010BC  EF69  F008         	goto	l6907
  3324   0010C0                     u4420:
  3325   0010C0  5009               	movf	fputc@fp^0,w,c
  3326   0010C2  100A               	iorwf	(fputc@fp+1)^0,w,c
  3327   0010C4  A4D8               	btfss	status,2,c
  3328   0010C6  EF67  F008         	goto	u4431
  3329   0010CA  EF69  F008         	goto	u4430
  3330   0010CE                     u4431:
  3331   0010CE  EF6E  F008         	goto	l6909
  3332   0010D2                     u4430:
  3333   0010D2                     l6907:
  3334   0010D2  5007               	movf	fputc@c^0,w,c
  3335   0010D4  ECE0  F00D         	call	_putch
  3336   0010D8  EFBB  F008         	goto	l2165
  3337   0010DC                     l6909:
  3338   0010DC  EE20 F00A          	lfsr	2,10
  3339   0010E0  5009               	movf	fputc@fp^0,w,c
  3340   0010E2  26D9               	addwf	fsr2l,f,c
  3341   0010E4  500A               	movf	(fputc@fp+1)^0,w,c
  3342   0010E6  22DA               	addwfc	fsr2h,f,c
  3343   0010E8  50DE               	movf	postinc2,w,c
  3344   0010EA  10DE               	iorwf	postinc2,w,c
  3345   0010EC  B4D8               	btfsc	status,2,c
  3346   0010EE  EF7B  F008         	goto	u4441
  3347   0010F2  EF7D  F008         	goto	u4440
  3348   0010F6                     u4441:
  3349   0010F6  EF98  F008         	goto	l6913
  3350   0010FA                     u4440:
  3351   0010FA  EE20 F00A          	lfsr	2,10
  3352   0010FE  5009               	movf	fputc@fp^0,w,c
  3353   001100  26D9               	addwf	fsr2l,f,c
  3354   001102  500A               	movf	(fputc@fp+1)^0,w,c
  3355   001104  22DA               	addwfc	fsr2h,f,c
  3356   001106  EE10 F003          	lfsr	1,3
  3357   00110A  5009               	movf	fputc@fp^0,w,c
  3358   00110C  26E1               	addwf	fsr1l,f,c
  3359   00110E  500A               	movf	(fputc@fp+1)^0,w,c
  3360   001110  22E2               	addwfc	fsr1h,f,c
  3361   001112  50DE               	movf	postinc2,w,c
  3362   001114  5CE6               	subwf	postinc1,w,c
  3363   001116  50E6               	movf	postinc1,w,c
  3364   001118  0A80               	xorlw	128
  3365   00111A  6E0F               	movwf	(??_fputc+4)^0,c
  3366   00111C  50DE               	movf	postinc2,w,c
  3367   00111E  0A80               	xorlw	128
  3368   001120  580F               	subwfb	(??_fputc+4)^0,w,c
  3369   001122  B0D8               	btfsc	status,0,c
  3370   001124  EF96  F008         	goto	u4451
  3371   001128  EF98  F008         	goto	u4450
  3372   00112C                     u4451:
  3373   00112C  EFBB  F008         	goto	l2165
  3374   001130                     u4450:
  3375   001130                     l6913:
  3376   001130  EE20 F003          	lfsr	2,3
  3377   001134  5009               	movf	fputc@fp^0,w,c
  3378   001136  26D9               	addwf	fsr2l,f,c
  3379   001138  500A               	movf	(fputc@fp+1)^0,w,c
  3380   00113A  22DA               	addwfc	fsr2h,f,c
  3381   00113C  CFDE F00B          	movff	postinc2,??_fputc
  3382   001140  CFDD F00C          	movff	postdec2,??_fputc+1
  3383   001144  C009  FFD9         	movff	fputc@fp,fsr2l
  3384   001148  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  3385   00114C  CFDE F00D          	movff	postinc2,??_fputc+2
  3386   001150  CFDD F00E          	movff	postdec2,??_fputc+3
  3387   001154  500B               	movf	??_fputc^0,w,c
  3388   001156  240D               	addwf	(??_fputc+2)^0,w,c
  3389   001158  6ED9               	movwf	fsr2l,c
  3390   00115A  500C               	movf	(??_fputc+1)^0,w,c
  3391   00115C  200E               	addwfc	(??_fputc+3)^0,w,c
  3392   00115E  6EDA               	movwf	fsr2h,c
  3393   001160  C007  FFDF         	movff	fputc@c,indf2
  3394   001164  EE20 F003          	lfsr	2,3
  3395   001168  5009               	movf	fputc@fp^0,w,c
  3396   00116A  26D9               	addwf	fsr2l,f,c
  3397   00116C  500A               	movf	(fputc@fp+1)^0,w,c
  3398   00116E  22DA               	addwfc	fsr2h,f,c
  3399   001170  2ADE               	incf	postinc2,f,c
  3400   001172  0E00               	movlw	0
  3401   001174  22DD               	addwfc	postdec2,f,c
  3402   001176                     l2165:
  3403   001176  0012               	return		;funcret
  3404   001178                     __end_of_fputc:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function _putch *****************
  3408 ;; Defined at:
  3409 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  txData          1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  txData          1    5[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        1 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 4
  3430 ;; This function calls:
  3431 ;;		_EUSART1_Write
  3432 ;; This function is called by:
  3433 ;;		_fputc
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text9
  3438   001BC0                     __ptext9:
  3439                           	callstack 0
  3440   001BC0                     _putch:
  3441                           	callstack 19
  3442                           
  3443                           ;incstack = 0
  3444                           ;putch@txData stored from wreg
  3445   001BC0  6E06               	movwf	putch@txData^0,c
  3446   001BC2                     
  3447                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3448   001BC2  5006               	movf	putch@txData^0,w,c
  3449   001BC4  ECAD  F00D         	call	_EUSART1_Write
  3450   001BC8  0012               	return		;funcret
  3451   001BCA                     __end_of_putch:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _EUSART1_Write *****************
  3455 ;; Defined at:
  3456 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  txData          1    wreg     unsigned char 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  txData          1    4[COMRAM] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:        1 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 3
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_putch
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text10
  3485   001B5A                     __ptext10:
  3486                           	callstack 0
  3487   001B5A                     _EUSART1_Write:
  3488                           	callstack 19
  3489                           
  3490                           ;incstack = 0
  3491                           ;EUSART1_Write@txData stored from wreg
  3492   001B5A  6E05               	movwf	EUSART1_Write@txData^0,c
  3493   001B5C                     l225:
  3494                           
  3495                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3496   001B5C  A89E               	btfss	158,4,c	;volatile
  3497   001B5E  EFB3  F00D         	goto	u4411
  3498   001B62  EFB5  F00D         	goto	u4410
  3499   001B66                     u4411:
  3500   001B66  EFAE  F00D         	goto	l225
  3501   001B6A                     u4410:
  3502   001B6A                     
  3503                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3504   001B6A  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3505   001B6E  0012               	return		;funcret
  3506   001B70                     __end_of_EUSART1_Write:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _abs *****************
  3510 ;; Defined at:
  3511 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  a               2   14[COMRAM] int 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2   14[COMRAM] int 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;Total ram usage:        4 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 3
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_dtoa
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text11
  3540   00197C                     __ptext11:
  3541                           	callstack 0
  3542   00197C                     _abs:
  3543                           	callstack 23
  3544   00197C  BE10               	btfsc	(abs@a+1)^0,7,c
  3545   00197E  EFCB  F00C         	goto	u4610
  3546   001982  5010               	movf	(abs@a+1)^0,w,c
  3547   001984  E106               	bnz	u4611
  3548   001986  040F               	decf	abs@a^0,w,c
  3549   001988  B0D8               	btfsc	status,0,c
  3550   00198A  EFC9  F00C         	goto	u4611
  3551   00198E  EFCB  F00C         	goto	u4610
  3552   001992                     u4611:
  3553   001992  EFD9  F00C         	goto	l2150
  3554   001996                     u4610:
  3555   001996  C00F  F011         	movff	abs@a,??_abs
  3556   00199A  C010  F012         	movff	abs@a+1,??_abs+1
  3557   00199E  1E11               	comf	??_abs^0,f,c
  3558   0019A0  1E12               	comf	(??_abs+1)^0,f,c
  3559   0019A2  4A11               	infsnz	??_abs^0,f,c
  3560   0019A4  2A12               	incf	(??_abs+1)^0,f,c
  3561   0019A6  C011  F00F         	movff	??_abs,?_abs
  3562   0019AA  C012  F010         	movff	??_abs+1,?_abs+1
  3563   0019AE  EFDD  F00C         	goto	l2153
  3564   0019B2                     l2150:
  3565   0019B2  C00F  F00F         	movff	abs@a,?_abs
  3566   0019B6  C010  F010         	movff	abs@a+1,?_abs+1
  3567   0019BA                     l2153:
  3568   0019BA  0012               	return		;funcret
  3569   0019BC                     __end_of_abs:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function ___almod *****************
  3573 ;; Defined at:
  3574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\almod.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  dividend        4    4[COMRAM] long 
  3577 ;;  divisor         4    8[COMRAM] long 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  sign            1   13[COMRAM] unsigned char 
  3580 ;;  counter         1   12[COMRAM] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  4    4[COMRAM] long 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3590 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;Total ram usage:       10 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 3
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_dtoa
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text12
  3605   000EF4                     __ptext12:
  3606                           	callstack 0
  3607   000EF4                     ___almod:
  3608                           	callstack 23
  3609   000EF4  0E00               	movlw	0
  3610   000EF6  6E0E               	movwf	___almod@sign^0,c
  3611   000EF8  BE08               	btfsc	(___almod@dividend+3)^0,7,c
  3612   000EFA  EF83  F007         	goto	u4530
  3613   000EFE  EF81  F007         	goto	u4531
  3614   000F02                     u4531:
  3615   000F02  EF8D  F007         	goto	l6977
  3616   000F06                     u4530:
  3617   000F06  1E08               	comf	(___almod@dividend+3)^0,f,c
  3618   000F08  1E07               	comf	(___almod@dividend+2)^0,f,c
  3619   000F0A  1E06               	comf	(___almod@dividend+1)^0,f,c
  3620   000F0C  6C05               	negf	___almod@dividend^0,c
  3621   000F0E  0E00               	movlw	0
  3622   000F10  2206               	addwfc	(___almod@dividend+1)^0,f,c
  3623   000F12  2207               	addwfc	(___almod@dividend+2)^0,f,c
  3624   000F14  2208               	addwfc	(___almod@dividend+3)^0,f,c
  3625   000F16  0E01               	movlw	1
  3626   000F18  6E0E               	movwf	___almod@sign^0,c
  3627   000F1A                     l6977:
  3628   000F1A  BE0C               	btfsc	(___almod@divisor+3)^0,7,c
  3629   000F1C  EF94  F007         	goto	u4540
  3630   000F20  EF92  F007         	goto	u4541
  3631   000F24                     u4541:
  3632   000F24  EF9C  F007         	goto	l6981
  3633   000F28                     u4540:
  3634   000F28  1E0C               	comf	(___almod@divisor+3)^0,f,c
  3635   000F2A  1E0B               	comf	(___almod@divisor+2)^0,f,c
  3636   000F2C  1E0A               	comf	(___almod@divisor+1)^0,f,c
  3637   000F2E  6C09               	negf	___almod@divisor^0,c
  3638   000F30  0E00               	movlw	0
  3639   000F32  220A               	addwfc	(___almod@divisor+1)^0,f,c
  3640   000F34  220B               	addwfc	(___almod@divisor+2)^0,f,c
  3641   000F36  220C               	addwfc	(___almod@divisor+3)^0,f,c
  3642   000F38                     l6981:
  3643   000F38  5009               	movf	___almod@divisor^0,w,c
  3644   000F3A  100A               	iorwf	(___almod@divisor+1)^0,w,c
  3645   000F3C  100B               	iorwf	(___almod@divisor+2)^0,w,c
  3646   000F3E  100C               	iorwf	(___almod@divisor+3)^0,w,c
  3647   000F40  B4D8               	btfsc	status,2,c
  3648   000F42  EFA5  F007         	goto	u4551
  3649   000F46  EFA7  F007         	goto	u4550
  3650   000F4A                     u4551:
  3651   000F4A  EFD7  F007         	goto	l6997
  3652   000F4E                     u4550:
  3653   000F4E  0E01               	movlw	1
  3654   000F50  6E0D               	movwf	___almod@counter^0,c
  3655   000F52  EFB1  F007         	goto	l6987
  3656   000F56                     l6985:
  3657   000F56  90D8               	bcf	status,0,c
  3658   000F58  3609               	rlcf	___almod@divisor^0,f,c
  3659   000F5A  360A               	rlcf	(___almod@divisor+1)^0,f,c
  3660   000F5C  360B               	rlcf	(___almod@divisor+2)^0,f,c
  3661   000F5E  360C               	rlcf	(___almod@divisor+3)^0,f,c
  3662   000F60  2A0D               	incf	___almod@counter^0,f,c
  3663   000F62                     l6987:
  3664   000F62  AE0C               	btfss	(___almod@divisor+3)^0,7,c
  3665   000F64  EFB6  F007         	goto	u4561
  3666   000F68  EFB8  F007         	goto	u4560
  3667   000F6C                     u4561:
  3668   000F6C  EFAB  F007         	goto	l6985
  3669   000F70                     u4560:
  3670   000F70                     l6989:
  3671   000F70  5009               	movf	___almod@divisor^0,w,c
  3672   000F72  5C05               	subwf	___almod@dividend^0,w,c
  3673   000F74  500A               	movf	(___almod@divisor+1)^0,w,c
  3674   000F76  5806               	subwfb	(___almod@dividend+1)^0,w,c
  3675   000F78  500B               	movf	(___almod@divisor+2)^0,w,c
  3676   000F7A  5807               	subwfb	(___almod@dividend+2)^0,w,c
  3677   000F7C  500C               	movf	(___almod@divisor+3)^0,w,c
  3678   000F7E  5808               	subwfb	(___almod@dividend+3)^0,w,c
  3679   000F80  A0D8               	btfss	status,0,c
  3680   000F82  EFC5  F007         	goto	u4571
  3681   000F86  EFC7  F007         	goto	u4570
  3682   000F8A                     u4571:
  3683   000F8A  EFCF  F007         	goto	l6993
  3684   000F8E                     u4570:
  3685   000F8E  5009               	movf	___almod@divisor^0,w,c
  3686   000F90  5E05               	subwf	___almod@dividend^0,f,c
  3687   000F92  500A               	movf	(___almod@divisor+1)^0,w,c
  3688   000F94  5A06               	subwfb	(___almod@dividend+1)^0,f,c
  3689   000F96  500B               	movf	(___almod@divisor+2)^0,w,c
  3690   000F98  5A07               	subwfb	(___almod@dividend+2)^0,f,c
  3691   000F9A  500C               	movf	(___almod@divisor+3)^0,w,c
  3692   000F9C  5A08               	subwfb	(___almod@dividend+3)^0,f,c
  3693   000F9E                     l6993:
  3694   000F9E  90D8               	bcf	status,0,c
  3695   000FA0  320C               	rrcf	(___almod@divisor+3)^0,f,c
  3696   000FA2  320B               	rrcf	(___almod@divisor+2)^0,f,c
  3697   000FA4  320A               	rrcf	(___almod@divisor+1)^0,f,c
  3698   000FA6  3209               	rrcf	___almod@divisor^0,f,c
  3699   000FA8  2E0D               	decfsz	___almod@counter^0,f,c
  3700   000FAA  EFB8  F007         	goto	l6989
  3701   000FAE                     l6997:
  3702   000FAE  500E               	movf	___almod@sign^0,w,c
  3703   000FB0  B4D8               	btfsc	status,2,c
  3704   000FB2  EFDD  F007         	goto	u4581
  3705   000FB6  EFDF  F007         	goto	u4580
  3706   000FBA                     u4581:
  3707   000FBA  EFE7  F007         	goto	l7001
  3708   000FBE                     u4580:
  3709   000FBE  1E08               	comf	(___almod@dividend+3)^0,f,c
  3710   000FC0  1E07               	comf	(___almod@dividend+2)^0,f,c
  3711   000FC2  1E06               	comf	(___almod@dividend+1)^0,f,c
  3712   000FC4  6C05               	negf	___almod@dividend^0,c
  3713   000FC6  0E00               	movlw	0
  3714   000FC8  2206               	addwfc	(___almod@dividend+1)^0,f,c
  3715   000FCA  2207               	addwfc	(___almod@dividend+2)^0,f,c
  3716   000FCC  2208               	addwfc	(___almod@dividend+3)^0,f,c
  3717   000FCE                     l7001:
  3718   000FCE  C005  F005         	movff	___almod@dividend,?___almod
  3719   000FD2  C006  F006         	movff	___almod@dividend+1,?___almod+1
  3720   000FD6  C007  F007         	movff	___almod@dividend+2,?___almod+2
  3721   000FDA  C008  F008         	movff	___almod@dividend+3,?___almod+3
  3722   000FDE  0012               	return		;funcret
  3723   000FE0                     __end_of___almod:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function ___aldiv *****************
  3727 ;; Defined at:
  3728 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  dividend        4    4[COMRAM] long 
  3731 ;;  divisor         4    8[COMRAM] long 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  quotient        4   14[COMRAM] long 
  3734 ;;  sign            1   13[COMRAM] unsigned char 
  3735 ;;  counter         1   12[COMRAM] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  4    4[COMRAM] long 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3745 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;Total ram usage:       14 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 3
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_dtoa
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text13
  3760   000C0C                     __ptext13:
  3761                           	callstack 0
  3762   000C0C                     ___aldiv:
  3763                           	callstack 23
  3764   000C0C  0E00               	movlw	0
  3765   000C0E  6E0E               	movwf	___aldiv@sign^0,c
  3766   000C10  BE0C               	btfsc	(___aldiv@divisor+3)^0,7,c
  3767   000C12  EF0F  F006         	goto	u4470
  3768   000C16  EF0D  F006         	goto	u4471
  3769   000C1A                     u4471:
  3770   000C1A  EF19  F006         	goto	l6933
  3771   000C1E                     u4470:
  3772   000C1E  1E0C               	comf	(___aldiv@divisor+3)^0,f,c
  3773   000C20  1E0B               	comf	(___aldiv@divisor+2)^0,f,c
  3774   000C22  1E0A               	comf	(___aldiv@divisor+1)^0,f,c
  3775   000C24  6C09               	negf	___aldiv@divisor^0,c
  3776   000C26  0E00               	movlw	0
  3777   000C28  220A               	addwfc	(___aldiv@divisor+1)^0,f,c
  3778   000C2A  220B               	addwfc	(___aldiv@divisor+2)^0,f,c
  3779   000C2C  220C               	addwfc	(___aldiv@divisor+3)^0,f,c
  3780   000C2E  0E01               	movlw	1
  3781   000C30  6E0E               	movwf	___aldiv@sign^0,c
  3782   000C32                     l6933:
  3783   000C32  BE08               	btfsc	(___aldiv@dividend+3)^0,7,c
  3784   000C34  EF20  F006         	goto	u4480
  3785   000C38  EF1E  F006         	goto	u4481
  3786   000C3C                     u4481:
  3787   000C3C  EF2A  F006         	goto	l6939
  3788   000C40                     u4480:
  3789   000C40  1E08               	comf	(___aldiv@dividend+3)^0,f,c
  3790   000C42  1E07               	comf	(___aldiv@dividend+2)^0,f,c
  3791   000C44  1E06               	comf	(___aldiv@dividend+1)^0,f,c
  3792   000C46  6C05               	negf	___aldiv@dividend^0,c
  3793   000C48  0E00               	movlw	0
  3794   000C4A  2206               	addwfc	(___aldiv@dividend+1)^0,f,c
  3795   000C4C  2207               	addwfc	(___aldiv@dividend+2)^0,f,c
  3796   000C4E  2208               	addwfc	(___aldiv@dividend+3)^0,f,c
  3797   000C50  0E01               	movlw	1
  3798   000C52  1A0E               	xorwf	___aldiv@sign^0,f,c
  3799   000C54                     l6939:
  3800   000C54  0E00               	movlw	0
  3801   000C56  6E0F               	movwf	___aldiv@quotient^0,c
  3802   000C58  0E00               	movlw	0
  3803   000C5A  6E10               	movwf	(___aldiv@quotient+1)^0,c
  3804   000C5C  0E00               	movlw	0
  3805   000C5E  6E11               	movwf	(___aldiv@quotient+2)^0,c
  3806   000C60  0E00               	movlw	0
  3807   000C62  6E12               	movwf	(___aldiv@quotient+3)^0,c
  3808   000C64  5009               	movf	___aldiv@divisor^0,w,c
  3809   000C66  100A               	iorwf	(___aldiv@divisor+1)^0,w,c
  3810   000C68  100B               	iorwf	(___aldiv@divisor+2)^0,w,c
  3811   000C6A  100C               	iorwf	(___aldiv@divisor+3)^0,w,c
  3812   000C6C  B4D8               	btfsc	status,2,c
  3813   000C6E  EF3B  F006         	goto	u4491
  3814   000C72  EF3D  F006         	goto	u4490
  3815   000C76                     u4491:
  3816   000C76  EF73  F006         	goto	l6961
  3817   000C7A                     u4490:
  3818   000C7A  0E01               	movlw	1
  3819   000C7C  6E0D               	movwf	___aldiv@counter^0,c
  3820   000C7E  EF47  F006         	goto	l6947
  3821   000C82                     l6945:
  3822   000C82  90D8               	bcf	status,0,c
  3823   000C84  3609               	rlcf	___aldiv@divisor^0,f,c
  3824   000C86  360A               	rlcf	(___aldiv@divisor+1)^0,f,c
  3825   000C88  360B               	rlcf	(___aldiv@divisor+2)^0,f,c
  3826   000C8A  360C               	rlcf	(___aldiv@divisor+3)^0,f,c
  3827   000C8C  2A0D               	incf	___aldiv@counter^0,f,c
  3828   000C8E                     l6947:
  3829   000C8E  AE0C               	btfss	(___aldiv@divisor+3)^0,7,c
  3830   000C90  EF4C  F006         	goto	u4501
  3831   000C94  EF4E  F006         	goto	u4500
  3832   000C98                     u4501:
  3833   000C98  EF41  F006         	goto	l6945
  3834   000C9C                     u4500:
  3835   000C9C                     l6949:
  3836   000C9C  90D8               	bcf	status,0,c
  3837   000C9E  360F               	rlcf	___aldiv@quotient^0,f,c
  3838   000CA0  3610               	rlcf	(___aldiv@quotient+1)^0,f,c
  3839   000CA2  3611               	rlcf	(___aldiv@quotient+2)^0,f,c
  3840   000CA4  3612               	rlcf	(___aldiv@quotient+3)^0,f,c
  3841   000CA6  5009               	movf	___aldiv@divisor^0,w,c
  3842   000CA8  5C05               	subwf	___aldiv@dividend^0,w,c
  3843   000CAA  500A               	movf	(___aldiv@divisor+1)^0,w,c
  3844   000CAC  5806               	subwfb	(___aldiv@dividend+1)^0,w,c
  3845   000CAE  500B               	movf	(___aldiv@divisor+2)^0,w,c
  3846   000CB0  5807               	subwfb	(___aldiv@dividend+2)^0,w,c
  3847   000CB2  500C               	movf	(___aldiv@divisor+3)^0,w,c
  3848   000CB4  5808               	subwfb	(___aldiv@dividend+3)^0,w,c
  3849   000CB6  A0D8               	btfss	status,0,c
  3850   000CB8  EF60  F006         	goto	u4511
  3851   000CBC  EF62  F006         	goto	u4510
  3852   000CC0                     u4511:
  3853   000CC0  EF6B  F006         	goto	l6957
  3854   000CC4                     u4510:
  3855   000CC4  5009               	movf	___aldiv@divisor^0,w,c
  3856   000CC6  5E05               	subwf	___aldiv@dividend^0,f,c
  3857   000CC8  500A               	movf	(___aldiv@divisor+1)^0,w,c
  3858   000CCA  5A06               	subwfb	(___aldiv@dividend+1)^0,f,c
  3859   000CCC  500B               	movf	(___aldiv@divisor+2)^0,w,c
  3860   000CCE  5A07               	subwfb	(___aldiv@dividend+2)^0,f,c
  3861   000CD0  500C               	movf	(___aldiv@divisor+3)^0,w,c
  3862   000CD2  5A08               	subwfb	(___aldiv@dividend+3)^0,f,c
  3863   000CD4  800F               	bsf	___aldiv@quotient^0,0,c
  3864   000CD6                     l6957:
  3865   000CD6  90D8               	bcf	status,0,c
  3866   000CD8  320C               	rrcf	(___aldiv@divisor+3)^0,f,c
  3867   000CDA  320B               	rrcf	(___aldiv@divisor+2)^0,f,c
  3868   000CDC  320A               	rrcf	(___aldiv@divisor+1)^0,f,c
  3869   000CDE  3209               	rrcf	___aldiv@divisor^0,f,c
  3870   000CE0  2E0D               	decfsz	___aldiv@counter^0,f,c
  3871   000CE2  EF4E  F006         	goto	l6949
  3872   000CE6                     l6961:
  3873   000CE6  500E               	movf	___aldiv@sign^0,w,c
  3874   000CE8  B4D8               	btfsc	status,2,c
  3875   000CEA  EF79  F006         	goto	u4521
  3876   000CEE  EF7B  F006         	goto	u4520
  3877   000CF2                     u4521:
  3878   000CF2  EF83  F006         	goto	l6965
  3879   000CF6                     u4520:
  3880   000CF6  1E12               	comf	(___aldiv@quotient+3)^0,f,c
  3881   000CF8  1E11               	comf	(___aldiv@quotient+2)^0,f,c
  3882   000CFA  1E10               	comf	(___aldiv@quotient+1)^0,f,c
  3883   000CFC  6C0F               	negf	___aldiv@quotient^0,c
  3884   000CFE  0E00               	movlw	0
  3885   000D00  2210               	addwfc	(___aldiv@quotient+1)^0,f,c
  3886   000D02  2211               	addwfc	(___aldiv@quotient+2)^0,f,c
  3887   000D04  2212               	addwfc	(___aldiv@quotient+3)^0,f,c
  3888   000D06                     l6965:
  3889   000D06  C00F  F005         	movff	___aldiv@quotient,?___aldiv
  3890   000D0A  C010  F006         	movff	___aldiv@quotient+1,?___aldiv+1
  3891   000D0E  C011  F007         	movff	___aldiv@quotient+2,?___aldiv+2
  3892   000D12  C012  F008         	movff	___aldiv@quotient+3,?___aldiv+3
  3893   000D16  0012               	return		;funcret
  3894   000D18                     __end_of___aldiv:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _millis *****************
  3898 ;; Defined at:
  3899 ;;		line 39 in file "millis.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  m               4    8[COMRAM] volatile unsigned long 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  4    4[COMRAM] unsigned long 
  3906 ;; Registers used:
  3907 ;;		None
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        8 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 3
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text14
  3928   001B16                     __ptext14:
  3929                           	callstack 0
  3930   001B16                     _millis:
  3931                           	callstack 27
  3932   001B16                     
  3933                           ;millis.c: 41:     volatile uint32_t m;;millis.c: 45:     (INTCONbits.GIE = 0);
  3934   001B16  9EF2               	bcf	242,7,c	;volatile
  3935                           
  3936                           ;millis.c: 46:     m = _millis;
  3937   001B18  C08E  F009         	movff	__millis,millis@m	;volatile
  3938   001B1C  C08F  F00A         	movff	__millis+1,millis@m+1	;volatile
  3939   001B20  C090  F00B         	movff	__millis+2,millis@m+2	;volatile
  3940   001B24  C091  F00C         	movff	__millis+3,millis@m+3	;volatile
  3941                           
  3942                           ;millis.c: 47:     (INTCONbits.GIE = 1);
  3943   001B28  8EF2               	bsf	242,7,c	;volatile
  3944                           
  3945                           ;millis.c: 49:     return m;
  3946   001B2A  C009  F005         	movff	millis@m,?_millis	;volatile
  3947   001B2E  C00A  F006         	movff	millis@m+1,?_millis+1	;volatile
  3948   001B32  C00B  F007         	movff	millis@m+2,?_millis+2	;volatile
  3949   001B36  C00C  F008         	movff	millis@m+3,?_millis+3	;volatile
  3950   001B3A  0012               	return		;funcret
  3951   001B3C                     __end_of_millis:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _SYSTEM_Initialize *****************
  3955 ;; Defined at:
  3956 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:        0 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 5
  3977 ;; This function calls:
  3978 ;;		_EUSART1_Initialize
  3979 ;;		_I2C1_Initialize
  3980 ;;		_INTERRUPT_Initialize
  3981 ;;		_OSCILLATOR_Initialize
  3982 ;;		_PIN_MANAGER_Initialize
  3983 ;;		_SPI2_Initialize
  3984 ;;		_TMR1_Initialize
  3985 ;; This function is called by:
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text15
  3991   001B3C                     __ptext15:
  3992                           	callstack 0
  3993   001B3C                     _SYSTEM_Initialize:
  3994                           	callstack 25
  3995   001B3C                     
  3996                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3997   001B3C  EC00  F00E         	call	_INTERRUPT_Initialize	;wreg free
  3998   001B40                     
  3999                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
  4000   001B40  ECB8  F00D         	call	_I2C1_Initialize	;wreg free
  4001   001B44                     
  4002                           ;mcc_generated_files/mcc.c: 55:     SPI2_Initialize();
  4003   001B44  ECC2  F00D         	call	_SPI2_Initialize	;wreg free
  4004   001B48                     
  4005                           ;mcc_generated_files/mcc.c: 56:     PIN_MANAGER_Initialize();
  4006   001B48  EC39  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  4007   001B4C                     
  4008                           ;mcc_generated_files/mcc.c: 57:     OSCILLATOR_Initialize();
  4009   001B4C  ECD3  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  4010   001B50                     
  4011                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  4012   001B50  EC4F  F00D         	call	_TMR1_Initialize	;wreg free
  4013   001B54                     
  4014                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  4015   001B54  ECDE  F00C         	call	_EUSART1_Initialize	;wreg free
  4016   001B58  0012               	return		;funcret
  4017   001B5A                     __end_of_SYSTEM_Initialize:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _TMR1_Initialize *****************
  4021 ;; Defined at:
  4022 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 4
  4043 ;; This function calls:
  4044 ;;		_TMR1_SetInterruptHandler
  4045 ;; This function is called by:
  4046 ;;		_SYSTEM_Initialize
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text16
  4051   001A9E                     __ptext16:
  4052                           	callstack 0
  4053   001A9E                     _TMR1_Initialize:
  4054                           	callstack 25
  4055   001A9E                     
  4056                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4057   001A9E  0E00               	movlw	0
  4058   001AA0  6ECC               	movwf	204,c	;volatile
  4059                           
  4060                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  4061   001AA2  0EFC               	movlw	252
  4062   001AA4  6ECF               	movwf	207,c	;volatile
  4063                           
  4064                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  4065   001AA6  0E18               	movlw	24
  4066   001AA8  6ECE               	movwf	206,c	;volatile
  4067   001AAA                     
  4068                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  4069   001AAA  CFCE F058          	movff	4046,_timer1ReloadVal	;volatile
  4070   001AAE  CFCF F059          	movff	4047,_timer1ReloadVal+1	;volatile
  4071   001AB2                     
  4072                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4073   001AB2  909E               	bcf	158,0,c	;volatile
  4074   001AB4                     
  4075                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4076   001AB4  809D               	bsf	157,0,c	;volatile
  4077   001AB6                     
  4078                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4079   001AB6  0E08               	movlw	low _TMR1_DefaultInterruptHandler
  4080   001AB8  6E05               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  4081   001ABA  0E1C               	movlw	high _TMR1_DefaultInterruptHandler
  4082   001ABC  6E06               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  4083   001ABE  ECE5  F00D         	call	_TMR1_SetInterruptHandler	;wreg free
  4084   001AC2                     
  4085                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x27;
  4086   001AC2  0E27               	movlw	39
  4087   001AC4  6ECD               	movwf	205,c	;volatile
  4088   001AC6  0012               	return		;funcret
  4089   001AC8                     __end_of_TMR1_Initialize:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _TMR1_SetInterruptHandler *****************
  4093 ;; Defined at:
  4094 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  4097 ;;		 -> increment_interrupt(1), TMR1_DefaultInterruptHandler(1), 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:        2 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 3
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_TMR1_Initialize
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text17
  4125   001BCA                     __ptext17:
  4126                           	callstack 0
  4127   001BCA                     _TMR1_SetInterruptHandler:
  4128                           	callstack 27
  4129   001BCA                     
  4130                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  4131   001BCA  C005  F0E3         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4132   001BCE  C006  F0E4         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4133   001BD2  0012               	return		;funcret
  4134   001BD4                     __end_of_TMR1_SetInterruptHandler:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _SPI2_Initialize *****************
  4138 ;; Defined at:
  4139 ;;		line 62 in file "mcc_generated_files/spi2.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 3
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_SYSTEM_Initialize
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text18
  4168   001B84                     __ptext18:
  4169                           	callstack 0
  4170   001B84                     _SPI2_Initialize:
  4171                           	callstack 26
  4172   001B84                     
  4173                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  4174   001B84  0E40               	movlw	64
  4175   001B86  6E6D               	movwf	109,c	;volatile
  4176                           
  4177                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x00;
  4178   001B88  0E00               	movlw	0
  4179   001B8A  6E6C               	movwf	108,c	;volatile
  4180                           
  4181                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  4182   001B8C  0E01               	movlw	1
  4183   001B8E  6E6E               	movwf	110,c	;volatile
  4184   001B90                     
  4185                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  4186   001B90  9293               	bcf	147,1,c	;volatile
  4187   001B92                     
  4188                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  4189   001B92  9A6C               	bcf	108,5,c	;volatile
  4190   001B94  0012               	return		;funcret
  4191   001B96                     __end_of_SPI2_Initialize:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _PIN_MANAGER_Initialize *****************
  4195 ;; Defined at:
  4196 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 3
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_SYSTEM_Initialize
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text19
  4225   001A72                     __ptext19:
  4226                           	callstack 0
  4227   001A72                     _PIN_MANAGER_Initialize:
  4228                           	callstack 26
  4229   001A72                     
  4230                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4231   001A72  0E00               	movlw	0
  4232   001A74  6E89               	movwf	137,c	;volatile
  4233                           
  4234                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x20;
  4235   001A76  0E20               	movlw	32
  4236   001A78  6E8A               	movwf	138,c	;volatile
  4237                           
  4238                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x01;
  4239   001A7A  0E01               	movlw	1
  4240   001A7C  6E8B               	movwf	139,c	;volatile
  4241   001A7E                     
  4242                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4243   001A7E  6892               	setf	146,c	;volatile
  4244                           
  4245                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xC5;
  4246   001A80  0EC5               	movlw	197
  4247   001A82  6E93               	movwf	147,c	;volatile
  4248                           
  4249                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4250   001A84  0EBF               	movlw	191
  4251   001A86  6E94               	movwf	148,c	;volatile
  4252                           
  4253                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  4254   001A88  0E00               	movlw	0
  4255   001A8A  010F               	movlb	15	; () banked
  4256   001A8C  6F3A               	movwf	58,b	;volatile
  4257                           
  4258                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x11;
  4259   001A8E  0E11               	movlw	17
  4260   001A90  6F39               	movwf	57,b	;volatile
  4261                           
  4262                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4263   001A92  0E2F               	movlw	47
  4264   001A94  6F38               	movwf	56,b	;volatile
  4265                           
  4266                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4267   001A96  0E00               	movlw	0
  4268   001A98  6E61               	movwf	97,c	;volatile
  4269   001A9A                     
  4270                           ; BSR set to: 15
  4271                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4272   001A9A  8EF1               	bsf	241,7,c	;volatile
  4273   001A9C                     
  4274                           ; BSR set to: 15
  4275   001A9C  0012               	return		;funcret
  4276   001A9E                     __end_of_PIN_MANAGER_Initialize:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _OSCILLATOR_Initialize *****************
  4280 ;; Defined at:
  4281 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 3
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_SYSTEM_Initialize
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text20
  4310   001BA6                     __ptext20:
  4311                           	callstack 0
  4312   001BA6                     _OSCILLATOR_Initialize:
  4313                           	callstack 26
  4314   001BA6                     
  4315                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x72;
  4316   001BA6  0E72               	movlw	114
  4317   001BA8  6ED3               	movwf	211,c	;volatile
  4318                           
  4319                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  4320   001BAA  0E04               	movlw	4
  4321   001BAC  6ED2               	movwf	210,c	;volatile
  4322                           
  4323                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  4324   001BAE  0E00               	movlw	0
  4325   001BB0  6E9B               	movwf	155,c	;volatile
  4326   001BB2  0012               	return		;funcret
  4327   001BB4                     __end_of_OSCILLATOR_Initialize:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _INTERRUPT_Initialize *****************
  4331 ;; Defined at:
  4332 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		None
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;Total ram usage:        0 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 3
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_SYSTEM_Initialize
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text21
  4361   001C00                     __ptext21:
  4362                           	callstack 0
  4363   001C00                     _INTERRUPT_Initialize:
  4364                           	callstack 26
  4365   001C00                     
  4366                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4367   001C00  9ED0               	bcf	208,7,c	;volatile
  4368   001C02  0012               	return		;funcret
  4369   001C04                     __end_of_INTERRUPT_Initialize:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _I2C1_Initialize *****************
  4373 ;; Defined at:
  4374 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 3
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_SYSTEM_Initialize
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text22
  4403   001B70                     __ptext22:
  4404                           	callstack 0
  4405   001B70                     _I2C1_Initialize:
  4406                           	callstack 26
  4407   001B70                     
  4408                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
  4409   001B70  0E00               	movlw	0
  4410   001B72  6EC7               	movwf	199,c	;volatile
  4411                           
  4412                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  4413   001B74  0E08               	movlw	8
  4414   001B76  6EC6               	movwf	198,c	;volatile
  4415                           
  4416                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  4417   001B78  0E00               	movlw	0
  4418   001B7A  6EC5               	movwf	197,c	;volatile
  4419                           
  4420                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x09;
  4421   001B7C  0E09               	movlw	9
  4422   001B7E  6EC8               	movwf	200,c	;volatile
  4423   001B80                     
  4424                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  4425   001B80  9AC6               	bcf	198,5,c	;volatile
  4426   001B82  0012               	return		;funcret
  4427   001B84                     __end_of_I2C1_Initialize:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _EUSART1_Initialize *****************
  4431 ;; Defined at:
  4432 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;Total ram usage:        0 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 4
  4453 ;; This function calls:
  4454 ;;		_EUSART1_SetErrorHandler
  4455 ;;		_EUSART1_SetFramingErrorHandler
  4456 ;;		_EUSART1_SetOverrunErrorHandler
  4457 ;; This function is called by:
  4458 ;;		_SYSTEM_Initialize
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text23
  4463   0019BC                     __ptext23:
  4464                           	callstack 0
  4465   0019BC                     _EUSART1_Initialize:
  4466                           	callstack 25
  4467   0019BC                     
  4468                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4469   0019BC  0E08               	movlw	8
  4470   0019BE  6EB8               	movwf	184,c	;volatile
  4471                           
  4472                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4473   0019C0  0E90               	movlw	144
  4474   0019C2  6EAB               	movwf	171,c	;volatile
  4475                           
  4476                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4477   0019C4  0E24               	movlw	36
  4478   0019C6  6EAC               	movwf	172,c	;volatile
  4479                           
  4480                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x22;
  4481   0019C8  0E22               	movlw	34
  4482   0019CA  6EAF               	movwf	175,c	;volatile
  4483                           
  4484                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  4485   0019CC  0E00               	movlw	0
  4486   0019CE  6EB0               	movwf	176,c	;volatile
  4487   0019D0                     
  4488                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4489   0019D0  0E00               	movlw	0
  4490   0019D2  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4491   0019D4  0E00               	movlw	0
  4492   0019D6  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4493   0019D8  ECEF  F00D         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4494   0019DC                     
  4495                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4496   0019DC  0E00               	movlw	0
  4497   0019DE  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4498   0019E0  0E00               	movlw	0
  4499   0019E2  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4500   0019E4  ECEA  F00D         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4501   0019E8                     
  4502                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4503   0019E8  0E00               	movlw	0
  4504   0019EA  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4505   0019EC  0E00               	movlw	0
  4506   0019EE  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4507   0019F0  ECF4  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  4508   0019F4                     
  4509                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4510   0019F4  0E00               	movlw	0
  4511   0019F6  6E5A               	movwf	_eusart1RxLastError^0,c	;volatile
  4512   0019F8  0012               	return		;funcret
  4513   0019FA                     __end_of_EUSART1_Initialize:
  4514                           	callstack 0
  4515                           
  4516 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4517 ;; Defined at:
  4518 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  4521 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;Total ram usage:        2 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 3
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_EUSART1_Initialize
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text24
  4548   001BD4                     __ptext24:
  4549                           	callstack 0
  4550   001BD4                     _EUSART1_SetOverrunErrorHandler:
  4551                           	callstack 25
  4552   001BD4                     
  4553                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4554   001BD4  C005  F0E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4555   001BD8  C006  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4556   001BDC  0012               	return		;funcret
  4557   001BDE                     __end_of_EUSART1_SetOverrunErrorHandler:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4561 ;; Defined at:
  4562 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  4565 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;Total ram usage:        2 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 3
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_EUSART1_Initialize
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text25
  4592   001BDE                     __ptext25:
  4593                           	callstack 0
  4594   001BDE                     _EUSART1_SetFramingErrorHandler:
  4595                           	callstack 25
  4596   001BDE                     
  4597                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4598   001BDE  C005  F0E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4599   001BE2  C006  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4600   001BE6  0012               	return		;funcret
  4601   001BE8                     __end_of_EUSART1_SetFramingErrorHandler:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _EUSART1_SetErrorHandler *****************
  4605 ;; Defined at:
  4606 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  4609 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;Total ram usage:        2 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; Hardware stack levels required when called: 3
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_EUSART1_Initialize
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text26
  4636   001BE8                     __ptext26:
  4637                           	callstack 0
  4638   001BE8                     _EUSART1_SetErrorHandler:
  4639                           	callstack 25
  4640   001BE8                     
  4641                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4642   001BE8  C005  F0E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4643   001BEC  C006  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4644   001BF0  0012               	return		;funcret
  4645   001BF2                     __end_of_EUSART1_SetErrorHandler:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _I2C_ModuleStop *****************
  4649 ;; Defined at:
  4650 ;;		line 86 in file "my_i2c_pic18.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		None
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; Hardware stack levels required when called: 3
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text27
  4679   001C04                     __ptext27:
  4680                           	callstack 0
  4681   001C04                     _I2C_ModuleStop:
  4682                           	callstack 27
  4683   001C04                     
  4684                           ;my_i2c_pic18.c: 88:     SSP1CON1bits.SSPEN = 0;
  4685   001C04  9AC6               	bcf	198,5,c	;volatile
  4686   001C06  0012               	return		;funcret
  4687   001C08                     __end_of_I2C_ModuleStop:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function _I2C_ModuleStart *****************
  4691 ;; Defined at:
  4692 ;;		line 65 in file "my_i2c_pic18.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  clock_output    4   17[COMRAM] unsigned long 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;Total ram usage:        4 bytes
  4711 ;; Hardware stack levels used: 1
  4712 ;; Hardware stack levels required when called: 4
  4713 ;; This function calls:
  4714 ;;		___lldiv
  4715 ;; This function is called by:
  4716 ;;		_main
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text28
  4721   00175E                     __ptext28:
  4722                           	callstack 0
  4723   00175E                     _I2C_ModuleStart:
  4724                           	callstack 26
  4725   00175E                     
  4726                           ;my_i2c_pic18.c: 65: void I2C_ModuleStart(uint32_t clock_output);my_i2c_pic18.c: 66: {;m
      +                          y_i2c_pic18.c: 67:     SSP1STAT &= 0x3F;
  4727   00175E  0E3F               	movlw	63
  4728   001760  16C7               	andwf	199,f,c	;volatile
  4729   001762                     
  4730                           ;my_i2c_pic18.c: 68:     SSP1CON2 = 0x00;
  4731   001762  0E00               	movlw	0
  4732   001764  6EC5               	movwf	197,c	;volatile
  4733   001766                     
  4734                           ;my_i2c_pic18.c: 71:     if(clock_output == 400000UL)
  4735   001766  0E80               	movlw	128
  4736   001768  1812               	xorwf	I2C_ModuleStart@clock_output^0,w,c
  4737   00176A  E10B               	bnz	u5381
  4738   00176C  0E1A               	movlw	26
  4739   00176E  1813               	xorwf	(I2C_ModuleStart@clock_output+1)^0,w,c
  4740   001770  E108               	bnz	u5381
  4741   001772  0E06               	movlw	6
  4742   001774  1814               	xorwf	(I2C_ModuleStart@clock_output+2)^0,w,c
  4743   001776  1015               	iorwf	(I2C_ModuleStart@clock_output+3)^0,w,c
  4744   001778  A4D8               	btfss	status,2,c
  4745   00177A  EFC1  F00B         	goto	u5381
  4746   00177E  EFC3  F00B         	goto	u5380
  4747   001782                     u5381:
  4748   001782  EFC6  F00B         	goto	l7747
  4749   001786                     u5380:
  4750   001786                     
  4751                           ;my_i2c_pic18.c: 72:     {;my_i2c_pic18.c: 73:         SSP1STAT |= 0b00000000;
  4752   001786  50C7               	movf	199,w,c	;volatile
  4753                           
  4754                           ;my_i2c_pic18.c: 74:     }
  4755   001788  EFC7  F00B         	goto	l7749
  4756   00178C                     l7747:
  4757                           
  4758                           ;my_i2c_pic18.c: 76:     {;my_i2c_pic18.c: 77:         SSP1STAT |= 0b10000000;
  4759   00178C  8EC7               	bsf	199,7,c	;volatile
  4760   00178E                     l7749:
  4761                           
  4762                           ;my_i2c_pic18.c: 80:     SSP1CON1 = 0b00001000;
  4763   00178E  0E08               	movlw	8
  4764   001790  6EC6               	movwf	198,c	;volatile
  4765   001792                     
  4766                           ;my_i2c_pic18.c: 81:     SSP1ADD = (uint8_t) ((uint32_t)((16000000) / 4) / (uint32_t)clo
      +                          ck_output) - 1;
  4767   001792  0E00               	movlw	0
  4768   001794  6E05               	movwf	___lldiv@dividend^0,c
  4769   001796  0E09               	movlw	9
  4770   001798  6E06               	movwf	(___lldiv@dividend+1)^0,c
  4771   00179A  0E3D               	movlw	61
  4772   00179C  6E07               	movwf	(___lldiv@dividend+2)^0,c
  4773   00179E  0E00               	movlw	0
  4774   0017A0  6E08               	movwf	(___lldiv@dividend+3)^0,c
  4775   0017A2  C012  F009         	movff	I2C_ModuleStart@clock_output,___lldiv@divisor
  4776   0017A6  C013  F00A         	movff	I2C_ModuleStart@clock_output+1,___lldiv@divisor+1
  4777   0017AA  C014  F00B         	movff	I2C_ModuleStart@clock_output+2,___lldiv@divisor+2
  4778   0017AE  C015  F00C         	movff	I2C_ModuleStart@clock_output+3,___lldiv@divisor+3
  4779   0017B2  EC2A  F00A         	call	___lldiv	;wreg free
  4780   0017B6  0405               	decf	?___lldiv^0,w,c
  4781   0017B8  6EC8               	movwf	200,c	;volatile
  4782   0017BA                     
  4783                           ;my_i2c_pic18.c: 83:     SSP1CON1 |= 0b00100000;
  4784   0017BA  8AC6               	bsf	198,5,c	;volatile
  4785   0017BC  0012               	return		;funcret
  4786   0017BE                     __end_of_I2C_ModuleStart:
  4787                           	callstack 0
  4788                           
  4789 ;; *************** function ___lldiv *****************
  4790 ;; Defined at:
  4791 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  dividend        4    4[COMRAM] unsigned long 
  4794 ;;  divisor         4    8[COMRAM] unsigned long 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  quotient        4   12[COMRAM] unsigned long 
  4797 ;;  counter         1   16[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  4    4[COMRAM] unsigned long 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4807 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;Total ram usage:       13 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 3
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_I2C_ModuleStart
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text29
  4822   001454                     __ptext29:
  4823                           	callstack 0
  4824   001454                     ___lldiv:
  4825                           	callstack 26
  4826   001454  0E00               	movlw	0
  4827   001456  6E0D               	movwf	___lldiv@quotient^0,c
  4828   001458  0E00               	movlw	0
  4829   00145A  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  4830   00145C  0E00               	movlw	0
  4831   00145E  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  4832   001460  0E00               	movlw	0
  4833   001462  6E10               	movwf	(___lldiv@quotient+3)^0,c
  4834   001464  5009               	movf	___lldiv@divisor^0,w,c
  4835   001466  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  4836   001468  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  4837   00146A  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  4838   00146C  B4D8               	btfsc	status,2,c
  4839   00146E  EF3B  F00A         	goto	u5341
  4840   001472  EF3D  F00A         	goto	u5340
  4841   001476                     u5341:
  4842   001476  EF73  F00A         	goto	l1400
  4843   00147A                     u5340:
  4844   00147A  0E01               	movlw	1
  4845   00147C  6E11               	movwf	___lldiv@counter^0,c
  4846   00147E  EF47  F00A         	goto	l7691
  4847   001482                     l7689:
  4848   001482  90D8               	bcf	status,0,c
  4849   001484  3609               	rlcf	___lldiv@divisor^0,f,c
  4850   001486  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  4851   001488  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  4852   00148A  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  4853   00148C  2A11               	incf	___lldiv@counter^0,f,c
  4854   00148E                     l7691:
  4855   00148E  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  4856   001490  EF4C  F00A         	goto	u5351
  4857   001494  EF4E  F00A         	goto	u5350
  4858   001498                     u5351:
  4859   001498  EF41  F00A         	goto	l7689
  4860   00149C                     u5350:
  4861   00149C                     l7693:
  4862   00149C  90D8               	bcf	status,0,c
  4863   00149E  360D               	rlcf	___lldiv@quotient^0,f,c
  4864   0014A0  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  4865   0014A2  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  4866   0014A4  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  4867   0014A6  5009               	movf	___lldiv@divisor^0,w,c
  4868   0014A8  5C05               	subwf	___lldiv@dividend^0,w,c
  4869   0014AA  500A               	movf	(___lldiv@divisor+1)^0,w,c
  4870   0014AC  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  4871   0014AE  500B               	movf	(___lldiv@divisor+2)^0,w,c
  4872   0014B0  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  4873   0014B2  500C               	movf	(___lldiv@divisor+3)^0,w,c
  4874   0014B4  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  4875   0014B6  A0D8               	btfss	status,0,c
  4876   0014B8  EF60  F00A         	goto	u5361
  4877   0014BC  EF62  F00A         	goto	u5360
  4878   0014C0                     u5361:
  4879   0014C0  EF6B  F00A         	goto	l7701
  4880   0014C4                     u5360:
  4881   0014C4  5009               	movf	___lldiv@divisor^0,w,c
  4882   0014C6  5E05               	subwf	___lldiv@dividend^0,f,c
  4883   0014C8  500A               	movf	(___lldiv@divisor+1)^0,w,c
  4884   0014CA  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  4885   0014CC  500B               	movf	(___lldiv@divisor+2)^0,w,c
  4886   0014CE  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  4887   0014D0  500C               	movf	(___lldiv@divisor+3)^0,w,c
  4888   0014D2  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  4889   0014D4  800D               	bsf	___lldiv@quotient^0,0,c
  4890   0014D6                     l7701:
  4891   0014D6  90D8               	bcf	status,0,c
  4892   0014D8  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  4893   0014DA  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  4894   0014DC  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  4895   0014DE  3209               	rrcf	___lldiv@divisor^0,f,c
  4896   0014E0  2E11               	decfsz	___lldiv@counter^0,f,c
  4897   0014E2  EF4E  F00A         	goto	l7693
  4898   0014E6                     l1400:
  4899   0014E6  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  4900   0014EA  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  4901   0014EE  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  4902   0014F2  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  4903   0014F6  0012               	return		;funcret
  4904   0014F8                     __end_of___lldiv:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _I2C_HWini *****************
  4908 ;; Defined at:
  4909 ;;		line 57 in file "my_i2c_pic18.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		None
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 3
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_main
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text30
  4938   001BFA                     __ptext30:
  4939                           	callstack 0
  4940   001BFA                     _I2C_HWini:
  4941                           	callstack 27
  4942   001BFA                     
  4943                           ;my_i2c_pic18.c: 61:     TRISCbits.TRISC3 = 1;
  4944   001BFA  8694               	bsf	148,3,c	;volatile
  4945                           
  4946                           ;my_i2c_pic18.c: 62:     TRISCbits.TRISC4 = 1;
  4947   001BFC  8894               	bsf	148,4,c	;volatile
  4948   001BFE  0012               	return		;funcret
  4949   001C00                     __end_of_I2C_HWini:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function _I2C2_M_Poll *****************
  4953 ;; Defined at:
  4954 ;;		line 233 in file "my_i2c_pic18.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  DevAddr         1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  DevAddr         1   14[COMRAM] unsigned char 
  4959 ;;  retval          2   16[COMRAM] int 
  4960 ;;  SlaveAddr       1   15[COMRAM] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  2   12[COMRAM] short 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;Total ram usage:        6 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 5
  4977 ;; This function calls:
  4978 ;;		_I2C2_M_ClearErrors
  4979 ;;		_I2C2_M_RecoverBus
  4980 ;;		_I2C2_M_Start
  4981 ;;		_I2C2_M_Stop
  4982 ;;		_I2C2_M_WriteByte
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text31
  4989   001178                     __ptext31:
  4990                           	callstack 0
  4991   001178                     _I2C2_M_Poll:
  4992                           	callstack 25
  4993                           
  4994                           ;incstack = 0
  4995                           ;I2C2_M_Poll@DevAddr stored from wreg
  4996   001178  6E0F               	movwf	I2C2_M_Poll@DevAddr^0,c
  4997   00117A                     
  4998                           ;my_i2c_pic18.c: 233: int16_t I2C2_M_Poll(uint8_t DevAddr);my_i2c_pic18.c: 234: {;my_i2c
      +                          _pic18.c: 235:     int retval;;my_i2c_pic18.c: 236:     uint8_t SlaveAddr;;my_i2c_pic18.
      +                          c: 238:     SlaveAddr = DevAddr | 0;
  4999   00117A  C00F  F010         	movff	I2C2_M_Poll@DevAddr,I2C2_M_Poll@SlaveAddr
  5000   00117E                     
  5001                           ;my_i2c_pic18.c: 240:     if((I2Cflags & 0x0001))
  5002   00117E  A056               	btfss	_I2Cflags^0,0,c
  5003   001180  EFC4  F008         	goto	u5391
  5004   001184  EFC6  F008         	goto	u5390
  5005   001188                     u5391:
  5006   001188  EFDA  F008         	goto	l7765
  5007   00118C                     u5390:
  5008   00118C                     
  5009                           ;my_i2c_pic18.c: 241:     {;my_i2c_pic18.c: 242:         I2C2_M_ClearErrors();
  5010   00118C  ECF9  F00D         	call	_I2C2_M_ClearErrors	;wreg free
  5011   001190                     
  5012                           ;my_i2c_pic18.c: 243:         if(I2C2_M_RecoverBus() == 0)
  5013   001190  ECFD  F00C         	call	_I2C2_M_RecoverBus	;wreg free
  5014   001194  5009               	movf	?_I2C2_M_RecoverBus^0,w,c
  5015   001196  100A               	iorwf	(?_I2C2_M_RecoverBus+1)^0,w,c
  5016   001198  A4D8               	btfss	status,2,c
  5017   00119A  EFD1  F008         	goto	u5401
  5018   00119E  EFD3  F008         	goto	u5400
  5019   0011A2                     u5401:
  5020   0011A2  EFD6  F008         	goto	l1088
  5021   0011A6                     u5400:
  5022   0011A6                     
  5023                           ;my_i2c_pic18.c: 244:         {;my_i2c_pic18.c: 245:             I2Cflags &= ~0x0001;
  5024   0011A6  9056               	bcf	_I2Cflags^0,0,c
  5025                           
  5026                           ;my_i2c_pic18.c: 246:         } else
  5027   0011A8  EFDA  F008         	goto	l7765
  5028   0011AC                     l1088:
  5029                           
  5030                           ;my_i2c_pic18.c: 247:         {;my_i2c_pic18.c: 248:             return -1;
  5031   0011AC  680D               	setf	?_I2C2_M_Poll^0,c
  5032   0011AE  680E               	setf	(?_I2C2_M_Poll+1)^0,c
  5033   0011B0  EF20  F009         	goto	l1090
  5034   0011B4                     l7765:
  5035                           
  5036                           ;my_i2c_pic18.c: 252:     if(I2C2_M_Start() == 0)
  5037   0011B4  EC7C  F00A         	call	_I2C2_M_Start	;wreg free
  5038   0011B8  5005               	movf	?_I2C2_M_Start^0,w,c
  5039   0011BA  1006               	iorwf	(?_I2C2_M_Start+1)^0,w,c
  5040   0011BC  A4D8               	btfss	status,2,c
  5041   0011BE  EFE3  F008         	goto	u5411
  5042   0011C2  EFE5  F008         	goto	u5410
  5043   0011C6                     u5411:
  5044   0011C6  EF1D  F009         	goto	l7789
  5045   0011CA                     u5410:
  5046   0011CA                     
  5047                           ;my_i2c_pic18.c: 253:     {;my_i2c_pic18.c: 254:         retval = I2C2_M_WriteByte((char
      +                          ) SlaveAddr);
  5048   0011CA  5010               	movf	I2C2_M_Poll@SlaveAddr^0,w,c
  5049   0011CC  ECD7  F009         	call	_I2C2_M_WriteByte
  5050   0011D0  C005  F011         	movff	?_I2C2_M_WriteByte,I2C2_M_Poll@retval
  5051   0011D4  C006  F012         	movff	?_I2C2_M_WriteByte+1,I2C2_M_Poll@retval+1
  5052                           
  5053                           ;my_i2c_pic18.c: 255:         if(I2C2_M_Stop() == 0)
  5054   0011D8  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  5055   0011DC  5005               	movf	?_I2C2_M_Stop^0,w,c
  5056   0011DE  1006               	iorwf	(?_I2C2_M_Stop+1)^0,w,c
  5057   0011E0  A4D8               	btfss	status,2,c
  5058   0011E2  EFF5  F008         	goto	u5421
  5059   0011E6  EFF7  F008         	goto	u5420
  5060   0011EA                     u5421:
  5061   0011EA  EF1D  F009         	goto	l7789
  5062   0011EE                     u5420:
  5063   0011EE                     
  5064                           ;my_i2c_pic18.c: 256:         {;my_i2c_pic18.c: 257:             if(retval == 0)
  5065   0011EE  5011               	movf	I2C2_M_Poll@retval^0,w,c
  5066   0011F0  1012               	iorwf	(I2C2_M_Poll@retval+1)^0,w,c
  5067   0011F2  A4D8               	btfss	status,2,c
  5068   0011F4  EFFE  F008         	goto	u5431
  5069   0011F8  EF00  F009         	goto	u5430
  5070   0011FC                     u5431:
  5071   0011FC  EF06  F009         	goto	l7777
  5072   001200                     u5430:
  5073   001200                     
  5074                           ;my_i2c_pic18.c: 258:             {;my_i2c_pic18.c: 259:                 return 0;
  5075   001200  0E00               	movlw	0
  5076   001202  6E0E               	movwf	(?_I2C2_M_Poll+1)^0,c
  5077   001204  0E00               	movlw	0
  5078   001206  6E0D               	movwf	?_I2C2_M_Poll^0,c
  5079   001208  EF20  F009         	goto	l1090
  5080   00120C                     l7777:
  5081   00120C  0EFA               	movlw	250
  5082   00120E  1811               	xorwf	I2C2_M_Poll@retval^0,w,c
  5083   001210  E106               	bnz	u5441
  5084   001212  2812               	incf	(I2C2_M_Poll@retval+1)^0,w,c
  5085   001214  A4D8               	btfss	status,2,c
  5086   001216  EF0F  F009         	goto	u5441
  5087   00121A  EF11  F009         	goto	u5440
  5088   00121E                     u5441:
  5089   00121E  EF17  F009         	goto	l7785
  5090   001222                     u5440:
  5091   001222                     
  5092                           ;my_i2c_pic18.c: 261:             {;my_i2c_pic18.c: 262:                 return -103;
  5093   001222  0EFF               	movlw	255
  5094   001224  6E0E               	movwf	(?_I2C2_M_Poll+1)^0,c
  5095   001226  0E99               	movlw	153
  5096   001228  6E0D               	movwf	?_I2C2_M_Poll^0,c
  5097   00122A  EF20  F009         	goto	l1090
  5098   00122E                     l7785:
  5099                           
  5100                           ;my_i2c_pic18.c: 264:             {;my_i2c_pic18.c: 265:                 return -102;
  5101   00122E  0EFF               	movlw	255
  5102   001230  6E0E               	movwf	(?_I2C2_M_Poll+1)^0,c
  5103   001232  0E9A               	movlw	154
  5104   001234  6E0D               	movwf	?_I2C2_M_Poll^0,c
  5105   001236  EF20  F009         	goto	l1090
  5106   00123A                     l7789:
  5107                           
  5108                           ;my_i2c_pic18.c: 271:     I2Cflags |= 0x0001;
  5109   00123A  8056               	bsf	_I2Cflags^0,0,c
  5110   00123C  EF17  F009         	goto	l7785
  5111   001240                     l1090:
  5112   001240  0012               	return		;funcret
  5113   001242                     __end_of_I2C2_M_Poll:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _I2C2_M_RecoverBus *****************
  5117 ;; Defined at:
  5118 ;;		line 494 in file "my_i2c_pic18.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  status          2   10[COMRAM] short 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2    8[COMRAM] short 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:        4 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 4
  5139 ;; This function calls:
  5140 ;;		_I2C2_M_BusReset
  5141 ;; This function is called by:
  5142 ;;		_I2C2_M_Poll
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text32
  5147   0019FA                     __ptext32:
  5148                           	callstack 0
  5149   0019FA                     _I2C2_M_RecoverBus:
  5150                           	callstack 25
  5151   0019FA                     
  5152                           ;my_i2c_pic18.c: 496:     int16_t status;;my_i2c_pic18.c: 504:     SSP1CON1bits.SSPEN1 =
      +                           0;
  5153   0019FA  9AC6               	bcf	198,5,c	;volatile
  5154   0019FC                     
  5155                           ;my_i2c_pic18.c: 505:     status = I2C2_M_BusReset();
  5156   0019FC  EC21  F009         	call	_I2C2_M_BusReset	;wreg free
  5157   001A00  C005  F00B         	movff	?_I2C2_M_BusReset,I2C2_M_RecoverBus@status
  5158   001A04  C006  F00C         	movff	?_I2C2_M_BusReset+1,I2C2_M_RecoverBus@status+1
  5159   001A08                     
  5160                           ;my_i2c_pic18.c: 506:     if(status > 0)
  5161   001A08  BE0C               	btfsc	(I2C2_M_RecoverBus@status+1)^0,7,c
  5162   001A0A  EF0F  F00D         	goto	u5111
  5163   001A0E  500C               	movf	(I2C2_M_RecoverBus@status+1)^0,w,c
  5164   001A10  E108               	bnz	u5110
  5165   001A12  040B               	decf	I2C2_M_RecoverBus@status^0,w,c
  5166   001A14  A0D8               	btfss	status,0,c
  5167   001A16  EF0F  F00D         	goto	u5111
  5168   001A1A  EF11  F00D         	goto	u5110
  5169   001A1E                     u5111:
  5170   001A1E  EF15  F00D         	goto	l1144
  5171   001A22                     u5110:
  5172   001A22                     
  5173                           ;my_i2c_pic18.c: 507:     {;my_i2c_pic18.c: 508:         return -1;
  5174   001A22  6809               	setf	?_I2C2_M_RecoverBus^0,c
  5175   001A24  680A               	setf	(?_I2C2_M_RecoverBus+1)^0,c
  5176   001A26  EF1A  F00D         	goto	l1145
  5177   001A2A                     l1144:
  5178                           
  5179                           ;my_i2c_pic18.c: 511:     SSP1CON1bits.SSPEN1 = 1;
  5180   001A2A  8AC6               	bsf	198,5,c	;volatile
  5181   001A2C                     
  5182                           ;my_i2c_pic18.c: 513:     return 0;
  5183   001A2C  0E00               	movlw	0
  5184   001A2E  6E0A               	movwf	(?_I2C2_M_RecoverBus+1)^0,c
  5185   001A30  0E00               	movlw	0
  5186   001A32  6E09               	movwf	?_I2C2_M_RecoverBus^0,c
  5187   001A34                     l1145:
  5188   001A34  0012               	return		;funcret
  5189   001A36                     __end_of_I2C2_M_RecoverBus:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _I2C2_M_BusReset *****************
  5193 ;; Defined at:
  5194 ;;		line 108 in file "my_i2c_pic18.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  i               2    6[COMRAM] short 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2    4[COMRAM] short 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        4 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 3
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_main
  5219 ;;		_I2C2_M_RecoverBus
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text33
  5224   001242                     __ptext33:
  5225                           	callstack 0
  5226   001242                     _I2C2_M_BusReset:
  5227                           	callstack 25
  5228   001242  8694               	bsf	148,3,c	;volatile
  5229   001244  8894               	bsf	148,4,c	;volatile
  5230   001246                     
  5231                           ;my_i2c_pic18.c: 115:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5232   001246  0E06               	movlw	6
  5233   001248                     u5917:
  5234   001248  2EE8               	decfsz	wreg,f,c
  5235   00124A  D7FE               	bra	u5917
  5236   00124C  D000               	nop2	
  5237   00124E                     
  5238                           ;my_i2c_pic18.c: 117:     if(PORTCbits.RC3 == 0)
  5239   00124E  B682               	btfsc	130,3,c	;volatile
  5240   001250  EF2C  F009         	goto	u4781
  5241   001254  EF2E  F009         	goto	u4780
  5242   001258                     u4781:
  5243   001258  EF34  F009         	goto	l7127
  5244   00125C                     u4780:
  5245   00125C                     
  5246                           ;my_i2c_pic18.c: 118:     {;my_i2c_pic18.c: 119:         return -2;
  5247   00125C  0EFF               	movlw	255
  5248   00125E  6E06               	movwf	(?_I2C2_M_BusReset+1)^0,c
  5249   001260  0EFE               	movlw	254
  5250   001262  6E05               	movwf	?_I2C2_M_BusReset^0,c
  5251   001264  EF7D  F009         	goto	l1056
  5252   001268                     l7127:
  5253                           
  5254                           ;my_i2c_pic18.c: 122:     i = 10;
  5255   001268  0E00               	movlw	0
  5256   00126A  6E08               	movwf	(I2C2_M_BusReset@i+1)^0,c
  5257   00126C  0E0A               	movlw	10
  5258   00126E  6E07               	movwf	I2C2_M_BusReset@i^0,c
  5259   001270  9694               	bcf	148,3,c	;volatile
  5260   001272  EF4D  F009         	goto	l7135
  5261   001276                     l1060:
  5262                           
  5263                           ;my_i2c_pic18.c: 126:     {;my_i2c_pic18.c: 127:         if(PORTCbits.RC4 == 1)
  5264   001276  A882               	btfss	130,4,c	;volatile
  5265   001278  EF40  F009         	goto	u4791
  5266   00127C  EF42  F009         	goto	u4790
  5267   001280                     u4791:
  5268   001280  EF44  F009         	goto	l1063
  5269   001284                     u4790:
  5270   001284  EF5A  F009         	goto	l1067
  5271   001288                     l1063:
  5272   001288  968B               	bcf	139,3,c	;volatile
  5273   00128A                     
  5274                           ;my_i2c_pic18.c: 132:         _delay((unsigned long)((1)*(16000000/4000000.0)));
  5275   00128A  D000               	nop2		;2 cycle nop
  5276   00128C  D000               	nop2		;2 cycle nop
  5277   00128E  868B               	bsf	139,3,c	;volatile
  5278   001290                     
  5279                           ;my_i2c_pic18.c: 134:         _delay((unsigned long)((1)*(16000000/4000000.0)));
  5280   001290  D000               	nop2		;2 cycle nop
  5281   001292  D000               	nop2		;2 cycle nop
  5282   001294                     
  5283                           ;my_i2c_pic18.c: 135:         i--;
  5284   001294  0607               	decf	I2C2_M_BusReset@i^0,f,c
  5285   001296  A0D8               	btfss	status,0,c
  5286   001298  0608               	decf	(I2C2_M_BusReset@i+1)^0,f,c
  5287   00129A                     l7135:
  5288                           
  5289                           ;my_i2c_pic18.c: 125:     while(i > 0)
  5290   00129A  BE08               	btfsc	(I2C2_M_BusReset@i+1)^0,7,c
  5291   00129C  EF5A  F009         	goto	u4800
  5292   0012A0  5008               	movf	(I2C2_M_BusReset@i+1)^0,w,c
  5293   0012A2  E106               	bnz	u4801
  5294   0012A4  0407               	decf	I2C2_M_BusReset@i^0,w,c
  5295   0012A6  B0D8               	btfsc	status,0,c
  5296   0012A8  EF58  F009         	goto	u4801
  5297   0012AC  EF5A  F009         	goto	u4800
  5298   0012B0                     u4801:
  5299   0012B0  EF3B  F009         	goto	l1060
  5300   0012B4                     u4800:
  5301   0012B4                     l1067:
  5302   0012B4  8694               	bsf	148,3,c	;volatile
  5303   0012B6  8894               	bsf	148,4,c	;volatile
  5304   0012B8                     
  5305                           ;my_i2c_pic18.c: 141:     if(!PORTCbits.RC4 && !PORTCbits.RC3)
  5306   0012B8  B882               	btfsc	130,4,c	;volatile
  5307   0012BA  EF61  F009         	goto	u4811
  5308   0012BE  EF63  F009         	goto	u4810
  5309   0012C2                     u4811:
  5310   0012C2  EF70  F009         	goto	l1072
  5311   0012C6                     u4810:
  5312   0012C6  B682               	btfsc	130,3,c	;volatile
  5313   0012C8  EF68  F009         	goto	u4821
  5314   0012CC  EF6A  F009         	goto	u4820
  5315   0012D0                     u4821:
  5316   0012D0  EF70  F009         	goto	l1072
  5317   0012D4                     u4820:
  5318   0012D4                     
  5319                           ;my_i2c_pic18.c: 142:     {;my_i2c_pic18.c: 143:         return -3;
  5320   0012D4  0EFF               	movlw	255
  5321   0012D6  6E06               	movwf	(?_I2C2_M_BusReset+1)^0,c
  5322   0012D8  0EFD               	movlw	253
  5323   0012DA  6E05               	movwf	?_I2C2_M_BusReset^0,c
  5324   0012DC  EF7D  F009         	goto	l1056
  5325   0012E0                     l1072:
  5326   0012E0  9894               	bcf	148,4,c	;volatile
  5327   0012E2  988B               	bcf	139,4,c	;volatile
  5328   0012E4                     
  5329                           ;my_i2c_pic18.c: 148:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  5330   0012E4  D000               	nop2		;2 cycle nop
  5331   0012E6  D000               	nop2		;2 cycle nop
  5332   0012E8  888B               	bsf	139,4,c	;volatile
  5333   0012EA                     
  5334                           ;my_i2c_pic18.c: 150:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  5335   0012EA  D000               	nop2		;2 cycle nop
  5336   0012EC  D000               	nop2		;2 cycle nop
  5337   0012EE  8694               	bsf	148,3,c	;volatile
  5338   0012F0  8894               	bsf	148,4,c	;volatile
  5339   0012F2                     
  5340                           ;my_i2c_pic18.c: 153:     return 0;
  5341   0012F2  0E00               	movlw	0
  5342   0012F4  6E06               	movwf	(?_I2C2_M_BusReset+1)^0,c
  5343   0012F6  0E00               	movlw	0
  5344   0012F8  6E05               	movwf	?_I2C2_M_BusReset^0,c
  5345   0012FA                     l1056:
  5346   0012FA  0012               	return		;funcret
  5347   0012FC                     __end_of_I2C2_M_BusReset:
  5348                           	callstack 0
  5349                           
  5350 ;; *************** function _I2C2_M_ClearErrors *****************
  5351 ;; Defined at:
  5352 ;;		line 217 in file "my_i2c_pic18.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		None
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 3
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_I2C2_M_Poll
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text34
  5381   001BF2                     __ptext34:
  5382                           	callstack 0
  5383   001BF2                     _I2C2_M_ClearErrors:
  5384                           	callstack 26
  5385   001BF2                     
  5386                           ;my_i2c_pic18.c: 219:     SSP1CON2bits.RCEN1 = 0;
  5387   001BF2  96C5               	bcf	197,3,c	;volatile
  5388                           
  5389                           ;my_i2c_pic18.c: 220:     SSP1CON1bits.WCOL1 = 0;
  5390   001BF4  9EC6               	bcf	198,7,c	;volatile
  5391                           
  5392                           ;my_i2c_pic18.c: 221:     PIR2bits.BCL1IF = 0;
  5393   001BF6  96A1               	bcf	161,3,c	;volatile
  5394   001BF8  0012               	return		;funcret
  5395   001BFA                     __end_of_I2C2_M_ClearErrors:
  5396                           	callstack 0
  5397                           
  5398 ;; *************** function _FsScape_set_index_crc_SRAM *****************
  5399 ;; Defined at:
  5400 ;;		line 161 in file "fsscape.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  crc_value       4   27[COMRAM] unsigned long 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  _address        4   31[COMRAM] unsigned char [4]
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  2   27[COMRAM] int 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;Total ram usage:        8 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 5
  5421 ;; This function calls:
  5422 ;;		_I2C_Mem_Write
  5423 ;; This function is called by:
  5424 ;;		_main
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text35
  5429   001866                     __ptext35:
  5430                           	callstack 0
  5431   001866                     _FsScape_set_index_crc_SRAM:
  5432                           	callstack 25
  5433   001866                     
  5434                           ;fsscape.c: 161: int16_t FsScape_set_index_crc_SRAM(uint32_t crc_value);fsscape.c: 162: 
      +                          {;fsscape.c: 163:     uint8_t _address[4];;fsscape.c: 165:     _address[0] = (uint8_t)(c
      +                          rc_value);
  5435   001866  C01C  F020         	movff	FsScape_set_index_crc_SRAM@crc_value,FsScape_set_index_crc_SRAM@_address
  5436                           
  5437                           ;fsscape.c: 166:     _address[1] = (uint8_t)(crc_value >> 8);
  5438   00186A  C01D  F021         	movff	FsScape_set_index_crc_SRAM@crc_value+1,FsScape_set_index_crc_SRAM@_address+1
  5439                           
  5440                           ;fsscape.c: 167:     _address[2] = (uint8_t)(crc_value >> 16);
  5441   00186E  C01E  F022         	movff	FsScape_set_index_crc_SRAM@crc_value+2,FsScape_set_index_crc_SRAM@_address+2
  5442                           
  5443                           ;fsscape.c: 168:     _address[3] = (uint8_t)(crc_value >> 24);
  5444   001872  C01F  F023         	movff	FsScape_set_index_crc_SRAM@crc_value+3,FsScape_set_index_crc_SRAM@_address+3
  5445   001876                     
  5446                           ;fsscape.c: 170:     return I2C_Mem_Write(0xDE, (0x20 + 4), 1, _address, 4, 0);;	Return 
      +                          value of _FsScape_set_index_crc_SRAM is never used
  5447   001876  0E00               	movlw	0
  5448   001878  6E0B               	movwf	(I2C_Mem_Write@MemAdress+1)^0,c
  5449   00187A  0E24               	movlw	36
  5450   00187C  6E0A               	movwf	I2C_Mem_Write@MemAdress^0,c
  5451   00187E  0E00               	movlw	0
  5452   001880  6E0D               	movwf	(I2C_Mem_Write@MemAddSize+1)^0,c
  5453   001882  0E01               	movlw	1
  5454   001884  6E0C               	movwf	I2C_Mem_Write@MemAddSize^0,c
  5455   001886  0E20               	movlw	low FsScape_set_index_crc_SRAM@_address
  5456   001888  6E0E               	movwf	I2C_Mem_Write@pData^0,c
  5457   00188A  0E00               	movlw	high FsScape_set_index_crc_SRAM@_address
  5458   00188C  6E0F               	movwf	(I2C_Mem_Write@pData+1)^0,c
  5459   00188E  0E00               	movlw	0
  5460   001890  6E11               	movwf	(I2C_Mem_Write@Size+1)^0,c
  5461   001892  0E04               	movlw	4
  5462   001894  6E10               	movwf	I2C_Mem_Write@Size^0,c
  5463   001896  0E00               	movlw	0
  5464   001898  6E12               	movwf	I2C_Mem_Write@Timeout^0,c
  5465   00189A  0E00               	movlw	0
  5466   00189C  6E13               	movwf	(I2C_Mem_Write@Timeout+1)^0,c
  5467   00189E  0E00               	movlw	0
  5468   0018A0  6E14               	movwf	(I2C_Mem_Write@Timeout+2)^0,c
  5469   0018A2  0E00               	movlw	0
  5470   0018A4  6E15               	movwf	(I2C_Mem_Write@Timeout+3)^0,c
  5471   0018A6  0EDE               	movlw	222
  5472   0018A8  EC69  F005         	call	_I2C_Mem_Write
  5473   0018AC  0012               	return		;funcret
  5474   0018AE                     __end_of_FsScape_set_index_crc_SRAM:
  5475                           	callstack 0
  5476                           
  5477 ;; *************** function _FsScape_set_index_SRAM *****************
  5478 ;; Defined at:
  5479 ;;		line 122 in file "fsscape.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  address_valu    4   27[COMRAM] unsigned long 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  _address        4   31[COMRAM] unsigned char [4]
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  2   27[COMRAM] int 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;Total ram usage:        8 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 5
  5500 ;; This function calls:
  5501 ;;		_I2C_Mem_Write
  5502 ;; This function is called by:
  5503 ;;		_main
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text36
  5508   0018AE                     __ptext36:
  5509                           	callstack 0
  5510   0018AE                     _FsScape_set_index_SRAM:
  5511                           	callstack 25
  5512   0018AE                     
  5513                           ;fsscape.c: 122: int16_t FsScape_set_index_SRAM(uint32_t address_value);fsscape.c: 123: 
      +                          {;fsscape.c: 124:     uint8_t _address[4];;fsscape.c: 126:     _address[0] = (uint8_t)(a
      +                          ddress_value);
  5514   0018AE  C01C  F020         	movff	FsScape_set_index_SRAM@address_value,FsScape_set_index_SRAM@_address
  5515                           
  5516                           ;fsscape.c: 127:     _address[1] = (uint8_t)(address_value >> 8);
  5517   0018B2  C01D  F021         	movff	FsScape_set_index_SRAM@address_value+1,FsScape_set_index_SRAM@_address+1
  5518                           
  5519                           ;fsscape.c: 128:     _address[2] = (uint8_t)(address_value >> 16);
  5520   0018B6  C01E  F022         	movff	FsScape_set_index_SRAM@address_value+2,FsScape_set_index_SRAM@_address+2
  5521                           
  5522                           ;fsscape.c: 129:     _address[3] = (uint8_t)(address_value >> 24);
  5523   0018BA  C01F  F023         	movff	FsScape_set_index_SRAM@address_value+3,FsScape_set_index_SRAM@_address+3
  5524   0018BE                     
  5525                           ;fsscape.c: 131:     return I2C_Mem_Write(0xDE, 0x20, 1, _address, 4, 0);;	Return value 
      +                          of _FsScape_set_index_SRAM is never used
  5526   0018BE  0E00               	movlw	0
  5527   0018C0  6E0B               	movwf	(I2C_Mem_Write@MemAdress+1)^0,c
  5528   0018C2  0E20               	movlw	32
  5529   0018C4  6E0A               	movwf	I2C_Mem_Write@MemAdress^0,c
  5530   0018C6  0E00               	movlw	0
  5531   0018C8  6E0D               	movwf	(I2C_Mem_Write@MemAddSize+1)^0,c
  5532   0018CA  0E01               	movlw	1
  5533   0018CC  6E0C               	movwf	I2C_Mem_Write@MemAddSize^0,c
  5534   0018CE  0E20               	movlw	low FsScape_set_index_SRAM@_address
  5535   0018D0  6E0E               	movwf	I2C_Mem_Write@pData^0,c
  5536   0018D2  0E00               	movlw	high FsScape_set_index_SRAM@_address
  5537   0018D4  6E0F               	movwf	(I2C_Mem_Write@pData+1)^0,c
  5538   0018D6  0E00               	movlw	0
  5539   0018D8  6E11               	movwf	(I2C_Mem_Write@Size+1)^0,c
  5540   0018DA  0E04               	movlw	4
  5541   0018DC  6E10               	movwf	I2C_Mem_Write@Size^0,c
  5542   0018DE  0E00               	movlw	0
  5543   0018E0  6E12               	movwf	I2C_Mem_Write@Timeout^0,c
  5544   0018E2  0E00               	movlw	0
  5545   0018E4  6E13               	movwf	(I2C_Mem_Write@Timeout+1)^0,c
  5546   0018E6  0E00               	movlw	0
  5547   0018E8  6E14               	movwf	(I2C_Mem_Write@Timeout+2)^0,c
  5548   0018EA  0E00               	movlw	0
  5549   0018EC  6E15               	movwf	(I2C_Mem_Write@Timeout+3)^0,c
  5550   0018EE  0EDE               	movlw	222
  5551   0018F0  EC69  F005         	call	_I2C_Mem_Write
  5552   0018F4  0012               	return		;funcret
  5553   0018F6                     __end_of_FsScape_set_index_SRAM:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _I2C_Mem_Write *****************
  5557 ;; Defined at:
  5558 ;;		line 866 in file "my_i2c_pic18.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  DevAddress      1    wreg     unsigned char 
  5561 ;;  MemAdress       2    9[COMRAM] unsigned short 
  5562 ;;  MemAddSize      2   11[COMRAM] unsigned short 
  5563 ;;  pData           2   13[COMRAM] PTR unsigned char 
  5564 ;;		 -> FsScape_set_index_crc_SRAM@_address(4), FsScape_set_index_SRAM@_address(4), 
  5565 ;;  Size            2   15[COMRAM] unsigned short 
  5566 ;;  Timeout         4   17[COMRAM] unsigned long 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  DevAddress      1   21[COMRAM] unsigned char 
  5569 ;;  i               2   25[COMRAM] short 
  5570 ;;  retval          2   23[COMRAM] short 
  5571 ;;  SlaveAddr       1   22[COMRAM] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  2    9[COMRAM] short 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5581 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;Total ram usage:       18 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; Hardware stack levels required when called: 4
  5588 ;; This function calls:
  5589 ;;		_I2C2_M_Start
  5590 ;;		_I2C2_M_Stop
  5591 ;;		_I2C2_M_WriteByte
  5592 ;; This function is called by:
  5593 ;;		_FsScape_set_index_SRAM
  5594 ;;		_FsScape_set_index_crc_SRAM
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text37
  5599   000AD2                     __ptext37:
  5600                           	callstack 0
  5601   000AD2                     _I2C_Mem_Write:
  5602                           	callstack 25
  5603                           
  5604                           ;incstack = 0
  5605                           ;I2C_Mem_Write@DevAddress stored from wreg
  5606   000AD2  6E16               	movwf	I2C_Mem_Write@DevAddress^0,c
  5607   000AD4                     
  5608                           ;my_i2c_pic18.c: 866: int16_t I2C_Mem_Write(uint8_t DevAddress, uint16_t MemAdress, uint
      +                          16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout);my_i2c_pic18.c: 867: {
      +                          ;my_i2c_pic18.c: 869:     int16_t i;;my_i2c_pic18.c: 870:     int16_t retval;;my_i2c_pic
      +                          18.c: 871:     uint8_t SlaveAddr;;my_i2c_pic18.c: 873:     if((I2Cflags & 0x0001))
  5609   000AD4  A056               	btfss	_I2Cflags^0,0,c
  5610   000AD6  EF6F  F005         	goto	u5121
  5611   000ADA  EF71  F005         	goto	u5120
  5612   000ADE                     u5121:
  5613   000ADE  EF77  F005         	goto	l7473
  5614   000AE2                     u5120:
  5615   000AE2                     
  5616                           ;my_i2c_pic18.c: 874:         return -100;
  5617   000AE2  0EFF               	movlw	255
  5618   000AE4  6E0B               	movwf	(?_I2C_Mem_Write+1)^0,c
  5619   000AE6  0E9C               	movlw	156
  5620   000AE8  6E0A               	movwf	?_I2C_Mem_Write^0,c
  5621   000AEA  EF05  F006         	goto	l1234
  5622   000AEE                     l7473:
  5623                           
  5624                           ;my_i2c_pic18.c: 876:     if(I2C2_M_Start() != 0)
  5625   000AEE  EC7C  F00A         	call	_I2C2_M_Start	;wreg free
  5626   000AF2  5005               	movf	?_I2C2_M_Start^0,w,c
  5627   000AF4  1006               	iorwf	(?_I2C2_M_Start+1)^0,w,c
  5628   000AF6  B4D8               	btfsc	status,2,c
  5629   000AF8  EF80  F005         	goto	u5131
  5630   000AFC  EF82  F005         	goto	u5130
  5631   000B00                     u5131:
  5632   000B00  EF89  F005         	goto	l1235
  5633   000B04                     u5130:
  5634   000B04                     l7475:
  5635                           
  5636                           ;my_i2c_pic18.c: 877:     {;my_i2c_pic18.c: 878:         I2Cflags |= 0x0001;
  5637   000B04  8056               	bsf	_I2Cflags^0,0,c
  5638   000B06                     
  5639                           ;my_i2c_pic18.c: 879:         return -102;
  5640   000B06  0EFF               	movlw	255
  5641   000B08  6E0B               	movwf	(?_I2C_Mem_Write+1)^0,c
  5642   000B0A  0E9A               	movlw	154
  5643   000B0C  6E0A               	movwf	?_I2C_Mem_Write^0,c
  5644   000B0E  EF05  F006         	goto	l1234
  5645   000B12                     l1235:
  5646                           
  5647                           ;my_i2c_pic18.c: 882:     SlaveAddr = DevAddress | 0;
  5648   000B12  C016  F017         	movff	I2C_Mem_Write@DevAddress,I2C_Mem_Write@SlaveAddr
  5649   000B16                     
  5650                           ;my_i2c_pic18.c: 883:     retval = I2C2_M_WriteByte((char) SlaveAddr);
  5651   000B16  5017               	movf	I2C_Mem_Write@SlaveAddr^0,w,c
  5652   000B18  ECD7  F009         	call	_I2C2_M_WriteByte
  5653   000B1C  C005  F018         	movff	?_I2C2_M_WriteByte,I2C_Mem_Write@retval
  5654   000B20  C006  F019         	movff	?_I2C2_M_WriteByte+1,I2C_Mem_Write@retval+1
  5655   000B24                     
  5656                           ;my_i2c_pic18.c: 884:     if(retval == -6)
  5657   000B24  0EFA               	movlw	250
  5658   000B26  1818               	xorwf	I2C_Mem_Write@retval^0,w,c
  5659   000B28  E106               	bnz	u5141
  5660   000B2A  2819               	incf	(I2C_Mem_Write@retval+1)^0,w,c
  5661   000B2C  A4D8               	btfss	status,2,c
  5662   000B2E  EF9B  F005         	goto	u5141
  5663   000B32  EF9D  F005         	goto	u5140
  5664   000B36                     u5141:
  5665   000B36  EFA6  F005         	goto	l7495
  5666   000B3A                     u5140:
  5667   000B3A                     
  5668                           ;my_i2c_pic18.c: 885:     {;my_i2c_pic18.c: 886:         I2C2_M_Stop();
  5669   000B3A  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  5670   000B3E                     
  5671                           ;my_i2c_pic18.c: 887:         I2Cflags |= 0x0001;
  5672   000B3E  8056               	bsf	_I2Cflags^0,0,c
  5673   000B40                     
  5674                           ;my_i2c_pic18.c: 888:         return -103;
  5675   000B40  0EFF               	movlw	255
  5676   000B42  6E0B               	movwf	(?_I2C_Mem_Write+1)^0,c
  5677   000B44  0E99               	movlw	153
  5678   000B46  6E0A               	movwf	?_I2C_Mem_Write^0,c
  5679   000B48  EF05  F006         	goto	l1234
  5680   000B4C                     l7495:
  5681   000B4C  BE19               	btfsc	(I2C_Mem_Write@retval+1)^0,7,c
  5682   000B4E  EFAD  F005         	goto	u5150
  5683   000B52  EFAB  F005         	goto	u5151
  5684   000B56                     u5151:
  5685   000B56  EFB1  F005         	goto	l7505
  5686   000B5A                     u5150:
  5687   000B5A                     l7497:
  5688                           
  5689                           ;my_i2c_pic18.c: 890:     {;my_i2c_pic18.c: 891:         I2C2_M_Stop();
  5690   000B5A  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  5691   000B5E  EF82  F005         	goto	l7475
  5692   000B62                     l7505:
  5693                           
  5694                           ;my_i2c_pic18.c: 896:     if(I2C2_M_WriteByte((char) ((MemAdress) >> 8)) != 0)
  5695   000B62  500B               	movf	(I2C_Mem_Write@MemAdress+1)^0,w,c
  5696   000B64  ECD7  F009         	call	_I2C2_M_WriteByte
  5697   000B68  5005               	movf	?_I2C2_M_WriteByte^0,w,c
  5698   000B6A  1006               	iorwf	(?_I2C2_M_WriteByte+1)^0,w,c
  5699   000B6C  B4D8               	btfsc	status,2,c
  5700   000B6E  EFBB  F005         	goto	u5161
  5701   000B72  EFBD  F005         	goto	u5160
  5702   000B76                     u5161:
  5703   000B76  EFBF  F005         	goto	l7515
  5704   000B7A                     u5160:
  5705   000B7A  EFAD  F005         	goto	l7497
  5706   000B7E                     l7515:
  5707                           
  5708                           ;my_i2c_pic18.c: 902:     if(I2C2_M_WriteByte((char) ((MemAdress) & 0xff)) != 0)
  5709   000B7E  500A               	movf	I2C_Mem_Write@MemAdress^0,w,c
  5710   000B80  ECD7  F009         	call	_I2C2_M_WriteByte
  5711   000B84  5005               	movf	?_I2C2_M_WriteByte^0,w,c
  5712   000B86  1006               	iorwf	(?_I2C2_M_WriteByte+1)^0,w,c
  5713   000B88  B4D8               	btfsc	status,2,c
  5714   000B8A  EFC9  F005         	goto	u5171
  5715   000B8E  EFCB  F005         	goto	u5170
  5716   000B92                     u5171:
  5717   000B92  EFCD  F005         	goto	l7525
  5718   000B96                     u5170:
  5719   000B96  EFAD  F005         	goto	l7497
  5720   000B9A                     l7525:
  5721                           
  5722                           ;my_i2c_pic18.c: 909:     for(i = 0; i < Size; i++)
  5723   000B9A  0E00               	movlw	0
  5724   000B9C  6E1B               	movwf	(I2C_Mem_Write@i+1)^0,c
  5725   000B9E  0E00               	movlw	0
  5726   000BA0  6E1A               	movwf	I2C_Mem_Write@i^0,c
  5727   000BA2  EFE9  F005         	goto	l7539
  5728   000BA6                     l7527:
  5729                           
  5730                           ;my_i2c_pic18.c: 910:     {;my_i2c_pic18.c: 911:         if(I2C2_M_WriteByte(pData[i]) !
      +                          = 0)
  5731   000BA6  501A               	movf	I2C_Mem_Write@i^0,w,c
  5732   000BA8  240E               	addwf	I2C_Mem_Write@pData^0,w,c
  5733   000BAA  6ED9               	movwf	fsr2l,c
  5734   000BAC  501B               	movf	(I2C_Mem_Write@i+1)^0,w,c
  5735   000BAE  200F               	addwfc	(I2C_Mem_Write@pData+1)^0,w,c
  5736   000BB0  6EDA               	movwf	fsr2h,c
  5737   000BB2  50DF               	movf	indf2,w,c
  5738   000BB4  ECD7  F009         	call	_I2C2_M_WriteByte
  5739   000BB8  5005               	movf	?_I2C2_M_WriteByte^0,w,c
  5740   000BBA  1006               	iorwf	(?_I2C2_M_WriteByte+1)^0,w,c
  5741   000BBC  B4D8               	btfsc	status,2,c
  5742   000BBE  EFE3  F005         	goto	u5181
  5743   000BC2  EFE5  F005         	goto	u5180
  5744   000BC6                     u5181:
  5745   000BC6  EFE7  F005         	goto	l7537
  5746   000BCA                     u5180:
  5747   000BCA  EFAD  F005         	goto	l7497
  5748   000BCE                     l7537:
  5749                           
  5750                           ;my_i2c_pic18.c: 917:     }
  5751   000BCE  4A1A               	infsnz	I2C_Mem_Write@i^0,f,c
  5752   000BD0  2A1B               	incf	(I2C_Mem_Write@i+1)^0,f,c
  5753   000BD2                     l7539:
  5754   000BD2  5010               	movf	I2C_Mem_Write@Size^0,w,c
  5755   000BD4  5C1A               	subwf	I2C_Mem_Write@i^0,w,c
  5756   000BD6  5011               	movf	(I2C_Mem_Write@Size+1)^0,w,c
  5757   000BD8  581B               	subwfb	(I2C_Mem_Write@i+1)^0,w,c
  5758   000BDA  A0D8               	btfss	status,0,c
  5759   000BDC  EFF2  F005         	goto	u5191
  5760   000BE0  EFF4  F005         	goto	u5190
  5761   000BE4                     u5191:
  5762   000BE4  EFD3  F005         	goto	l7527
  5763   000BE8                     u5190:
  5764   000BE8                     
  5765                           ;my_i2c_pic18.c: 919:     if(I2C2_M_Stop() != 0)
  5766   000BE8  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  5767   000BEC  5005               	movf	?_I2C2_M_Stop^0,w,c
  5768   000BEE  1006               	iorwf	(?_I2C2_M_Stop+1)^0,w,c
  5769   000BF0  B4D8               	btfsc	status,2,c
  5770   000BF2  EFFD  F005         	goto	u5201
  5771   000BF6  EFFF  F005         	goto	u5200
  5772   000BFA                     u5201:
  5773   000BFA  EF01  F006         	goto	l7549
  5774   000BFE                     u5200:
  5775   000BFE  EF82  F005         	goto	l7475
  5776   000C02                     l7549:
  5777                           
  5778                           ;my_i2c_pic18.c: 924:     return 0;
  5779   000C02  0E00               	movlw	0
  5780   000C04  6E0B               	movwf	(?_I2C_Mem_Write+1)^0,c
  5781   000C06  0E00               	movlw	0
  5782   000C08  6E0A               	movwf	?_I2C_Mem_Write^0,c
  5783   000C0A                     l1234:
  5784   000C0A  0012               	return		;funcret
  5785   000C0C                     __end_of_I2C_Mem_Write:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _FsScape_get_index_crc_SRAM *****************
  5789 ;; Defined at:
  5790 ;;		line 144 in file "fsscape.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  crc             2   29[COMRAM] PTR unsigned long 
  5793 ;;		 -> main@check2(4), 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  _address        4   55[COMRAM] unsigned char [4]
  5796 ;;  value           2   59[COMRAM] short 
  5797 ;;  data            2    0        PTR volatile unsigned lo
  5798 ;;		 -> main@check2(4), 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2   29[COMRAM] int 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Temps:         24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;Total ram usage:       32 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 5
  5815 ;; This function calls:
  5816 ;;		_I2C_Mem_Read
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text38
  5823   000D18                     __ptext38:
  5824                           	callstack 0
  5825   000D18                     _FsScape_get_index_crc_SRAM:
  5826                           	callstack 25
  5827   000D18                     
  5828                           ;fsscape.c: 148:     uint8_t _address[4];;fsscape.c: 150:     value = I2C_Mem_Read(0xDE,
      +                           (0x20 + 4), 1, _address, 4, 0);
  5829   000D18  0E00               	movlw	0
  5830   000D1A  6E0B               	movwf	(I2C_Mem_Read@MemAdress+1)^0,c
  5831   000D1C  0E24               	movlw	36
  5832   000D1E  6E0A               	movwf	I2C_Mem_Read@MemAdress^0,c
  5833   000D20  0E00               	movlw	0
  5834   000D22  6E0D               	movwf	(I2C_Mem_Read@MemAddSize+1)^0,c
  5835   000D24  0E01               	movlw	1
  5836   000D26  6E0C               	movwf	I2C_Mem_Read@MemAddSize^0,c
  5837   000D28  0E38               	movlw	low FsScape_get_index_crc_SRAM@_address
  5838   000D2A  6E0E               	movwf	I2C_Mem_Read@pData^0,c
  5839   000D2C  0E00               	movlw	high FsScape_get_index_crc_SRAM@_address
  5840   000D2E  6E0F               	movwf	(I2C_Mem_Read@pData+1)^0,c
  5841   000D30  0E00               	movlw	0
  5842   000D32  6E11               	movwf	(I2C_Mem_Read@Size+1)^0,c
  5843   000D34  0E04               	movlw	4
  5844   000D36  6E10               	movwf	I2C_Mem_Read@Size^0,c
  5845   000D38  0E00               	movlw	0
  5846   000D3A  6E12               	movwf	I2C_Mem_Read@Timeout^0,c
  5847   000D3C  0E00               	movlw	0
  5848   000D3E  6E13               	movwf	(I2C_Mem_Read@Timeout+1)^0,c
  5849   000D40  0E00               	movlw	0
  5850   000D42  6E14               	movwf	(I2C_Mem_Read@Timeout+2)^0,c
  5851   000D44  0E00               	movlw	0
  5852   000D46  6E15               	movwf	(I2C_Mem_Read@Timeout+3)^0,c
  5853   000D48  0EDE               	movlw	222
  5854   000D4A  ECF5  F003         	call	_I2C_Mem_Read
  5855   000D4E  C00A  F03C         	movff	?_I2C_Mem_Read,FsScape_get_index_crc_SRAM@value
  5856   000D52  C00B  F03D         	movff	?_I2C_Mem_Read+1,FsScape_get_index_crc_SRAM@value+1
  5857   000D56                     
  5858                           ;fsscape.c: 152:     if(value == 0)
  5859   000D56  503C               	movf	FsScape_get_index_crc_SRAM@value^0,w,c
  5860   000D58  103D               	iorwf	(FsScape_get_index_crc_SRAM@value+1)^0,w,c
  5861   000D5A  A4D8               	btfss	status,2,c
  5862   000D5C  EFB2  F006         	goto	u5461
  5863   000D60  EFB4  F006         	goto	u5460
  5864   000D64                     u5461:
  5865   000D64  EF02  F007         	goto	l1302
  5866   000D68                     u5460:
  5867   000D68                     
  5868                           ;fsscape.c: 153:     {;fsscape.c: 155:         *crc = ((uint32_t)_address[3] << 24) | ((
      +                          uint32_t)_address[2] << 16) | ((uint32_t)_address[1] << 8) | _address[0];
  5869   000D68  C039  F020         	movff	FsScape_get_index_crc_SRAM@_address+1,??_FsScape_get_index_crc_SRAM
  5870   000D6C  6A21               	clrf	(??_FsScape_get_index_crc_SRAM+1)^0,c
  5871   000D6E  6A22               	clrf	(??_FsScape_get_index_crc_SRAM+2)^0,c
  5872   000D70  6A23               	clrf	(??_FsScape_get_index_crc_SRAM+3)^0,c
  5873   000D72  C022  F023         	movff	??_FsScape_get_index_crc_SRAM+2,??_FsScape_get_index_crc_SRAM+3
  5874   000D76  C021  F022         	movff	??_FsScape_get_index_crc_SRAM+1,??_FsScape_get_index_crc_SRAM+2
  5875   000D7A  C020  F021         	movff	??_FsScape_get_index_crc_SRAM,??_FsScape_get_index_crc_SRAM+1
  5876   000D7E  6A20               	clrf	??_FsScape_get_index_crc_SRAM^0,c
  5877   000D80  C03A  F024         	movff	FsScape_get_index_crc_SRAM@_address+2,??_FsScape_get_index_crc_SRAM+4
  5878   000D84  6A25               	clrf	(??_FsScape_get_index_crc_SRAM+5)^0,c
  5879   000D86  6A26               	clrf	(??_FsScape_get_index_crc_SRAM+6)^0,c
  5880   000D88  6A27               	clrf	(??_FsScape_get_index_crc_SRAM+7)^0,c
  5881   000D8A  C025  F027         	movff	??_FsScape_get_index_crc_SRAM+5,??_FsScape_get_index_crc_SRAM+7
  5882   000D8E  C024  F026         	movff	??_FsScape_get_index_crc_SRAM+4,??_FsScape_get_index_crc_SRAM+6
  5883   000D92  6A25               	clrf	(??_FsScape_get_index_crc_SRAM+5)^0,c
  5884   000D94  6A24               	clrf	(??_FsScape_get_index_crc_SRAM+4)^0,c
  5885   000D96  C03B  F028         	movff	FsScape_get_index_crc_SRAM@_address+3,??_FsScape_get_index_crc_SRAM+8
  5886   000D9A  6A29               	clrf	(??_FsScape_get_index_crc_SRAM+9)^0,c
  5887   000D9C  6A2A               	clrf	(??_FsScape_get_index_crc_SRAM+10)^0,c
  5888   000D9E  6A2B               	clrf	(??_FsScape_get_index_crc_SRAM+11)^0,c
  5889   000DA0  C028  F02B         	movff	??_FsScape_get_index_crc_SRAM+8,??_FsScape_get_index_crc_SRAM+11
  5890   000DA4  6A2A               	clrf	(??_FsScape_get_index_crc_SRAM+10)^0,c
  5891   000DA6  6A29               	clrf	(??_FsScape_get_index_crc_SRAM+9)^0,c
  5892   000DA8  6A28               	clrf	(??_FsScape_get_index_crc_SRAM+8)^0,c
  5893   000DAA  5024               	movf	(??_FsScape_get_index_crc_SRAM+4)^0,w,c
  5894   000DAC  1028               	iorwf	(??_FsScape_get_index_crc_SRAM+8)^0,w,c
  5895   000DAE  6E2C               	movwf	(??_FsScape_get_index_crc_SRAM+12)^0,c
  5896   000DB0  5025               	movf	(??_FsScape_get_index_crc_SRAM+5)^0,w,c
  5897   000DB2  1029               	iorwf	(??_FsScape_get_index_crc_SRAM+9)^0,w,c
  5898   000DB4  6E2D               	movwf	(??_FsScape_get_index_crc_SRAM+13)^0,c
  5899   000DB6  5026               	movf	(??_FsScape_get_index_crc_SRAM+6)^0,w,c
  5900   000DB8  102A               	iorwf	(??_FsScape_get_index_crc_SRAM+10)^0,w,c
  5901   000DBA  6E2E               	movwf	(??_FsScape_get_index_crc_SRAM+14)^0,c
  5902   000DBC  5027               	movf	(??_FsScape_get_index_crc_SRAM+7)^0,w,c
  5903   000DBE  102B               	iorwf	(??_FsScape_get_index_crc_SRAM+11)^0,w,c
  5904   000DC0  6E2F               	movwf	(??_FsScape_get_index_crc_SRAM+15)^0,c
  5905   000DC2  5020               	movf	??_FsScape_get_index_crc_SRAM^0,w,c
  5906   000DC4  102C               	iorwf	(??_FsScape_get_index_crc_SRAM+12)^0,w,c
  5907   000DC6  6E30               	movwf	(??_FsScape_get_index_crc_SRAM+16)^0,c
  5908   000DC8  5021               	movf	(??_FsScape_get_index_crc_SRAM+1)^0,w,c
  5909   000DCA  102D               	iorwf	(??_FsScape_get_index_crc_SRAM+13)^0,w,c
  5910   000DCC  6E31               	movwf	(??_FsScape_get_index_crc_SRAM+17)^0,c
  5911   000DCE  5022               	movf	(??_FsScape_get_index_crc_SRAM+2)^0,w,c
  5912   000DD0  102E               	iorwf	(??_FsScape_get_index_crc_SRAM+14)^0,w,c
  5913   000DD2  6E32               	movwf	(??_FsScape_get_index_crc_SRAM+18)^0,c
  5914   000DD4  5023               	movf	(??_FsScape_get_index_crc_SRAM+3)^0,w,c
  5915   000DD6  102F               	iorwf	(??_FsScape_get_index_crc_SRAM+15)^0,w,c
  5916   000DD8  6E33               	movwf	(??_FsScape_get_index_crc_SRAM+19)^0,c
  5917   000DDA  5038               	movf	FsScape_get_index_crc_SRAM@_address^0,w,c
  5918   000DDC  1030               	iorwf	(??_FsScape_get_index_crc_SRAM+16)^0,w,c
  5919   000DDE  6E34               	movwf	(??_FsScape_get_index_crc_SRAM+20)^0,c
  5920   000DE0  5031               	movf	(??_FsScape_get_index_crc_SRAM+17)^0,w,c
  5921   000DE2  6E35               	movwf	(??_FsScape_get_index_crc_SRAM+21)^0,c
  5922   000DE4  5032               	movf	(??_FsScape_get_index_crc_SRAM+18)^0,w,c
  5923   000DE6  6E36               	movwf	(??_FsScape_get_index_crc_SRAM+22)^0,c
  5924   000DE8  5033               	movf	(??_FsScape_get_index_crc_SRAM+19)^0,w,c
  5925   000DEA  6E37               	movwf	(??_FsScape_get_index_crc_SRAM+23)^0,c
  5926   000DEC  C01E  FFD9         	movff	FsScape_get_index_crc_SRAM@crc,fsr2l
  5927   000DF0  C01F  FFDA         	movff	FsScape_get_index_crc_SRAM@crc+1,fsr2h
  5928   000DF4  C034  FFDE         	movff	??_FsScape_get_index_crc_SRAM+20,postinc2
  5929   000DF8  C035  FFDE         	movff	??_FsScape_get_index_crc_SRAM+21,postinc2
  5930   000DFC  C036  FFDE         	movff	??_FsScape_get_index_crc_SRAM+22,postinc2
  5931   000E00  C037  FFDE         	movff	??_FsScape_get_index_crc_SRAM+23,postinc2
  5932   000E04                     l1302:
  5933   000E04  0012               	return		;funcret
  5934   000E06                     __end_of_FsScape_get_index_crc_SRAM:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function _FsScape_get_index_SRAM *****************
  5938 ;; Defined at:
  5939 ;;		line 105 in file "fsscape.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  address         2   29[COMRAM] PTR unsigned long 
  5942 ;;		 -> main@adressme2(4), main@adressme(4), 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  _address        4   55[COMRAM] unsigned char [4]
  5945 ;;  value           2   59[COMRAM] short 
  5946 ;;  data            2    0        PTR volatile unsigned lo
  5947 ;;		 -> main@adressme2(4), main@adressme(4), 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2   29[COMRAM] int 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:         24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:       32 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 5
  5964 ;; This function calls:
  5965 ;;		_I2C_Mem_Read
  5966 ;; This function is called by:
  5967 ;;		_main
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text39
  5972   000E06                     __ptext39:
  5973                           	callstack 0
  5974   000E06                     _FsScape_get_index_SRAM:
  5975                           	callstack 25
  5976   000E06                     
  5977                           ;fsscape.c: 109:     uint8_t _address[4];;fsscape.c: 111:     value = I2C_Mem_Read(0xDE,
      +                           0x20, 1, _address, 4, 0);
  5978   000E06  0E00               	movlw	0
  5979   000E08  6E0B               	movwf	(I2C_Mem_Read@MemAdress+1)^0,c
  5980   000E0A  0E20               	movlw	32
  5981   000E0C  6E0A               	movwf	I2C_Mem_Read@MemAdress^0,c
  5982   000E0E  0E00               	movlw	0
  5983   000E10  6E0D               	movwf	(I2C_Mem_Read@MemAddSize+1)^0,c
  5984   000E12  0E01               	movlw	1
  5985   000E14  6E0C               	movwf	I2C_Mem_Read@MemAddSize^0,c
  5986   000E16  0E38               	movlw	low FsScape_get_index_SRAM@_address
  5987   000E18  6E0E               	movwf	I2C_Mem_Read@pData^0,c
  5988   000E1A  0E00               	movlw	high FsScape_get_index_SRAM@_address
  5989   000E1C  6E0F               	movwf	(I2C_Mem_Read@pData+1)^0,c
  5990   000E1E  0E00               	movlw	0
  5991   000E20  6E11               	movwf	(I2C_Mem_Read@Size+1)^0,c
  5992   000E22  0E04               	movlw	4
  5993   000E24  6E10               	movwf	I2C_Mem_Read@Size^0,c
  5994   000E26  0E00               	movlw	0
  5995   000E28  6E12               	movwf	I2C_Mem_Read@Timeout^0,c
  5996   000E2A  0E00               	movlw	0
  5997   000E2C  6E13               	movwf	(I2C_Mem_Read@Timeout+1)^0,c
  5998   000E2E  0E00               	movlw	0
  5999   000E30  6E14               	movwf	(I2C_Mem_Read@Timeout+2)^0,c
  6000   000E32  0E00               	movlw	0
  6001   000E34  6E15               	movwf	(I2C_Mem_Read@Timeout+3)^0,c
  6002   000E36  0EDE               	movlw	222
  6003   000E38  ECF5  F003         	call	_I2C_Mem_Read
  6004   000E3C  C00A  F03C         	movff	?_I2C_Mem_Read,FsScape_get_index_SRAM@value
  6005   000E40  C00B  F03D         	movff	?_I2C_Mem_Read+1,FsScape_get_index_SRAM@value+1
  6006   000E44                     
  6007                           ;fsscape.c: 113:     if(value == 0)
  6008   000E44  503C               	movf	FsScape_get_index_SRAM@value^0,w,c
  6009   000E46  103D               	iorwf	(FsScape_get_index_SRAM@value+1)^0,w,c
  6010   000E48  A4D8               	btfss	status,2,c
  6011   000E4A  EF29  F007         	goto	u5451
  6012   000E4E  EF2B  F007         	goto	u5450
  6013   000E52                     u5451:
  6014   000E52  EF79  F007         	goto	l1289
  6015   000E56                     u5450:
  6016   000E56                     
  6017                           ;fsscape.c: 114:     {;fsscape.c: 116:         *address = ((uint32_t)_address[3] << 24) 
      +                          | ((uint32_t)_address[2] << 16) | ((uint32_t)_address[1] << 8) | _address[0];
  6018   000E56  C039  F020         	movff	FsScape_get_index_SRAM@_address+1,??_FsScape_get_index_SRAM
  6019   000E5A  6A21               	clrf	(??_FsScape_get_index_SRAM+1)^0,c
  6020   000E5C  6A22               	clrf	(??_FsScape_get_index_SRAM+2)^0,c
  6021   000E5E  6A23               	clrf	(??_FsScape_get_index_SRAM+3)^0,c
  6022   000E60  C022  F023         	movff	??_FsScape_get_index_SRAM+2,??_FsScape_get_index_SRAM+3
  6023   000E64  C021  F022         	movff	??_FsScape_get_index_SRAM+1,??_FsScape_get_index_SRAM+2
  6024   000E68  C020  F021         	movff	??_FsScape_get_index_SRAM,??_FsScape_get_index_SRAM+1
  6025   000E6C  6A20               	clrf	??_FsScape_get_index_SRAM^0,c
  6026   000E6E  C03A  F024         	movff	FsScape_get_index_SRAM@_address+2,??_FsScape_get_index_SRAM+4
  6027   000E72  6A25               	clrf	(??_FsScape_get_index_SRAM+5)^0,c
  6028   000E74  6A26               	clrf	(??_FsScape_get_index_SRAM+6)^0,c
  6029   000E76  6A27               	clrf	(??_FsScape_get_index_SRAM+7)^0,c
  6030   000E78  C025  F027         	movff	??_FsScape_get_index_SRAM+5,??_FsScape_get_index_SRAM+7
  6031   000E7C  C024  F026         	movff	??_FsScape_get_index_SRAM+4,??_FsScape_get_index_SRAM+6
  6032   000E80  6A25               	clrf	(??_FsScape_get_index_SRAM+5)^0,c
  6033   000E82  6A24               	clrf	(??_FsScape_get_index_SRAM+4)^0,c
  6034   000E84  C03B  F028         	movff	FsScape_get_index_SRAM@_address+3,??_FsScape_get_index_SRAM+8
  6035   000E88  6A29               	clrf	(??_FsScape_get_index_SRAM+9)^0,c
  6036   000E8A  6A2A               	clrf	(??_FsScape_get_index_SRAM+10)^0,c
  6037   000E8C  6A2B               	clrf	(??_FsScape_get_index_SRAM+11)^0,c
  6038   000E8E  C028  F02B         	movff	??_FsScape_get_index_SRAM+8,??_FsScape_get_index_SRAM+11
  6039   000E92  6A2A               	clrf	(??_FsScape_get_index_SRAM+10)^0,c
  6040   000E94  6A29               	clrf	(??_FsScape_get_index_SRAM+9)^0,c
  6041   000E96  6A28               	clrf	(??_FsScape_get_index_SRAM+8)^0,c
  6042   000E98  5024               	movf	(??_FsScape_get_index_SRAM+4)^0,w,c
  6043   000E9A  1028               	iorwf	(??_FsScape_get_index_SRAM+8)^0,w,c
  6044   000E9C  6E2C               	movwf	(??_FsScape_get_index_SRAM+12)^0,c
  6045   000E9E  5025               	movf	(??_FsScape_get_index_SRAM+5)^0,w,c
  6046   000EA0  1029               	iorwf	(??_FsScape_get_index_SRAM+9)^0,w,c
  6047   000EA2  6E2D               	movwf	(??_FsScape_get_index_SRAM+13)^0,c
  6048   000EA4  5026               	movf	(??_FsScape_get_index_SRAM+6)^0,w,c
  6049   000EA6  102A               	iorwf	(??_FsScape_get_index_SRAM+10)^0,w,c
  6050   000EA8  6E2E               	movwf	(??_FsScape_get_index_SRAM+14)^0,c
  6051   000EAA  5027               	movf	(??_FsScape_get_index_SRAM+7)^0,w,c
  6052   000EAC  102B               	iorwf	(??_FsScape_get_index_SRAM+11)^0,w,c
  6053   000EAE  6E2F               	movwf	(??_FsScape_get_index_SRAM+15)^0,c
  6054   000EB0  5020               	movf	??_FsScape_get_index_SRAM^0,w,c
  6055   000EB2  102C               	iorwf	(??_FsScape_get_index_SRAM+12)^0,w,c
  6056   000EB4  6E30               	movwf	(??_FsScape_get_index_SRAM+16)^0,c
  6057   000EB6  5021               	movf	(??_FsScape_get_index_SRAM+1)^0,w,c
  6058   000EB8  102D               	iorwf	(??_FsScape_get_index_SRAM+13)^0,w,c
  6059   000EBA  6E31               	movwf	(??_FsScape_get_index_SRAM+17)^0,c
  6060   000EBC  5022               	movf	(??_FsScape_get_index_SRAM+2)^0,w,c
  6061   000EBE  102E               	iorwf	(??_FsScape_get_index_SRAM+14)^0,w,c
  6062   000EC0  6E32               	movwf	(??_FsScape_get_index_SRAM+18)^0,c
  6063   000EC2  5023               	movf	(??_FsScape_get_index_SRAM+3)^0,w,c
  6064   000EC4  102F               	iorwf	(??_FsScape_get_index_SRAM+15)^0,w,c
  6065   000EC6  6E33               	movwf	(??_FsScape_get_index_SRAM+19)^0,c
  6066   000EC8  5038               	movf	FsScape_get_index_SRAM@_address^0,w,c
  6067   000ECA  1030               	iorwf	(??_FsScape_get_index_SRAM+16)^0,w,c
  6068   000ECC  6E34               	movwf	(??_FsScape_get_index_SRAM+20)^0,c
  6069   000ECE  5031               	movf	(??_FsScape_get_index_SRAM+17)^0,w,c
  6070   000ED0  6E35               	movwf	(??_FsScape_get_index_SRAM+21)^0,c
  6071   000ED2  5032               	movf	(??_FsScape_get_index_SRAM+18)^0,w,c
  6072   000ED4  6E36               	movwf	(??_FsScape_get_index_SRAM+22)^0,c
  6073   000ED6  5033               	movf	(??_FsScape_get_index_SRAM+19)^0,w,c
  6074   000ED8  6E37               	movwf	(??_FsScape_get_index_SRAM+23)^0,c
  6075   000EDA  C01E  FFD9         	movff	FsScape_get_index_SRAM@address,fsr2l
  6076   000EDE  C01F  FFDA         	movff	FsScape_get_index_SRAM@address+1,fsr2h
  6077   000EE2  C034  FFDE         	movff	??_FsScape_get_index_SRAM+20,postinc2
  6078   000EE6  C035  FFDE         	movff	??_FsScape_get_index_SRAM+21,postinc2
  6079   000EEA  C036  FFDE         	movff	??_FsScape_get_index_SRAM+22,postinc2
  6080   000EEE  C037  FFDE         	movff	??_FsScape_get_index_SRAM+23,postinc2
  6081   000EF2                     l1289:
  6082   000EF2  0012               	return		;funcret
  6083   000EF4                     __end_of_FsScape_get_index_SRAM:
  6084                           	callstack 0
  6085                           
  6086 ;; *************** function _I2C_Mem_Read *****************
  6087 ;; Defined at:
  6088 ;;		line 927 in file "my_i2c_pic18.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  DevAddress      1    wreg     unsigned char 
  6091 ;;  MemAdress       2    9[COMRAM] unsigned short 
  6092 ;;  MemAddSize      2   11[COMRAM] unsigned short 
  6093 ;;  pData           2   13[COMRAM] PTR unsigned char 
  6094 ;;		 -> FsScape_get_index_crc_SRAM@_address(4), FsScape_get_index_SRAM@_address(4), 
  6095 ;;  Size            2   15[COMRAM] unsigned short 
  6096 ;;  Timeout         4   17[COMRAM] unsigned long 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  DevAddress      1   23[COMRAM] unsigned char 
  6099 ;;  retval          2   27[COMRAM] short 
  6100 ;;  i               2   25[COMRAM] short 
  6101 ;;  SlaveAddr       1   24[COMRAM] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  2    9[COMRAM] short 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6111 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;Total ram usage:       20 bytes
  6116 ;; Hardware stack levels used: 1
  6117 ;; Hardware stack levels required when called: 4
  6118 ;; This function calls:
  6119 ;;		_I2C2_M_ReadByte
  6120 ;;		_I2C2_M_Restart
  6121 ;;		_I2C2_M_Start
  6122 ;;		_I2C2_M_Stop
  6123 ;;		_I2C2_M_WriteByte
  6124 ;; This function is called by:
  6125 ;;		_FsScape_get_index_SRAM
  6126 ;;		_FsScape_get_index_crc_SRAM
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text40
  6131   0007EA                     __ptext40:
  6132                           	callstack 0
  6133   0007EA                     _I2C_Mem_Read:
  6134                           	callstack 25
  6135                           
  6136                           ;incstack = 0
  6137                           ;I2C_Mem_Read@DevAddress stored from wreg
  6138   0007EA  6E18               	movwf	I2C_Mem_Read@DevAddress^0,c
  6139   0007EC                     
  6140                           ;my_i2c_pic18.c: 927: int16_t I2C_Mem_Read(uint8_t DevAddress, uint16_t MemAdress, uint1
      +                          6_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout);my_i2c_pic18.c: 928: {;
      +                          my_i2c_pic18.c: 930:     uint8_t SlaveAddr;;my_i2c_pic18.c: 931:     int16_t retval;;my_
      +                          i2c_pic18.c: 932:     int16_t i;;my_i2c_pic18.c: 934:     if((I2Cflags & 0x0001))
  6141   0007EC  A056               	btfss	_I2Cflags^0,0,c
  6142   0007EE  EFFB  F003         	goto	u5211
  6143   0007F2  EFFD  F003         	goto	u5210
  6144   0007F6                     u5211:
  6145   0007F6  EF03  F004         	goto	l7559
  6146   0007FA                     u5210:
  6147   0007FA                     
  6148                           ;my_i2c_pic18.c: 935:         return -100;
  6149   0007FA  0EFF               	movlw	255
  6150   0007FC  6E0B               	movwf	(?_I2C_Mem_Read+1)^0,c
  6151   0007FE  0E9C               	movlw	156
  6152   000800  6E0A               	movwf	?_I2C_Mem_Read^0,c
  6153   000802  EFCB  F004         	goto	l1249
  6154   000806                     l7559:
  6155                           
  6156                           ;my_i2c_pic18.c: 937:     if(I2C2_M_Start() != 0)
  6157   000806  EC7C  F00A         	call	_I2C2_M_Start	;wreg free
  6158   00080A  5005               	movf	?_I2C2_M_Start^0,w,c
  6159   00080C  1006               	iorwf	(?_I2C2_M_Start+1)^0,w,c
  6160   00080E  B4D8               	btfsc	status,2,c
  6161   000810  EF0C  F004         	goto	u5221
  6162   000814  EF0E  F004         	goto	u5220
  6163   000818                     u5221:
  6164   000818  EF15  F004         	goto	l1250
  6165   00081C                     u5220:
  6166   00081C                     l7561:
  6167                           
  6168                           ;my_i2c_pic18.c: 938:     {;my_i2c_pic18.c: 939:         I2Cflags |= 0x0001;
  6169   00081C  8056               	bsf	_I2Cflags^0,0,c
  6170   00081E                     
  6171                           ;my_i2c_pic18.c: 940:         return -102;
  6172   00081E  0EFF               	movlw	255
  6173   000820  6E0B               	movwf	(?_I2C_Mem_Read+1)^0,c
  6174   000822  0E9A               	movlw	154
  6175   000824  6E0A               	movwf	?_I2C_Mem_Read^0,c
  6176   000826  EFCB  F004         	goto	l1249
  6177   00082A                     l1250:
  6178                           
  6179                           ;my_i2c_pic18.c: 943:     SlaveAddr = DevAddress;
  6180   00082A  C018  F019         	movff	I2C_Mem_Read@DevAddress,I2C_Mem_Read@SlaveAddr
  6181   00082E                     
  6182                           ;my_i2c_pic18.c: 944:     retval = I2C2_M_WriteByte((char) SlaveAddr);
  6183   00082E  5019               	movf	I2C_Mem_Read@SlaveAddr^0,w,c
  6184   000830  ECD7  F009         	call	_I2C2_M_WriteByte
  6185   000834  C005  F01C         	movff	?_I2C2_M_WriteByte,I2C_Mem_Read@retval
  6186   000838  C006  F01D         	movff	?_I2C2_M_WriteByte+1,I2C_Mem_Read@retval+1
  6187   00083C                     
  6188                           ;my_i2c_pic18.c: 945:     if(retval == -6)
  6189   00083C  0EFA               	movlw	250
  6190   00083E  181C               	xorwf	I2C_Mem_Read@retval^0,w,c
  6191   000840  E106               	bnz	u5231
  6192   000842  281D               	incf	(I2C_Mem_Read@retval+1)^0,w,c
  6193   000844  A4D8               	btfss	status,2,c
  6194   000846  EF27  F004         	goto	u5231
  6195   00084A  EF29  F004         	goto	u5230
  6196   00084E                     u5231:
  6197   00084E  EF32  F004         	goto	l7581
  6198   000852                     u5230:
  6199   000852                     
  6200                           ;my_i2c_pic18.c: 946:     {;my_i2c_pic18.c: 947:         I2C2_M_Stop();
  6201   000852  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  6202   000856                     
  6203                           ;my_i2c_pic18.c: 948:         I2Cflags |= 0x0001;
  6204   000856  8056               	bsf	_I2Cflags^0,0,c
  6205   000858                     
  6206                           ;my_i2c_pic18.c: 949:         return -103;
  6207   000858  0EFF               	movlw	255
  6208   00085A  6E0B               	movwf	(?_I2C_Mem_Read+1)^0,c
  6209   00085C  0E99               	movlw	153
  6210   00085E  6E0A               	movwf	?_I2C_Mem_Read^0,c
  6211   000860  EFCB  F004         	goto	l1249
  6212   000864                     l7581:
  6213   000864  BE1D               	btfsc	(I2C_Mem_Read@retval+1)^0,7,c
  6214   000866  EF39  F004         	goto	u5240
  6215   00086A  EF37  F004         	goto	u5241
  6216   00086E                     u5241:
  6217   00086E  EF3D  F004         	goto	l7591
  6218   000872                     u5240:
  6219   000872                     l7583:
  6220                           
  6221                           ;my_i2c_pic18.c: 951:     {;my_i2c_pic18.c: 952:         I2C2_M_Stop();
  6222   000872  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  6223   000876  EF0E  F004         	goto	l7561
  6224   00087A                     l7591:
  6225                           
  6226                           ;my_i2c_pic18.c: 957:     if(I2C2_M_WriteByte((char) ((MemAdress) >> 8)) != 0)
  6227   00087A  500B               	movf	(I2C_Mem_Read@MemAdress+1)^0,w,c
  6228   00087C  ECD7  F009         	call	_I2C2_M_WriteByte
  6229   000880  5005               	movf	?_I2C2_M_WriteByte^0,w,c
  6230   000882  1006               	iorwf	(?_I2C2_M_WriteByte+1)^0,w,c
  6231   000884  B4D8               	btfsc	status,2,c
  6232   000886  EF47  F004         	goto	u5251
  6233   00088A  EF49  F004         	goto	u5250
  6234   00088E                     u5251:
  6235   00088E  EF4B  F004         	goto	l7601
  6236   000892                     u5250:
  6237   000892  EF39  F004         	goto	l7583
  6238   000896                     l7601:
  6239                           
  6240                           ;my_i2c_pic18.c: 963:     if(I2C2_M_WriteByte((char) ((MemAdress) & 0xff)) != 0)
  6241   000896  500A               	movf	I2C_Mem_Read@MemAdress^0,w,c
  6242   000898  ECD7  F009         	call	_I2C2_M_WriteByte
  6243   00089C  5005               	movf	?_I2C2_M_WriteByte^0,w,c
  6244   00089E  1006               	iorwf	(?_I2C2_M_WriteByte+1)^0,w,c
  6245   0008A0  B4D8               	btfsc	status,2,c
  6246   0008A2  EF55  F004         	goto	u5261
  6247   0008A6  EF57  F004         	goto	u5260
  6248   0008AA                     u5261:
  6249   0008AA  EF59  F004         	goto	l7611
  6250   0008AE                     u5260:
  6251   0008AE  EF39  F004         	goto	l7583
  6252   0008B2                     l7611:
  6253                           
  6254                           ;my_i2c_pic18.c: 970:     if(I2C2_M_Restart() != 0)
  6255   0008B2  EC43  F00B         	call	_I2C2_M_Restart	;wreg free
  6256   0008B6  5005               	movf	?_I2C2_M_Restart^0,w,c
  6257   0008B8  1006               	iorwf	(?_I2C2_M_Restart+1)^0,w,c
  6258   0008BA  B4D8               	btfsc	status,2,c
  6259   0008BC  EF62  F004         	goto	u5271
  6260   0008C0  EF64  F004         	goto	u5270
  6261   0008C4                     u5271:
  6262   0008C4  EF66  F004         	goto	l7621
  6263   0008C8                     u5270:
  6264   0008C8  EF39  F004         	goto	l7583
  6265   0008CC                     l7621:
  6266                           
  6267                           ;my_i2c_pic18.c: 977:     SlaveAddr = DevAddress + 1;
  6268   0008CC  2818               	incf	I2C_Mem_Read@DevAddress^0,w,c
  6269   0008CE  6E19               	movwf	I2C_Mem_Read@SlaveAddr^0,c
  6270   0008D0                     
  6271                           ;my_i2c_pic18.c: 978:     if(I2C2_M_WriteByte((char) SlaveAddr) != 0)
  6272   0008D0  5019               	movf	I2C_Mem_Read@SlaveAddr^0,w,c
  6273   0008D2  ECD7  F009         	call	_I2C2_M_WriteByte
  6274   0008D6  5005               	movf	?_I2C2_M_WriteByte^0,w,c
  6275   0008D8  1006               	iorwf	(?_I2C2_M_WriteByte+1)^0,w,c
  6276   0008DA  B4D8               	btfsc	status,2,c
  6277   0008DC  EF72  F004         	goto	u5281
  6278   0008E0  EF74  F004         	goto	u5280
  6279   0008E4                     u5281:
  6280   0008E4  EF76  F004         	goto	l7633
  6281   0008E8                     u5280:
  6282   0008E8  EF39  F004         	goto	l7583
  6283   0008EC                     l7633:
  6284                           
  6285                           ;my_i2c_pic18.c: 984:     for(i = 0; i < Size; i++)
  6286   0008EC  0E00               	movlw	0
  6287   0008EE  6E1B               	movwf	(I2C_Mem_Read@i+1)^0,c
  6288   0008F0  0E00               	movlw	0
  6289   0008F2  6E1A               	movwf	I2C_Mem_Read@i^0,c
  6290   0008F4  EFAF  F004         	goto	l7655
  6291   0008F8                     l7635:
  6292                           
  6293                           ;my_i2c_pic18.c: 985:     {;my_i2c_pic18.c: 986:         if(i == (Size - 1))
  6294   0008F8  0EFF               	movlw	255
  6295   0008FA  2410               	addwf	I2C_Mem_Read@Size^0,w,c
  6296   0008FC  6E16               	movwf	??_I2C_Mem_Read^0,c
  6297   0008FE  0EFF               	movlw	255
  6298   000900  2011               	addwfc	(I2C_Mem_Read@Size+1)^0,w,c
  6299   000902  6E17               	movwf	(??_I2C_Mem_Read+1)^0,c
  6300   000904  501A               	movf	I2C_Mem_Read@i^0,w,c
  6301   000906  1816               	xorwf	??_I2C_Mem_Read^0,w,c
  6302   000908  E107               	bnz	u5291
  6303   00090A  501B               	movf	(I2C_Mem_Read@i+1)^0,w,c
  6304   00090C  1817               	xorwf	(??_I2C_Mem_Read+1)^0,w,c
  6305   00090E  A4D8               	btfss	status,2,c
  6306   000910  EF8C  F004         	goto	u5291
  6307   000914  EF8E  F004         	goto	u5290
  6308   000918                     u5291:
  6309   000918  EF97  F004         	goto	l7639
  6310   00091C                     u5290:
  6311   00091C                     
  6312                           ;my_i2c_pic18.c: 987:         {;my_i2c_pic18.c: 988:             retval = I2C2_M_ReadByt
      +                          e(1);
  6313   00091C  0E01               	movlw	1
  6314   00091E  ECF0  F007         	call	_I2C2_M_ReadByte
  6315   000922  C005  F01C         	movff	?_I2C2_M_ReadByte,I2C_Mem_Read@retval
  6316   000926  C006  F01D         	movff	?_I2C2_M_ReadByte+1,I2C_Mem_Read@retval+1
  6317                           
  6318                           ;my_i2c_pic18.c: 989:         } else
  6319   00092A  EF9E  F004         	goto	l7641
  6320   00092E                     l7639:
  6321                           
  6322                           ;my_i2c_pic18.c: 990:         {;my_i2c_pic18.c: 991:             retval = I2C2_M_ReadByt
      +                          e(0);
  6323   00092E  0E00               	movlw	0
  6324   000930  ECF0  F007         	call	_I2C2_M_ReadByte
  6325   000934  C005  F01C         	movff	?_I2C2_M_ReadByte,I2C_Mem_Read@retval
  6326   000938  C006  F01D         	movff	?_I2C2_M_ReadByte+1,I2C_Mem_Read@retval+1
  6327   00093C                     l7641:
  6328                           
  6329                           ;my_i2c_pic18.c: 993:         if(retval >= 0)
  6330   00093C  BE1D               	btfsc	(I2C_Mem_Read@retval+1)^0,7,c
  6331   00093E  EFA3  F004         	goto	u5301
  6332   000942  EFA5  F004         	goto	u5300
  6333   000946                     u5301:
  6334   000946  EF39  F004         	goto	l7583
  6335   00094A                     u5300:
  6336   00094A                     
  6337                           ;my_i2c_pic18.c: 994:         {;my_i2c_pic18.c: 995:             pData[i] = (uint8_t)ret
      +                          val;
  6338   00094A  501A               	movf	I2C_Mem_Read@i^0,w,c
  6339   00094C  240E               	addwf	I2C_Mem_Read@pData^0,w,c
  6340   00094E  6ED9               	movwf	fsr2l,c
  6341   000950  501B               	movf	(I2C_Mem_Read@i+1)^0,w,c
  6342   000952  200F               	addwfc	(I2C_Mem_Read@pData+1)^0,w,c
  6343   000954  6EDA               	movwf	fsr2h,c
  6344   000956  C01C  FFDF         	movff	I2C_Mem_Read@retval,indf2
  6345   00095A                     
  6346                           ;my_i2c_pic18.c: 1002:     }
  6347   00095A  4A1A               	infsnz	I2C_Mem_Read@i^0,f,c
  6348   00095C  2A1B               	incf	(I2C_Mem_Read@i+1)^0,f,c
  6349   00095E                     l7655:
  6350   00095E  5010               	movf	I2C_Mem_Read@Size^0,w,c
  6351   000960  5C1A               	subwf	I2C_Mem_Read@i^0,w,c
  6352   000962  5011               	movf	(I2C_Mem_Read@Size+1)^0,w,c
  6353   000964  581B               	subwfb	(I2C_Mem_Read@i+1)^0,w,c
  6354   000966  A0D8               	btfss	status,0,c
  6355   000968  EFB8  F004         	goto	u5311
  6356   00096C  EFBA  F004         	goto	u5310
  6357   000970                     u5311:
  6358   000970  EF7C  F004         	goto	l7635
  6359   000974                     u5310:
  6360   000974                     
  6361                           ;my_i2c_pic18.c: 1004:     if(I2C2_M_Stop() != 0)
  6362   000974  EC0B  F00B         	call	_I2C2_M_Stop	;wreg free
  6363   000978  5005               	movf	?_I2C2_M_Stop^0,w,c
  6364   00097A  1006               	iorwf	(?_I2C2_M_Stop+1)^0,w,c
  6365   00097C  B4D8               	btfsc	status,2,c
  6366   00097E  EFC3  F004         	goto	u5321
  6367   000982  EFC5  F004         	goto	u5320
  6368   000986                     u5321:
  6369   000986  EFC7  F004         	goto	l7665
  6370   00098A                     u5320:
  6371   00098A  EF0E  F004         	goto	l7561
  6372   00098E                     l7665:
  6373                           
  6374                           ;my_i2c_pic18.c: 1009:     return 0;
  6375   00098E  0E00               	movlw	0
  6376   000990  6E0B               	movwf	(?_I2C_Mem_Read+1)^0,c
  6377   000992  0E00               	movlw	0
  6378   000994  6E0A               	movwf	?_I2C_Mem_Read^0,c
  6379   000996                     l1249:
  6380   000996  0012               	return		;funcret
  6381   000998                     __end_of_I2C_Mem_Read:
  6382                           	callstack 0
  6383                           
  6384 ;; *************** function _I2C2_M_WriteByte *****************
  6385 ;; Defined at:
  6386 ;;		line 757 in file "my_i2c_pic18.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  cData           1    wreg     unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  cData           1    6[COMRAM] unsigned char 
  6391 ;;  t               2    7[COMRAM] short 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  2    4[COMRAM] short 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:        5 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; Hardware stack levels required when called: 3
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_I2C2_M_Poll
  6412 ;;		_I2C_Mem_Write
  6413 ;;		_I2C_Mem_Read
  6414 ;;		_I2C2_M_Read
  6415 ;;		_I2C2_M_Read_Single
  6416 ;;		_I2C2_M_Write
  6417 ;;		_I2C2_M_Write24
  6418 ;;		_I2C2_M_Write_Single
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text41
  6423   0013AE                     __ptext41:
  6424                           	callstack 0
  6425   0013AE                     _I2C2_M_WriteByte:
  6426                           	callstack 26
  6427                           
  6428                           ;incstack = 0
  6429                           ;I2C2_M_WriteByte@cData stored from wreg
  6430   0013AE  6E07               	movwf	I2C2_M_WriteByte@cData^0,c
  6431   0013B0                     
  6432                           ;my_i2c_pic18.c: 757: int16_t I2C2_M_WriteByte(char cData);my_i2c_pic18.c: 758: {;my_i2c
      +                          _pic18.c: 759:     int16_t t;;my_i2c_pic18.c: 761:     if(SSP1STATbits.R_NOT_W)
  6433   0013B0  A4C7               	btfss	199,2,c	;volatile
  6434   0013B2  EFDD  F009         	goto	u4881
  6435   0013B6  EFDF  F009         	goto	u4880
  6436   0013BA                     u4881:
  6437   0013BA  EFE5  F009         	goto	l7187
  6438   0013BE                     u4880:
  6439   0013BE                     
  6440                           ;my_i2c_pic18.c: 762:     {;my_i2c_pic18.c: 763:         return -7;
  6441   0013BE  0EFF               	movlw	255
  6442   0013C0  6E06               	movwf	(?_I2C2_M_WriteByte+1)^0,c
  6443   0013C2  0EF9               	movlw	249
  6444   0013C4  6E05               	movwf	?_I2C2_M_WriteByte^0,c
  6445   0013C6  EF29  F00A         	goto	l1203
  6446   0013CA                     l7187:
  6447                           
  6448                           ;my_i2c_pic18.c: 766:     SSP1BUF = cData;
  6449   0013CA  C007  FFC9         	movff	I2C2_M_WriteByte@cData,4041	;volatile
  6450   0013CE                     
  6451                           ;my_i2c_pic18.c: 768:     t = 0;
  6452   0013CE  0E00               	movlw	0
  6453   0013D0  6E09               	movwf	(I2C2_M_WriteByte@t+1)^0,c
  6454   0013D2  0E00               	movlw	0
  6455   0013D4  6E08               	movwf	I2C2_M_WriteByte@t^0,c
  6456                           
  6457                           ;my_i2c_pic18.c: 770:     while(SSP1STATbits.BF1)
  6458   0013D6  EF03  F00A         	goto	l1204
  6459   0013DA                     l7191:
  6460                           
  6461                           ;my_i2c_pic18.c: 771:     {;my_i2c_pic18.c: 772:         t++;
  6462   0013DA  4A08               	infsnz	I2C2_M_WriteByte@t^0,f,c
  6463   0013DC  2A09               	incf	(I2C2_M_WriteByte@t+1)^0,f,c
  6464   0013DE                     
  6465                           ;my_i2c_pic18.c: 774:         if(t > 16000)
  6466   0013DE  BE09               	btfsc	(I2C2_M_WriteByte@t+1)^0,7,c
  6467   0013E0  EFFB  F009         	goto	u4891
  6468   0013E4  0E81               	movlw	129
  6469   0013E6  5C08               	subwf	I2C2_M_WriteByte@t^0,w,c
  6470   0013E8  0E3E               	movlw	62
  6471   0013EA  5809               	subwfb	(I2C2_M_WriteByte@t+1)^0,w,c
  6472   0013EC  A0D8               	btfss	status,0,c
  6473   0013EE  EFFB  F009         	goto	u4891
  6474   0013F2  EFFD  F009         	goto	u4890
  6475   0013F6                     u4891:
  6476   0013F6  EF03  F00A         	goto	l1204
  6477   0013FA                     u4890:
  6478   0013FA                     
  6479                           ;my_i2c_pic18.c: 775:         {;my_i2c_pic18.c: 776:             return -2;
  6480   0013FA  0EFF               	movlw	255
  6481   0013FC  6E06               	movwf	(?_I2C2_M_WriteByte+1)^0,c
  6482   0013FE  0EFE               	movlw	254
  6483   001400  6E05               	movwf	?_I2C2_M_WriteByte^0,c
  6484   001402  EF29  F00A         	goto	l1203
  6485   001406                     l1204:
  6486                           
  6487                           ;my_i2c_pic18.c: 770:     while(SSP1STATbits.BF1)
  6488   001406  B0C7               	btfsc	199,0,c	;volatile
  6489   001408  EF08  F00A         	goto	u4901
  6490   00140C  EF0A  F00A         	goto	u4900
  6491   001410                     u4901:
  6492   001410  EFED  F009         	goto	l7191
  6493   001414                     u4900:
  6494   001414                     
  6495                           ;my_i2c_pic18.c: 780:     if(PIR2bits.BCL1IF)
  6496   001414  A6A1               	btfss	161,3,c	;volatile
  6497   001416  EF0F  F00A         	goto	u4911
  6498   00141A  EF11  F00A         	goto	u4910
  6499   00141E                     u4911:
  6500   00141E  EF18  F00A         	goto	l1208
  6501   001422                     u4910:
  6502   001422                     
  6503                           ;my_i2c_pic18.c: 781:     {;my_i2c_pic18.c: 782:         PIR2bits.BCL1IF = 0;
  6504   001422  96A1               	bcf	161,3,c	;volatile
  6505   001424                     
  6506                           ;my_i2c_pic18.c: 783:         return -4;
  6507   001424  0EFF               	movlw	255
  6508   001426  6E06               	movwf	(?_I2C2_M_WriteByte+1)^0,c
  6509   001428  0EFC               	movlw	252
  6510   00142A  6E05               	movwf	?_I2C2_M_WriteByte^0,c
  6511   00142C  EF29  F00A         	goto	l1203
  6512   001430                     l1208:
  6513                           
  6514                           ;my_i2c_pic18.c: 787:     if(SSP1CON2bits.ACKSTAT1)
  6515   001430  ACC5               	btfss	197,6,c	;volatile
  6516   001432  EF1D  F00A         	goto	u4921
  6517   001436  EF1F  F00A         	goto	u4920
  6518   00143A                     u4921:
  6519   00143A  EF25  F00A         	goto	l7211
  6520   00143E                     u4920:
  6521   00143E                     
  6522                           ;my_i2c_pic18.c: 788:         return -6;
  6523   00143E  0EFF               	movlw	255
  6524   001440  6E06               	movwf	(?_I2C2_M_WriteByte+1)^0,c
  6525   001442  0EFA               	movlw	250
  6526   001444  6E05               	movwf	?_I2C2_M_WriteByte^0,c
  6527   001446  EF29  F00A         	goto	l1203
  6528   00144A                     l7211:
  6529                           
  6530                           ;my_i2c_pic18.c: 790:         return 0;
  6531   00144A  0E00               	movlw	0
  6532   00144C  6E06               	movwf	(?_I2C2_M_WriteByte+1)^0,c
  6533   00144E  0E00               	movlw	0
  6534   001450  6E05               	movwf	?_I2C2_M_WriteByte^0,c
  6535   001452                     l1203:
  6536   001452  0012               	return		;funcret
  6537   001454                     __end_of_I2C2_M_WriteByte:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _I2C2_M_Stop *****************
  6541 ;; Defined at:
  6542 ;;		line 600 in file "my_i2c_pic18.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  t               2    6[COMRAM] short 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  2    4[COMRAM] short 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;Total ram usage:        4 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 3
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_I2C2_M_Poll
  6567 ;;		_I2C_Mem_Write
  6568 ;;		_I2C_Mem_Read
  6569 ;;		_I2C2_M_Read
  6570 ;;		_I2C2_M_Read_Single
  6571 ;;		_I2C2_M_Write
  6572 ;;		_I2C2_M_Write24
  6573 ;;		_I2C2_M_Write_Single
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text42
  6578   001616                     __ptext42:
  6579                           	callstack 0
  6580   001616                     _I2C2_M_Stop:
  6581                           	callstack 26
  6582   001616                     
  6583                           ;my_i2c_pic18.c: 602:     int16_t t;;my_i2c_pic18.c: 604:     SSP1CON2bits.PEN1 = 1;
  6584   001616  84C5               	bsf	197,2,c	;volatile
  6585                           
  6586                           ;my_i2c_pic18.c: 605:     __nop();
  6587   001618  F000               	nop	
  6588                           
  6589                           ;my_i2c_pic18.c: 606:     if(PIR2bits.BCL1IF)
  6590   00161A  A6A1               	btfss	161,3,c	;volatile
  6591   00161C  EF12  F00B         	goto	u4931
  6592   001620  EF14  F00B         	goto	u4930
  6593   001624                     u4931:
  6594   001624  EF1B  F00B         	goto	l7223
  6595   001628                     u4930:
  6596   001628                     
  6597                           ;my_i2c_pic18.c: 607:     {;my_i2c_pic18.c: 608:         PIR2bits.BCL1IF = 0;
  6598   001628  96A1               	bcf	161,3,c	;volatile
  6599   00162A                     
  6600                           ;my_i2c_pic18.c: 609:         return -4;
  6601   00162A  0EFF               	movlw	255
  6602   00162C  6E06               	movwf	(?_I2C2_M_Stop+1)^0,c
  6603   00162E  0EFC               	movlw	252
  6604   001630  6E05               	movwf	?_I2C2_M_Stop^0,c
  6605   001632  EF42  F00B         	goto	l1167
  6606   001636                     l7223:
  6607                           
  6608                           ;my_i2c_pic18.c: 612:     t = 0;
  6609   001636  0E00               	movlw	0
  6610   001638  6E08               	movwf	(I2C2_M_Stop@t+1)^0,c
  6611   00163A  0E00               	movlw	0
  6612   00163C  6E07               	movwf	I2C2_M_Stop@t^0,c
  6613                           
  6614                           ;my_i2c_pic18.c: 613:     while(SSP1CON2bits.PEN1)
  6615   00163E  EF37  F00B         	goto	l1168
  6616   001642                     l7225:
  6617                           
  6618                           ;my_i2c_pic18.c: 614:     {;my_i2c_pic18.c: 615:         t++;
  6619   001642  4A07               	infsnz	I2C2_M_Stop@t^0,f,c
  6620   001644  2A08               	incf	(I2C2_M_Stop@t+1)^0,f,c
  6621   001646                     
  6622                           ;my_i2c_pic18.c: 616:         if(t > 1000)
  6623   001646  BE08               	btfsc	(I2C2_M_Stop@t+1)^0,7,c
  6624   001648  EF2F  F00B         	goto	u4941
  6625   00164C  0EE9               	movlw	233
  6626   00164E  5C07               	subwf	I2C2_M_Stop@t^0,w,c
  6627   001650  0E03               	movlw	3
  6628   001652  5808               	subwfb	(I2C2_M_Stop@t+1)^0,w,c
  6629   001654  A0D8               	btfss	status,0,c
  6630   001656  EF2F  F00B         	goto	u4941
  6631   00165A  EF31  F00B         	goto	u4940
  6632   00165E                     u4941:
  6633   00165E  EF37  F00B         	goto	l1168
  6634   001662                     u4940:
  6635   001662                     
  6636                           ;my_i2c_pic18.c: 617:         {;my_i2c_pic18.c: 619:             return -2;
  6637   001662  0EFF               	movlw	255
  6638   001664  6E06               	movwf	(?_I2C2_M_Stop+1)^0,c
  6639   001666  0EFE               	movlw	254
  6640   001668  6E05               	movwf	?_I2C2_M_Stop^0,c
  6641   00166A  EF42  F00B         	goto	l1167
  6642   00166E                     l1168:
  6643                           
  6644                           ;my_i2c_pic18.c: 613:     while(SSP1CON2bits.PEN1)
  6645   00166E  B4C5               	btfsc	197,2,c	;volatile
  6646   001670  EF3C  F00B         	goto	u4951
  6647   001674  EF3E  F00B         	goto	u4950
  6648   001678                     u4951:
  6649   001678  EF21  F00B         	goto	l7225
  6650   00167C                     u4950:
  6651   00167C                     
  6652                           ;my_i2c_pic18.c: 622:     return 0;
  6653   00167C  0E00               	movlw	0
  6654   00167E  6E06               	movwf	(?_I2C2_M_Stop+1)^0,c
  6655   001680  0E00               	movlw	0
  6656   001682  6E05               	movwf	?_I2C2_M_Stop^0,c
  6657   001684                     l1167:
  6658   001684  0012               	return		;funcret
  6659   001686                     __end_of_I2C2_M_Stop:
  6660                           	callstack 0
  6661                           
  6662 ;; *************** function _I2C2_M_Start *****************
  6663 ;; Defined at:
  6664 ;;		line 554 in file "my_i2c_pic18.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;		None
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  t               2    6[COMRAM] short 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  2    4[COMRAM] short 
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;Total ram usage:        4 bytes
  6683 ;; Hardware stack levels used: 1
  6684 ;; Hardware stack levels required when called: 3
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_I2C2_M_Poll
  6689 ;;		_I2C_Mem_Write
  6690 ;;		_I2C_Mem_Read
  6691 ;;		_I2C2_M_Read
  6692 ;;		_I2C2_M_Read_Single
  6693 ;;		_I2C2_M_Write
  6694 ;;		_I2C2_M_Write24
  6695 ;;		_I2C2_M_Write_Single
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text43
  6700   0014F8                     __ptext43:
  6701                           	callstack 0
  6702   0014F8                     _I2C2_M_Start:
  6703                           	callstack 26
  6704   0014F8                     
  6705                           ;my_i2c_pic18.c: 556:     int16_t t;;my_i2c_pic18.c: 558:     SSP1CON2bits.SEN1 = 1;
  6706   0014F8  80C5               	bsf	197,0,c	;volatile
  6707                           
  6708                           ;my_i2c_pic18.c: 559:     __nop();
  6709   0014FA  F000               	nop	
  6710                           
  6711                           ;my_i2c_pic18.c: 560:     if(PIR2bits.BCL1IF)
  6712   0014FC  A6A1               	btfss	161,3,c	;volatile
  6713   0014FE  EF83  F00A         	goto	u4831
  6714   001502  EF85  F00A         	goto	u4830
  6715   001506                     u4831:
  6716   001506  EF8D  F00A         	goto	l1156
  6717   00150A                     u4830:
  6718   00150A                     
  6719                           ;my_i2c_pic18.c: 561:     {;my_i2c_pic18.c: 562:         SSP1CON2bits.SEN1 = 0;
  6720   00150A  90C5               	bcf	197,0,c	;volatile
  6721                           
  6722                           ;my_i2c_pic18.c: 563:         PIR2bits.BCL1IF = 0;
  6723   00150C  96A1               	bcf	161,3,c	;volatile
  6724   00150E                     l7151:
  6725                           
  6726                           ;my_i2c_pic18.c: 564:         return -4;
  6727   00150E  0EFF               	movlw	255
  6728   001510  6E06               	movwf	(?_I2C2_M_Start+1)^0,c
  6729   001512  0EFC               	movlw	252
  6730   001514  6E05               	movwf	?_I2C2_M_Start^0,c
  6731   001516  EFCD  F00A         	goto	l1157
  6732   00151A                     l1156:
  6733                           
  6734                           ;my_i2c_pic18.c: 566:     if(SSP1CON1bits.WCOL1)
  6735   00151A  AEC6               	btfss	198,7,c	;volatile
  6736   00151C  EF92  F00A         	goto	u4841
  6737   001520  EF94  F00A         	goto	u4840
  6738   001524                     u4841:
  6739   001524  EF9C  F00A         	goto	l7161
  6740   001528                     u4840:
  6741   001528                     
  6742                           ;my_i2c_pic18.c: 567:     {;my_i2c_pic18.c: 568:         SSP1CON2bits.SEN1 = 0;
  6743   001528  90C5               	bcf	197,0,c	;volatile
  6744                           
  6745                           ;my_i2c_pic18.c: 569:         SSP1CON1bits.WCOL1 = 0;
  6746   00152A  9EC6               	bcf	198,7,c	;volatile
  6747   00152C                     
  6748                           ;my_i2c_pic18.c: 570:         return -5;
  6749   00152C  0EFF               	movlw	255
  6750   00152E  6E06               	movwf	(?_I2C2_M_Start+1)^0,c
  6751   001530  0EFB               	movlw	251
  6752   001532  6E05               	movwf	?_I2C2_M_Start^0,c
  6753   001534  EFCD  F00A         	goto	l1157
  6754   001538                     l7161:
  6755                           
  6756                           ;my_i2c_pic18.c: 573:     t = 0;
  6757   001538  0E00               	movlw	0
  6758   00153A  6E08               	movwf	(I2C2_M_Start@t+1)^0,c
  6759   00153C  0E00               	movlw	0
  6760   00153E  6E07               	movwf	I2C2_M_Start@t^0,c
  6761                           
  6762                           ;my_i2c_pic18.c: 574:     while(SSP1CON2bits.SEN1)
  6763   001540  EFB8  F00A         	goto	l1159
  6764   001544                     l7163:
  6765                           
  6766                           ;my_i2c_pic18.c: 575:     {;my_i2c_pic18.c: 576:         t++;
  6767   001544  4A07               	infsnz	I2C2_M_Start@t^0,f,c
  6768   001546  2A08               	incf	(I2C2_M_Start@t+1)^0,f,c
  6769   001548                     
  6770                           ;my_i2c_pic18.c: 577:         if(t > 1000)
  6771   001548  BE08               	btfsc	(I2C2_M_Start@t+1)^0,7,c
  6772   00154A  EFB0  F00A         	goto	u4851
  6773   00154E  0EE9               	movlw	233
  6774   001550  5C07               	subwf	I2C2_M_Start@t^0,w,c
  6775   001552  0E03               	movlw	3
  6776   001554  5808               	subwfb	(I2C2_M_Start@t+1)^0,w,c
  6777   001556  A0D8               	btfss	status,0,c
  6778   001558  EFB0  F00A         	goto	u4851
  6779   00155C  EFB2  F00A         	goto	u4850
  6780   001560                     u4851:
  6781   001560  EFB8  F00A         	goto	l1159
  6782   001564                     u4850:
  6783   001564                     
  6784                           ;my_i2c_pic18.c: 578:         {;my_i2c_pic18.c: 579:             return -101;
  6785   001564  0EFF               	movlw	255
  6786   001566  6E06               	movwf	(?_I2C2_M_Start+1)^0,c
  6787   001568  0E9B               	movlw	155
  6788   00156A  6E05               	movwf	?_I2C2_M_Start^0,c
  6789   00156C  EFCD  F00A         	goto	l1157
  6790   001570                     l1159:
  6791                           
  6792                           ;my_i2c_pic18.c: 574:     while(SSP1CON2bits.SEN1)
  6793   001570  B0C5               	btfsc	197,0,c	;volatile
  6794   001572  EFBD  F00A         	goto	u4861
  6795   001576  EFBF  F00A         	goto	u4860
  6796   00157A                     u4861:
  6797   00157A  EFA2  F00A         	goto	l7163
  6798   00157E                     u4860:
  6799   00157E                     
  6800                           ;my_i2c_pic18.c: 585:     if(PIR2bits.BCL1IF)
  6801   00157E  A6A1               	btfss	161,3,c	;volatile
  6802   001580  EFC4  F00A         	goto	u4871
  6803   001584  EFC6  F00A         	goto	u4870
  6804   001588                     u4871:
  6805   001588  EFC9  F00A         	goto	l7177
  6806   00158C                     u4870:
  6807   00158C                     
  6808                           ;my_i2c_pic18.c: 586:     {;my_i2c_pic18.c: 587:         PIR2bits.BCL1IF = 0;
  6809   00158C  96A1               	bcf	161,3,c	;volatile
  6810   00158E  EF87  F00A         	goto	l7151
  6811   001592                     l7177:
  6812                           
  6813                           ;my_i2c_pic18.c: 591:     return 0;
  6814   001592  0E00               	movlw	0
  6815   001594  6E06               	movwf	(?_I2C2_M_Start+1)^0,c
  6816   001596  0E00               	movlw	0
  6817   001598  6E05               	movwf	?_I2C2_M_Start^0,c
  6818   00159A                     l1157:
  6819   00159A  0012               	return		;funcret
  6820   00159C                     __end_of_I2C2_M_Start:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function _I2C2_M_Restart *****************
  6824 ;; Defined at:
  6825 ;;		line 522 in file "my_i2c_pic18.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  t               2    6[COMRAM] short 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  2    4[COMRAM] short 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;Total ram usage:        4 bytes
  6844 ;; Hardware stack levels used: 1
  6845 ;; Hardware stack levels required when called: 3
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_I2C_Mem_Read
  6850 ;;		_I2C2_M_Read
  6851 ;;		_I2C2_M_Read_Single
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text44
  6856   001686                     __ptext44:
  6857                           	callstack 0
  6858   001686                     _I2C2_M_Restart:
  6859                           	callstack 25
  6860   001686                     
  6861                           ;my_i2c_pic18.c: 524:     int16_t t;;my_i2c_pic18.c: 526:     SSP1CON2bits.RSEN1 = 1;
  6862   001686  82C5               	bsf	197,1,c	;volatile
  6863   001688                     
  6864                           ;my_i2c_pic18.c: 527:     t = 0;
  6865   001688  0E00               	movlw	0
  6866   00168A  6E08               	movwf	(I2C2_M_Restart@t+1)^0,c
  6867   00168C  0E00               	movlw	0
  6868   00168E  6E07               	movwf	I2C2_M_Restart@t^0,c
  6869                           
  6870                           ;my_i2c_pic18.c: 528:     while(SSP1CON2bits.RSEN1)
  6871   001690  EF60  F00B         	goto	l1148
  6872   001694                     l7241:
  6873                           
  6874                           ;my_i2c_pic18.c: 529:     {;my_i2c_pic18.c: 530:         t++;
  6875   001694  4A07               	infsnz	I2C2_M_Restart@t^0,f,c
  6876   001696  2A08               	incf	(I2C2_M_Restart@t+1)^0,f,c
  6877   001698                     
  6878                           ;my_i2c_pic18.c: 531:         if(t > 1000)
  6879   001698  BE08               	btfsc	(I2C2_M_Restart@t+1)^0,7,c
  6880   00169A  EF58  F00B         	goto	u4961
  6881   00169E  0EE9               	movlw	233
  6882   0016A0  5C07               	subwf	I2C2_M_Restart@t^0,w,c
  6883   0016A2  0E03               	movlw	3
  6884   0016A4  5808               	subwfb	(I2C2_M_Restart@t+1)^0,w,c
  6885   0016A6  A0D8               	btfss	status,0,c
  6886   0016A8  EF58  F00B         	goto	u4961
  6887   0016AC  EF5A  F00B         	goto	u4960
  6888   0016B0                     u4961:
  6889   0016B0  EF60  F00B         	goto	l1148
  6890   0016B4                     u4960:
  6891   0016B4                     
  6892                           ;my_i2c_pic18.c: 532:         {;my_i2c_pic18.c: 534:             return -2;
  6893   0016B4  0EFF               	movlw	255
  6894   0016B6  6E06               	movwf	(?_I2C2_M_Restart+1)^0,c
  6895   0016B8  0EFE               	movlw	254
  6896   0016BA  6E05               	movwf	?_I2C2_M_Restart^0,c
  6897   0016BC  EF79  F00B         	goto	l1151
  6898   0016C0                     l1148:
  6899                           
  6900                           ;my_i2c_pic18.c: 528:     while(SSP1CON2bits.RSEN1)
  6901   0016C0  B2C5               	btfsc	197,1,c	;volatile
  6902   0016C2  EF65  F00B         	goto	u4971
  6903   0016C6  EF67  F00B         	goto	u4970
  6904   0016CA                     u4971:
  6905   0016CA  EF4A  F00B         	goto	l7241
  6906   0016CE                     u4970:
  6907   0016CE                     
  6908                           ;my_i2c_pic18.c: 538:     if(PIR2bits.BCL1IF)
  6909   0016CE  A6A1               	btfss	161,3,c	;volatile
  6910   0016D0  EF6C  F00B         	goto	u4981
  6911   0016D4  EF6E  F00B         	goto	u4980
  6912   0016D8                     u4981:
  6913   0016D8  EF75  F00B         	goto	l7255
  6914   0016DC                     u4980:
  6915   0016DC                     
  6916                           ;my_i2c_pic18.c: 539:     {;my_i2c_pic18.c: 540:         PIR2bits.BCL1IF = 0;
  6917   0016DC  96A1               	bcf	161,3,c	;volatile
  6918   0016DE                     
  6919                           ;my_i2c_pic18.c: 541:         return -4;
  6920   0016DE  0EFF               	movlw	255
  6921   0016E0  6E06               	movwf	(?_I2C2_M_Restart+1)^0,c
  6922   0016E2  0EFC               	movlw	252
  6923   0016E4  6E05               	movwf	?_I2C2_M_Restart^0,c
  6924   0016E6  EF79  F00B         	goto	l1151
  6925   0016EA                     l7255:
  6926                           
  6927                           ;my_i2c_pic18.c: 544:     return 0;
  6928   0016EA  0E00               	movlw	0
  6929   0016EC  6E06               	movwf	(?_I2C2_M_Restart+1)^0,c
  6930   0016EE  0E00               	movlw	0
  6931   0016F0  6E05               	movwf	?_I2C2_M_Restart^0,c
  6932   0016F2                     l1151:
  6933   0016F2  0012               	return		;funcret
  6934   0016F4                     __end_of_I2C2_M_Restart:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _I2C2_M_ReadByte *****************
  6938 ;; Defined at:
  6939 ;;		line 370 in file "my_i2c_pic18.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  ACKflag         1    wreg     unsigned char 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  ACKflag         1    6[COMRAM] unsigned char 
  6944 ;;  t               2    7[COMRAM] short 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  2    4[COMRAM] short 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;Total ram usage:        5 bytes
  6959 ;; Hardware stack levels used: 1
  6960 ;; Hardware stack levels required when called: 3
  6961 ;; This function calls:
  6962 ;;		Nothing
  6963 ;; This function is called by:
  6964 ;;		_I2C_Mem_Read
  6965 ;;		_I2C2_M_Read
  6966 ;;		_I2C2_M_Read_Single
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text45
  6971   000FE0                     __ptext45:
  6972                           	callstack 0
  6973   000FE0                     _I2C2_M_ReadByte:
  6974                           	callstack 25
  6975                           
  6976                           ;incstack = 0
  6977                           ;I2C2_M_ReadByte@ACKflag stored from wreg
  6978   000FE0  6E07               	movwf	I2C2_M_ReadByte@ACKflag^0,c
  6979   000FE2                     
  6980                           ;my_i2c_pic18.c: 370: int16_t I2C2_M_ReadByte(uint8_t ACKflag);my_i2c_pic18.c: 371: {;my
      +                          _i2c_pic18.c: 372:     int16_t t;;my_i2c_pic18.c: 374:     if(ACKflag == 1)
  6981   000FE2  0407               	decf	I2C2_M_ReadByte@ACKflag^0,w,c
  6982   000FE4  A4D8               	btfss	status,2,c
  6983   000FE6  EFF7  F007         	goto	u4991
  6984   000FEA  EFF9  F007         	goto	u4990
  6985   000FEE                     u4991:
  6986   000FEE  EFFC  F007         	goto	l1118
  6987   000FF2                     u4990:
  6988   000FF2                     
  6989                           ;my_i2c_pic18.c: 375:     {;my_i2c_pic18.c: 376:         SSP1CON2bits.ACKDT1 = 1;
  6990   000FF2  8AC5               	bsf	197,5,c	;volatile
  6991                           
  6992                           ;my_i2c_pic18.c: 377:     } else
  6993   000FF4  EFFD  F007         	goto	l1119
  6994   000FF8                     l1118:
  6995                           
  6996                           ;my_i2c_pic18.c: 378:     {;my_i2c_pic18.c: 379:         SSP1CON2bits.ACKDT1 = 0;
  6997   000FF8  9AC5               	bcf	197,5,c	;volatile
  6998   000FFA                     l1119:
  6999                           
  7000                           ;my_i2c_pic18.c: 382:     SSP1CON2bits.RCEN1 = 1;
  7001   000FFA  86C5               	bsf	197,3,c	;volatile
  7002   000FFC                     
  7003                           ;my_i2c_pic18.c: 383:     t = 0;
  7004   000FFC  0E00               	movlw	0
  7005   000FFE  6E09               	movwf	(I2C2_M_ReadByte@t+1)^0,c
  7006   001000  0E00               	movlw	0
  7007   001002  6E08               	movwf	I2C2_M_ReadByte@t^0,c
  7008                           
  7009                           ;my_i2c_pic18.c: 385:     while(!SSP1STATbits.BF1)
  7010   001004  EF1A  F008         	goto	l1120
  7011   001008                     l7265:
  7012                           
  7013                           ;my_i2c_pic18.c: 386:     {;my_i2c_pic18.c: 387:         t++;
  7014   001008  4A08               	infsnz	I2C2_M_ReadByte@t^0,f,c
  7015   00100A  2A09               	incf	(I2C2_M_ReadByte@t+1)^0,f,c
  7016   00100C                     
  7017                           ;my_i2c_pic18.c: 388:         if(t > 8000)
  7018   00100C  BE09               	btfsc	(I2C2_M_ReadByte@t+1)^0,7,c
  7019   00100E  EF12  F008         	goto	u5001
  7020   001012  0E41               	movlw	65
  7021   001014  5C08               	subwf	I2C2_M_ReadByte@t^0,w,c
  7022   001016  0E1F               	movlw	31
  7023   001018  5809               	subwfb	(I2C2_M_ReadByte@t+1)^0,w,c
  7024   00101A  A0D8               	btfss	status,0,c
  7025   00101C  EF12  F008         	goto	u5001
  7026   001020  EF14  F008         	goto	u5000
  7027   001024                     u5001:
  7028   001024  EF1A  F008         	goto	l1120
  7029   001028                     u5000:
  7030   001028                     
  7031                           ;my_i2c_pic18.c: 389:         {;my_i2c_pic18.c: 391:             return -10;
  7032   001028  0EFF               	movlw	255
  7033   00102A  6E06               	movwf	(?_I2C2_M_ReadByte+1)^0,c
  7034   00102C  0EF6               	movlw	246
  7035   00102E  6E05               	movwf	?_I2C2_M_ReadByte^0,c
  7036   001030  EF56  F008         	goto	l1123
  7037   001034                     l1120:
  7038                           
  7039                           ;my_i2c_pic18.c: 385:     while(!SSP1STATbits.BF1)
  7040   001034  A0C7               	btfss	199,0,c	;volatile
  7041   001036  EF1F  F008         	goto	u5011
  7042   00103A  EF21  F008         	goto	u5010
  7043   00103E                     u5011:
  7044   00103E  EF04  F008         	goto	l7265
  7045   001042                     u5010:
  7046   001042                     
  7047                           ;my_i2c_pic18.c: 398:     SSP1CON2bits.ACKEN1 = 1;
  7048   001042  88C5               	bsf	197,4,c	;volatile
  7049   001044                     
  7050                           ;my_i2c_pic18.c: 399:     t = 0;
  7051   001044  0E00               	movlw	0
  7052   001046  6E09               	movwf	(I2C2_M_ReadByte@t+1)^0,c
  7053   001048  0E00               	movlw	0
  7054   00104A  6E08               	movwf	I2C2_M_ReadByte@t^0,c
  7055                           
  7056                           ;my_i2c_pic18.c: 400:     while(SSP1CON2bits.ACKEN1)
  7057   00104C  EF3E  F008         	goto	l1125
  7058   001050                     l7275:
  7059                           
  7060                           ;my_i2c_pic18.c: 401:     {;my_i2c_pic18.c: 402:         t++;
  7061   001050  4A08               	infsnz	I2C2_M_ReadByte@t^0,f,c
  7062   001052  2A09               	incf	(I2C2_M_ReadByte@t+1)^0,f,c
  7063   001054                     
  7064                           ;my_i2c_pic18.c: 403:         if(t > 1000)
  7065   001054  BE09               	btfsc	(I2C2_M_ReadByte@t+1)^0,7,c
  7066   001056  EF36  F008         	goto	u5021
  7067   00105A  0EE9               	movlw	233
  7068   00105C  5C08               	subwf	I2C2_M_ReadByte@t^0,w,c
  7069   00105E  0E03               	movlw	3
  7070   001060  5809               	subwfb	(I2C2_M_ReadByte@t+1)^0,w,c
  7071   001062  A0D8               	btfss	status,0,c
  7072   001064  EF36  F008         	goto	u5021
  7073   001068  EF38  F008         	goto	u5020
  7074   00106C                     u5021:
  7075   00106C  EF3E  F008         	goto	l1125
  7076   001070                     u5020:
  7077   001070                     
  7078                           ;my_i2c_pic18.c: 404:         {;my_i2c_pic18.c: 406:             return -2;
  7079   001070  0EFF               	movlw	255
  7080   001072  6E06               	movwf	(?_I2C2_M_ReadByte+1)^0,c
  7081   001074  0EFE               	movlw	254
  7082   001076  6E05               	movwf	?_I2C2_M_ReadByte^0,c
  7083   001078  EF56  F008         	goto	l1123
  7084   00107C                     l1125:
  7085                           
  7086                           ;my_i2c_pic18.c: 400:     while(SSP1CON2bits.ACKEN1)
  7087   00107C  B8C5               	btfsc	197,4,c	;volatile
  7088   00107E  EF43  F008         	goto	u5031
  7089   001082  EF45  F008         	goto	u5030
  7090   001086                     u5031:
  7091   001086  EF28  F008         	goto	l7275
  7092   00108A                     u5030:
  7093   00108A                     
  7094                           ;my_i2c_pic18.c: 409:     if(SSP1CON1bits.SSPOV1)
  7095   00108A  ACC6               	btfss	198,6,c	;volatile
  7096   00108C  EF4A  F008         	goto	u5041
  7097   001090  EF4C  F008         	goto	u5040
  7098   001094                     u5041:
  7099   001094  EF53  F008         	goto	l1129
  7100   001098                     u5040:
  7101   001098                     
  7102                           ;my_i2c_pic18.c: 410:     {;my_i2c_pic18.c: 411:         SSP1CON1bits.SSPOV1 = 0;
  7103   001098  9CC6               	bcf	198,6,c	;volatile
  7104   00109A                     
  7105                           ;my_i2c_pic18.c: 412:         return -9;
  7106   00109A  0EFF               	movlw	255
  7107   00109C  6E06               	movwf	(?_I2C2_M_ReadByte+1)^0,c
  7108   00109E  0EF7               	movlw	247
  7109   0010A0  6E05               	movwf	?_I2C2_M_ReadByte^0,c
  7110   0010A2  EF56  F008         	goto	l1123
  7111   0010A6                     l1129:
  7112                           
  7113                           ;my_i2c_pic18.c: 415:     return SSP1BUF;
  7114   0010A6  CFC9 F005          	movff	4041,?_I2C2_M_ReadByte	;volatile
  7115   0010AA  6A06               	clrf	(?_I2C2_M_ReadByte+1)^0,c
  7116   0010AC                     l1123:
  7117   0010AC  0012               	return		;funcret
  7118   0010AE                     __end_of_I2C2_M_ReadByte:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _FsScape_check_index_crc *****************
  7122 ;; Defined at:
  7123 ;;		line 173 in file "fsscape.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  crc_value       4   32[COMRAM] unsigned long 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  _address        4   36[COMRAM] unsigned char [4]
  7128 ;;  crc_computed    4   40[COMRAM] volatile unsigned long 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  4   32[COMRAM] unsigned long 
  7131 ;; Registers used:
  7132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;Total ram usage:       12 bytes
  7143 ;; Hardware stack levels used: 1
  7144 ;; Hardware stack levels required when called: 5
  7145 ;; This function calls:
  7146 ;;		_calculate_crc32_buffer
  7147 ;; This function is called by:
  7148 ;;		_main
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text46
  7153   00193A                     __ptext46:
  7154                           	callstack 0
  7155   00193A                     _FsScape_check_index_crc:
  7156                           	callstack 25
  7157   00193A                     
  7158                           ;fsscape.c: 173: uint32_t FsScape_check_index_crc(uint32_t crc_value);fsscape.c: 174: {;
      +                          fsscape.c: 175:     uint8_t _address[4];;fsscape.c: 176:     volatile uint32_t crc_compu
      +                          ted;;fsscape.c: 178:     _address[3] = (uint8_t)(crc_value);
  7159   00193A  C021  F028         	movff	FsScape_check_index_crc@crc_value,FsScape_check_index_crc@_address+3
  7160                           
  7161                           ;fsscape.c: 179:     _address[2] = (uint8_t)(crc_value >> 8);
  7162   00193E  C022  F027         	movff	FsScape_check_index_crc@crc_value+1,FsScape_check_index_crc@_address+2
  7163                           
  7164                           ;fsscape.c: 180:     _address[1] = (uint8_t)(crc_value >> 16);
  7165   001942  C023  F026         	movff	FsScape_check_index_crc@crc_value+2,FsScape_check_index_crc@_address+1
  7166                           
  7167                           ;fsscape.c: 181:     _address[0] = (uint8_t)(crc_value >> 24);
  7168   001946  C024  F025         	movff	FsScape_check_index_crc@crc_value+3,FsScape_check_index_crc@_address
  7169   00194A                     
  7170                           ;fsscape.c: 183:     crc_computed = calculate_crc32_buffer(_address, 4);
  7171   00194A  0E25               	movlw	low FsScape_check_index_crc@_address
  7172   00194C  6E18               	movwf	calculate_crc32_buffer@buffer^0,c
  7173   00194E  0E00               	movlw	high FsScape_check_index_crc@_address
  7174   001950  6E19               	movwf	(calculate_crc32_buffer@buffer+1)^0,c
  7175   001952  0E04               	movlw	4
  7176   001954  6E1A               	movwf	calculate_crc32_buffer@size^0,c
  7177   001956  EC7A  F00B         	call	_calculate_crc32_buffer	;wreg free
  7178   00195A  C018  F029         	movff	?_calculate_crc32_buffer,FsScape_check_index_crc@crc_computed	;volatile
  7179   00195E  C019  F02A         	movff	?_calculate_crc32_buffer+1,FsScape_check_index_crc@crc_computed+1	;volatile
  7180   001962  C01A  F02B         	movff	?_calculate_crc32_buffer+2,FsScape_check_index_crc@crc_computed+2	;volatile
  7181   001966  C01B  F02C         	movff	?_calculate_crc32_buffer+3,FsScape_check_index_crc@crc_computed+3	;volatile
  7182   00196A                     
  7183                           ;fsscape.c: 185:     return crc_computed;
  7184   00196A  C029  F021         	movff	FsScape_check_index_crc@crc_computed,?_FsScape_check_index_crc	;volatile
  7185   00196E  C02A  F022         	movff	FsScape_check_index_crc@crc_computed+1,?_FsScape_check_index_crc+1	;volatile
  7186   001972  C02B  F023         	movff	FsScape_check_index_crc@crc_computed+2,?_FsScape_check_index_crc+2	;volatile
  7187   001976  C02C  F024         	movff	FsScape_check_index_crc@crc_computed+3,?_FsScape_check_index_crc+3	;volatile
  7188   00197A  0012               	return		;funcret
  7189   00197C                     __end_of_FsScape_check_index_crc:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _calculate_crc32_buffer *****************
  7193 ;; Defined at:
  7194 ;;		line 64 in file "crc32.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  buffer          2   23[COMRAM] PTR const unsigned char 
  7197 ;;		 -> FsScape_check_index_crc@_address(4), 
  7198 ;;  size            1   25[COMRAM] unsigned char 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  i               1   31[COMRAM] unsigned char 
  7201 ;;  crc             4   27[COMRAM] unsigned long 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  4   23[COMRAM] unsigned long 
  7204 ;; Registers used:
  7205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7215 ;;Total ram usage:        9 bytes
  7216 ;; Hardware stack levels used: 1
  7217 ;; Hardware stack levels required when called: 4
  7218 ;; This function calls:
  7219 ;;		_calculate_crc32
  7220 ;; This function is called by:
  7221 ;;		_FsScape_check_index_crc
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text47
  7226   0016F4                     __ptext47:
  7227                           	callstack 0
  7228   0016F4                     _calculate_crc32_buffer:
  7229                           	callstack 25
  7230   0016F4                     
  7231                           ;crc32.c: 64: uint32_t calculate_crc32_buffer(const uint8_t *buffer, uint8_t size);crc32
      +                          .c: 65: {;crc32.c: 66:     uint32_t crc = 0xFFFFFFFF;
  7232   0016F4  681C               	setf	calculate_crc32_buffer@crc^0,c
  7233   0016F6  681D               	setf	(calculate_crc32_buffer@crc+1)^0,c
  7234   0016F8  681E               	setf	(calculate_crc32_buffer@crc+2)^0,c
  7235   0016FA  681F               	setf	(calculate_crc32_buffer@crc+3)^0,c
  7236   0016FC                     
  7237                           ;crc32.c: 68:     for(uint8_t i = 0; i < size; ++i)
  7238   0016FC  0E00               	movlw	0
  7239   0016FE  6E20               	movwf	calculate_crc32_buffer@i^0,c
  7240   001700  EF9D  F00B         	goto	l7677
  7241   001704                     l7673:
  7242                           
  7243                           ;crc32.c: 69:     {;crc32.c: 70:         crc = calculate_crc32(crc, buffer[i]);
  7244   001704  C01C  F005         	movff	calculate_crc32_buffer@crc,calculate_crc32@state
  7245   001708  C01D  F006         	movff	calculate_crc32_buffer@crc+1,calculate_crc32@state+1
  7246   00170C  C01E  F007         	movff	calculate_crc32_buffer@crc+2,calculate_crc32@state+2
  7247   001710  C01F  F008         	movff	calculate_crc32_buffer@crc+3,calculate_crc32@state+3
  7248   001714  5020               	movf	calculate_crc32_buffer@i^0,w,c
  7249   001716  2418               	addwf	calculate_crc32_buffer@buffer^0,w,c
  7250   001718  6ED9               	movwf	fsr2l,c
  7251   00171A  0E00               	movlw	0
  7252   00171C  2019               	addwfc	(calculate_crc32_buffer@buffer+1)^0,w,c
  7253   00171E  6EDA               	movwf	fsr2h,c
  7254   001720  50DF               	movf	indf2,w,c
  7255   001722  6E09               	movwf	calculate_crc32@data^0,c
  7256   001724  EC7E  F009         	call	_calculate_crc32	;wreg free
  7257   001728  C005  F01C         	movff	?_calculate_crc32,calculate_crc32_buffer@crc
  7258   00172C  C006  F01D         	movff	?_calculate_crc32+1,calculate_crc32_buffer@crc+1
  7259   001730  C007  F01E         	movff	?_calculate_crc32+2,calculate_crc32_buffer@crc+2
  7260   001734  C008  F01F         	movff	?_calculate_crc32+3,calculate_crc32_buffer@crc+3
  7261   001738                     
  7262                           ;crc32.c: 71:     }
  7263   001738  2A20               	incf	calculate_crc32_buffer@i^0,f,c
  7264   00173A                     l7677:
  7265   00173A  501A               	movf	calculate_crc32_buffer@size^0,w,c
  7266   00173C  5C20               	subwf	calculate_crc32_buffer@i^0,w,c
  7267   00173E  A0D8               	btfss	status,0,c
  7268   001740  EFA4  F00B         	goto	u5331
  7269   001744  EFA6  F00B         	goto	u5330
  7270   001748                     u5331:
  7271   001748  EF82  F00B         	goto	l7673
  7272   00174C                     u5330:
  7273   00174C                     
  7274                           ;crc32.c: 73:     return crc ^ 0xFFFFFFFF;
  7275   00174C  1C1C               	comf	calculate_crc32_buffer@crc^0,w,c
  7276   00174E  6E18               	movwf	?_calculate_crc32_buffer^0,c
  7277   001750  1C1D               	comf	(calculate_crc32_buffer@crc+1)^0,w,c
  7278   001752  6E19               	movwf	(?_calculate_crc32_buffer+1)^0,c
  7279   001754  1C1E               	comf	(calculate_crc32_buffer@crc+2)^0,w,c
  7280   001756  6E1A               	movwf	(?_calculate_crc32_buffer+2)^0,c
  7281   001758  1C1F               	comf	(calculate_crc32_buffer@crc+3)^0,w,c
  7282   00175A  6E1B               	movwf	(?_calculate_crc32_buffer+3)^0,c
  7283   00175C  0012               	return		;funcret
  7284   00175E                     __end_of_calculate_crc32_buffer:
  7285                           	callstack 0
  7286                           
  7287 ;; *************** function _calculate_crc32 *****************
  7288 ;; Defined at:
  7289 ;;		line 46 in file "crc32.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  state           4    4[COMRAM] unsigned long 
  7292 ;;  data            1    8[COMRAM] unsigned char 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  b               4   13[COMRAM] unsigned long 
  7295 ;;  crc             4   19[COMRAM] unsigned long 
  7296 ;;  j               2   17[COMRAM] unsigned short 
  7297 ;;  i               2    0        unsigned short 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  4    4[COMRAM] unsigned long 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7307 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;Total ram usage:       19 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; Hardware stack levels required when called: 3
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_calculate_crc32_buffer
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text48
  7322   0012FC                     __ptext48:
  7323                           	callstack 0
  7324   0012FC                     _calculate_crc32:
  7325                           	callstack 25
  7326   0012FC                     
  7327                           ;crc32.c: 46: uint32_t calculate_crc32(uint32_t state, uint8_t data);crc32.c: 47: {;crc3
      +                          2.c: 48:     uint32_t crc = state;
  7328   0012FC  C005  F014         	movff	calculate_crc32@state,calculate_crc32@crc
  7329   001300  C006  F015         	movff	calculate_crc32@state+1,calculate_crc32@crc+1
  7330   001304  C007  F016         	movff	calculate_crc32@state+2,calculate_crc32@crc+2
  7331   001308  C008  F017         	movff	calculate_crc32@state+3,calculate_crc32@crc+3
  7332   00130C  0E00               	movlw	0
  7333   00130E  6E13               	movwf	(calculate_crc32@j+1)^0,c
  7334   001310  0E00               	movlw	0
  7335   001312  6E12               	movwf	calculate_crc32@j^0,c
  7336                           
  7337                           ;crc32.c: 51:     for(j = 0; j < 8; j++)
  7338   001314  0E00               	movlw	0
  7339   001316  6E13               	movwf	(calculate_crc32@j+1)^0,c
  7340   001318  0E00               	movlw	0
  7341   00131A  6E12               	movwf	calculate_crc32@j^0,c
  7342   00131C                     l7297:
  7343                           
  7344                           ;crc32.c: 52:     {;crc32.c: 53:         uint32_t b = (data^crc)&1;
  7345   00131C  5014               	movf	calculate_crc32@crc^0,w,c
  7346   00131E  1809               	xorwf	calculate_crc32@data^0,w,c
  7347   001320  6E0A               	movwf	??_calculate_crc32^0,c
  7348   001322  5015               	movf	(calculate_crc32@crc+1)^0,w,c
  7349   001324  6E0B               	movwf	(??_calculate_crc32+1)^0,c
  7350   001326  5016               	movf	(calculate_crc32@crc+2)^0,w,c
  7351   001328  6E0C               	movwf	(??_calculate_crc32+2)^0,c
  7352   00132A  5017               	movf	(calculate_crc32@crc+3)^0,w,c
  7353   00132C  6E0D               	movwf	(??_calculate_crc32+3)^0,c
  7354   00132E  0E01               	movlw	1
  7355   001330  140A               	andwf	??_calculate_crc32^0,w,c
  7356   001332  6E0E               	movwf	calculate_crc32@b^0,c
  7357   001334  0E00               	movlw	0
  7358   001336  140B               	andwf	(??_calculate_crc32+1)^0,w,c
  7359   001338  6E0F               	movwf	(calculate_crc32@b+1)^0,c
  7360   00133A  0E00               	movlw	0
  7361   00133C  140C               	andwf	(??_calculate_crc32+2)^0,w,c
  7362   00133E  6E10               	movwf	(calculate_crc32@b+2)^0,c
  7363   001340  0E00               	movlw	0
  7364   001342  140D               	andwf	(??_calculate_crc32+3)^0,w,c
  7365   001344  6E11               	movwf	(calculate_crc32@b+3)^0,c
  7366   001346                     
  7367                           ;crc32.c: 54:         crc >>= 1;
  7368   001346  90D8               	bcf	status,0,c
  7369   001348  3217               	rrcf	(calculate_crc32@crc+3)^0,f,c
  7370   00134A  3216               	rrcf	(calculate_crc32@crc+2)^0,f,c
  7371   00134C  3215               	rrcf	(calculate_crc32@crc+1)^0,f,c
  7372   00134E  3214               	rrcf	calculate_crc32@crc^0,f,c
  7373   001350                     
  7374                           ;crc32.c: 55:         if(b) crc = crc^0xEDB88320;
  7375   001350  500E               	movf	calculate_crc32@b^0,w,c
  7376   001352  100F               	iorwf	(calculate_crc32@b+1)^0,w,c
  7377   001354  1010               	iorwf	(calculate_crc32@b+2)^0,w,c
  7378   001356  1011               	iorwf	(calculate_crc32@b+3)^0,w,c
  7379   001358  B4D8               	btfsc	status,2,c
  7380   00135A  EFB1  F009         	goto	u5051
  7381   00135E  EFB3  F009         	goto	u5050
  7382   001362                     u5051:
  7383   001362  EFBF  F009         	goto	l1363
  7384   001366                     u5050:
  7385   001366  0E20               	movlw	32
  7386   001368  1814               	xorwf	calculate_crc32@crc^0,w,c
  7387   00136A  6E14               	movwf	calculate_crc32@crc^0,c
  7388   00136C  0E83               	movlw	131
  7389   00136E  1815               	xorwf	(calculate_crc32@crc+1)^0,w,c
  7390   001370  6E15               	movwf	(calculate_crc32@crc+1)^0,c
  7391   001372  0EB8               	movlw	184
  7392   001374  1816               	xorwf	(calculate_crc32@crc+2)^0,w,c
  7393   001376  6E16               	movwf	(calculate_crc32@crc+2)^0,c
  7394   001378  0EED               	movlw	237
  7395   00137A  1817               	xorwf	(calculate_crc32@crc+3)^0,w,c
  7396   00137C  6E17               	movwf	(calculate_crc32@crc+3)^0,c
  7397   00137E                     l1363:
  7398                           
  7399                           ;crc32.c: 56:         data >>= 1;
  7400   00137E  90D8               	bcf	status,0,c
  7401   001380  3209               	rrcf	calculate_crc32@data^0,f,c
  7402   001382                     
  7403                           ;crc32.c: 57:     }
  7404   001382  4A12               	infsnz	calculate_crc32@j^0,f,c
  7405   001384  2A13               	incf	(calculate_crc32@j+1)^0,f,c
  7406   001386  5013               	movf	(calculate_crc32@j+1)^0,w,c
  7407   001388  E109               	bnz	u5060
  7408   00138A  0E08               	movlw	8
  7409   00138C  5C12               	subwf	calculate_crc32@j^0,w,c
  7410   00138E  A0D8               	btfss	status,0,c
  7411   001390  EFCC  F009         	goto	u5061
  7412   001394  EFCE  F009         	goto	u5060
  7413   001398                     u5061:
  7414   001398  EF8E  F009         	goto	l7297
  7415   00139C                     u5060:
  7416   00139C                     
  7417                           ;crc32.c: 59:     return crc;
  7418   00139C  C014  F005         	movff	calculate_crc32@crc,?_calculate_crc32
  7419   0013A0  C015  F006         	movff	calculate_crc32@crc+1,?_calculate_crc32+1
  7420   0013A4  C016  F007         	movff	calculate_crc32@crc+2,?_calculate_crc32+2
  7421   0013A8  C017  F008         	movff	calculate_crc32@crc+3,?_calculate_crc32+3
  7422   0013AC  0012               	return		;funcret
  7423   0013AE                     __end_of_calculate_crc32:
  7424                           	callstack 0
  7425                           
  7426 ;; *************** function _INTERRUPT_InterruptManager *****************
  7427 ;; Defined at:
  7428 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;		None
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;Total ram usage:        2 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 2
  7449 ;; This function calls:
  7450 ;;		_TMR1_ISR
  7451 ;; This function is called by:
  7452 ;;		Interrupt level 2
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	intcode
  7457   000008                     __pintcode:
  7458                           	callstack 0
  7459   000008                     _INTERRUPT_InterruptManager:
  7460                           	callstack 19
  7461                           
  7462                           ;incstack = 0
  7463   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7464   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  7465   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7466   000012                     
  7467                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  7468   000012  ACF2               	btfss	242,6,c	;volatile
  7469   000014  EF0E  F000         	goto	i2u362_41
  7470   000018  EF10  F000         	goto	i2u362_40
  7471   00001C                     i2u362_41:
  7472   00001C  EF20  F000         	goto	i2l271
  7473   000020                     i2u362_40:
  7474   000020                     
  7475                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  7476   000020  A09D               	btfss	157,0,c	;volatile
  7477   000022  EF15  F000         	goto	i2u363_41
  7478   000026  EF17  F000         	goto	i2u363_40
  7479   00002A                     i2u363_41:
  7480   00002A  EF20  F000         	goto	i2l271
  7481   00002E                     i2u363_40:
  7482   00002E  A09E               	btfss	158,0,c	;volatile
  7483   000030  EF1C  F000         	goto	i2u364_41
  7484   000034  EF1E  F000         	goto	i2u364_40
  7485   000038                     i2u364_41:
  7486   000038  EF20  F000         	goto	i2l271
  7487   00003C                     i2u364_40:
  7488   00003C                     
  7489                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  7490   00003C  EC1B  F00D         	call	_TMR1_ISR	;wreg free
  7491   000040                     i2l271:
  7492   000040  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7493   000044  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7494   000048  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7495   00004A  0011               	retfie		f
  7496   00004C                     __end_of_INTERRUPT_InterruptManager:
  7497                           	callstack 0
  7498                           
  7499 ;; *************** function _TMR1_ISR *****************
  7500 ;; Defined at:
  7501 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;Total ram usage:        0 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 1
  7522 ;; This function calls:
  7523 ;;		NULL
  7524 ;;		_TMR1_DefaultInterruptHandler
  7525 ;;		_TMR1_WriteTimer
  7526 ;;		_increment_interrupt
  7527 ;; This function is called by:
  7528 ;;		_INTERRUPT_InterruptManager
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text50
  7533   001A36                     __ptext50:
  7534                           	callstack 0
  7535   001A36                     _TMR1_ISR:
  7536                           	callstack 19
  7537   001A36                     
  7538                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  7539   001A36  909E               	bcf	158,0,c	;volatile
  7540   001A38                     
  7541                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  7542   001A38  C058  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  7543   001A3C  C059  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  7544   001A40  EC64  F00D         	call	_TMR1_WriteTimer	;wreg free
  7545   001A44                     
  7546                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  7547   001A44  0100               	movlb	0	; () banked
  7548   001A46  51E3               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7549   001A48  11E4               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7550   001A4A  B4D8               	btfsc	status,2,c
  7551   001A4C  EF2A  F00D         	goto	i2u328_41
  7552   001A50  EF2C  F00D         	goto	i2u328_40
  7553   001A54                     i2u328_41:
  7554   001A54  EF38  F00D         	goto	i2l388
  7555   001A58                     i2u328_40:
  7556   001A58                     
  7557                           ; BSR set to: 0
  7558                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  7559   001A58  D802               	call	i2u329_48
  7560   001A5A  EF38  F00D         	goto	i2u329_49
  7561   001A5E                     i2u329_48:
  7562   001A5E  0005               	push	
  7563   001A60  6EFA               	movwf	pclath,c
  7564   001A62  51E3               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7565   001A64  6EFD               	movwf	tosl,c
  7566   001A66  51E4               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7567   001A68  6EFE               	movwf	tosh,c
  7568   001A6A  6AFF               	clrf	tosu,c
  7569   001A6C  50FA               	movf	pclath,w,c
  7570   001A6E  0012               	return		;indir
  7571   001A70                     i2u329_49:
  7572   001A70                     i2l388:
  7573   001A70  0012               	return		;funcret
  7574   001A72                     __end_of_TMR1_ISR:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7578 ;; Defined at:
  7579 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		None
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_TMR1_Initialize
  7603 ;;		_TMR1_ISR
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text51
  7608   001C08                     __ptext51:
  7609                           	callstack 0
  7610   001C08                     _TMR1_DefaultInterruptHandler:
  7611                           	callstack 19
  7612   001C08  0012               	return		;funcret
  7613   001C0A                     __end_of_TMR1_DefaultInterruptHandler:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function _increment_interrupt *****************
  7617 ;; Defined at:
  7618 ;;		line 57 in file "millis.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;;		_TMR1_ISR
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text52
  7647   001B96                     __ptext52:
  7648                           	callstack 0
  7649   001B96                     _increment_interrupt:
  7650                           	callstack 19
  7651   001B96                     
  7652                           ;millis.c: 59:     _millis++;
  7653   001B96  0E01               	movlw	1
  7654   001B98  0100               	movlb	0	; () banked
  7655   001B9A  278E               	addwf	__millis& (0+255),f,b	;volatile
  7656   001B9C  0E00               	movlw	0
  7657   001B9E  238F               	addwfc	(__millis+1)& (0+255),f,b	;volatile
  7658   001BA0  2390               	addwfc	(__millis+2)& (0+255),f,b	;volatile
  7659   001BA2  2391               	addwfc	(__millis+3)& (0+255),f,b	;volatile
  7660   001BA4                     
  7661                           ; BSR set to: 0
  7662   001BA4  0012               	return		;funcret
  7663   001BA6                     __end_of_increment_interrupt:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function _TMR1_WriteTimer *****************
  7667 ;; Defined at:
  7668 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  timerVal        2    0[COMRAM] unsigned short 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      void 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;Total ram usage:        2 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_TMR1_ISR
  7692 ;;		_TMR1_Reload
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text53
  7697   001AC8                     __ptext53:
  7698                           	callstack 0
  7699   001AC8                     _TMR1_WriteTimer:
  7700                           	callstack 19
  7701   001AC8                     
  7702                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  7703   001AC8  A4CD               	btfss	205,2,c	;volatile
  7704   001ACA  EF69  F00D         	goto	i2u299_41
  7705   001ACE  EF6B  F00D         	goto	i2u299_40
  7706   001AD2                     i2u299_41:
  7707   001AD2  EF73  F00D         	goto	i2l5153
  7708   001AD6                     i2u299_40:
  7709   001AD6                     
  7710                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  7711   001AD6  90CD               	bcf	205,0,c	;volatile
  7712   001AD8                     
  7713                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  7714   001AD8  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7715   001ADA  6ECF               	movwf	207,c	;volatile
  7716   001ADC                     
  7717                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  7718   001ADC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7719   001AE0                     
  7720                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  7721   001AE0  80CD               	bsf	205,0,c	;volatile
  7722                           
  7723                           ;mcc_generated_files/tmr1.c: 134:     }
  7724   001AE2  EF77  F00D         	goto	i2l375
  7725   001AE6                     i2l5153:
  7726                           
  7727                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7728   001AE6  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7729   001AE8  6ECF               	movwf	207,c	;volatile
  7730   001AEA                     
  7731                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  7732   001AEA  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7733   001AEE                     i2l375:
  7734   001AEE  0012               	return		;funcret
  7735   001AF0                     __end_of_TMR1_WriteTimer:
  7736                           	callstack 0
  7737                           
  7738                           	psect	text54
  7739   000000                     __ptext54:
  7740                           	callstack 0
  7741   000000                     
  7742                           	psect	rparam
  7743   000000                     
  7744                           	psect	temp
  7745   00005B                     btemp:
  7746                           	callstack 0
  7747   00005B                     	ds	1
  7748   000000                     int$flags	set	btemp
  7749   000000                     wtemp8	set	btemp+1
  7750   000000                     ttemp5	set	btemp+1
  7751   000000                     ttemp6	set	btemp+4
  7752   000000                     ttemp7	set	btemp+8
  7753                           
  7754                           	psect	idloc
  7755                           
  7756                           ;Config register IDLOC0 @ 0x200000
  7757                           ;	unspecified, using default values
  7758   200000                     	org	2097152
  7759   200000  FF                 	db	255
  7760                           
  7761                           ;Config register IDLOC1 @ 0x200001
  7762                           ;	unspecified, using default values
  7763   200001                     	org	2097153
  7764   200001  FF                 	db	255
  7765                           
  7766                           ;Config register IDLOC2 @ 0x200002
  7767                           ;	unspecified, using default values
  7768   200002                     	org	2097154
  7769   200002  FF                 	db	255
  7770                           
  7771                           ;Config register IDLOC3 @ 0x200003
  7772                           ;	unspecified, using default values
  7773   200003                     	org	2097155
  7774   200003  FF                 	db	255
  7775                           
  7776                           ;Config register IDLOC4 @ 0x200004
  7777                           ;	unspecified, using default values
  7778   200004                     	org	2097156
  7779   200004  FF                 	db	255
  7780                           
  7781                           ;Config register IDLOC5 @ 0x200005
  7782                           ;	unspecified, using default values
  7783   200005                     	org	2097157
  7784   200005  FF                 	db	255
  7785                           
  7786                           ;Config register IDLOC6 @ 0x200006
  7787                           ;	unspecified, using default values
  7788   200006                     	org	2097158
  7789   200006  FF                 	db	255
  7790                           
  7791                           ;Config register IDLOC7 @ 0x200007
  7792                           ;	unspecified, using default values
  7793   200007                     	org	2097159
  7794   200007  FF                 	db	255
  7795                           
  7796                           	psect	config
  7797                           
  7798                           ; Padding undefined space
  7799   300000                     	org	3145728
  7800   300000  FF                 	db	255
  7801                           
  7802                           ;Config register CONFIG1H @ 0x300001
  7803                           ;	Oscillator Selection bits
  7804                           ;	FOSC = INTIO67, Internal oscillator block
  7805                           ;	4X PLL Enable
  7806                           ;	PLLCFG = OFF, Oscillator used directly
  7807                           ;	Primary clock enable bit
  7808                           ;	PRICLKEN = ON, Primary clock enabled
  7809                           ;	Fail-Safe Clock Monitor Enable bit
  7810                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7811                           ;	Internal/External Oscillator Switchover bit
  7812                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7813   300001                     	org	3145729
  7814   300001  28                 	db	40
  7815                           
  7816                           ;Config register CONFIG2L @ 0x300002
  7817                           ;	Power-up Timer Enable bit
  7818                           ;	PWRTEN = OFF, Power up timer disabled
  7819                           ;	Brown-out Reset Enable bits
  7820                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7821                           ;	Brown Out Reset Voltage bits
  7822                           ;	BORV = 190, VBOR set to 1.90 V nominal
  7823   300002                     	org	3145730
  7824   300002  1F                 	db	31
  7825                           
  7826                           ;Config register CONFIG2H @ 0x300003
  7827                           ;	Watchdog Timer Enable bits
  7828                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7829                           ;	Watchdog Timer Postscale Select bits
  7830                           ;	WDTPS = 32768, 1:32768
  7831   300003                     	org	3145731
  7832   300003  3C                 	db	60
  7833                           
  7834                           ; Padding undefined space
  7835   300004                     	org	3145732
  7836   300004  FF                 	db	255
  7837                           
  7838                           ;Config register CONFIG3H @ 0x300005
  7839                           ;	CCP2 MUX bit
  7840                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7841                           ;	PORTB A/D Enable bit
  7842                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7843                           ;	P3A/CCP3 Mux bit
  7844                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7845                           ;	HFINTOSC Fast Start-up
  7846                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7847                           ;	Timer3 Clock input mux bit
  7848                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7849                           ;	ECCP2 B output mux bit
  7850                           ;	P2BMX = PORTB5, P2B is on RB5
  7851                           ;	MCLR Pin Enable bit
  7852                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7853   300005                     	org	3145733
  7854   300005  BF                 	db	191
  7855                           
  7856                           ;Config register CONFIG4L @ 0x300006
  7857                           ;	Stack Full/Underflow Reset Enable bit
  7858                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7859                           ;	Single-Supply ICSP Enable bit
  7860                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7861                           ;	Extended Instruction Set Enable bit
  7862                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7863                           ;	Background Debug
  7864                           ;	DEBUG = OFF, Disabled
  7865   300006                     	org	3145734
  7866   300006  85                 	db	133
  7867                           
  7868                           ; Padding undefined space
  7869   300007                     	org	3145735
  7870   300007  FF                 	db	255
  7871                           
  7872                           ;Config register CONFIG5L @ 0x300008
  7873                           ;	Code Protection Block 0
  7874                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7875                           ;	Code Protection Block 1
  7876                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7877                           ;	Code Protection Block 2
  7878                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7879                           ;	Code Protection Block 3
  7880                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7881   300008                     	org	3145736
  7882   300008  0F                 	db	15
  7883                           
  7884                           ;Config register CONFIG5H @ 0x300009
  7885                           ;	Boot Block Code Protection bit
  7886                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7887                           ;	Data EEPROM Code Protection bit
  7888                           ;	CPD = OFF, Data EEPROM not code-protected
  7889   300009                     	org	3145737
  7890   300009  C0                 	db	192
  7891                           
  7892                           ;Config register CONFIG6L @ 0x30000A
  7893                           ;	Write Protection Block 0
  7894                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7895                           ;	Write Protection Block 1
  7896                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7897                           ;	Write Protection Block 2
  7898                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7899                           ;	Write Protection Block 3
  7900                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7901   30000A                     	org	3145738
  7902   30000A  0F                 	db	15
  7903                           
  7904                           ;Config register CONFIG6H @ 0x30000B
  7905                           ;	Configuration Register Write Protection bit
  7906                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7907                           ;	Boot Block Write Protection bit
  7908                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7909                           ;	Data EEPROM Write Protection bit
  7910                           ;	WRTD = OFF, Data EEPROM not write-protected
  7911   30000B                     	org	3145739
  7912   30000B  E0                 	db	224
  7913                           
  7914                           ;Config register CONFIG7L @ 0x30000C
  7915                           ;	Table Read Protection Block 0
  7916                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7917                           ;	Table Read Protection Block 1
  7918                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7919                           ;	Table Read Protection Block 2
  7920                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7921                           ;	Table Read Protection Block 3
  7922                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7923   30000C                     	org	3145740
  7924   30000C  0F                 	db	15
  7925                           
  7926                           ;Config register CONFIG7H @ 0x30000D
  7927                           ;	Boot Block Table Read Protection bit
  7928                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7929   30000D                     	org	3145741
  7930   30000D  40                 	db	64
  7931                           tosu	equ	0xFFF
  7932                           tosh	equ	0xFFE
  7933                           tosl	equ	0xFFD
  7934                           stkptr	equ	0xFFC
  7935                           pclatu	equ	0xFFB
  7936                           pclath	equ	0xFFA
  7937                           pcl	equ	0xFF9
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           prodh	equ	0xFF4
  7943                           prodl	equ	0xFF3
  7944                           indf0	equ	0xFEF
  7945                           postinc0	equ	0xFEE
  7946                           postdec0	equ	0xFED
  7947                           preinc0	equ	0xFEC
  7948                           plusw0	equ	0xFEB
  7949                           fsr0h	equ	0xFEA
  7950                           fsr0l	equ	0xFE9
  7951                           wreg	equ	0xFE8
  7952                           indf1	equ	0xFE7
  7953                           postinc1	equ	0xFE6
  7954                           postdec1	equ	0xFE5
  7955                           preinc1	equ	0xFE4
  7956                           plusw1	equ	0xFE3
  7957                           fsr1h	equ	0xFE2
  7958                           fsr1l	equ	0xFE1
  7959                           bsr	equ	0xFE0
  7960                           indf2	equ	0xFDF
  7961                           postinc2	equ	0xFDE
  7962                           postdec2	equ	0xFDD
  7963                           preinc2	equ	0xFDC
  7964                           plusw2	equ	0xFDB
  7965                           fsr2h	equ	0xFDA
  7966                           fsr2l	equ	0xFD9
  7967                           status	equ	0xFD8

Data Sizes:
    Strings     435
    Constant    43
    Data        11
    BSS         366
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     45     139
    BANK1           256    254     254
    BANK2           256      0      32
    BANK3           256      0     254
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C1_DO_TX$4024$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_RX$4030$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_TX_EMPTY$4036$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_DO_RX_EMPTY$4042$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1172$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    FsScape_CSbit	PTR unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FsScape_CS	PTR unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3460$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3460$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_15(CODE[26]), STR_14(CODE[28]), STR_13(CODE[21]), STR_12(CODE[29]), 
		 -> STR_11(CODE[24]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[29]), 
		 -> STR_7(CODE[42]), STR_6(CODE[34]), STR_5(CODE[44]), STR_4(CODE[41]), 
		 -> STR_3(CODE[41]), STR_2(CODE[24]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_15(CODE[26]), STR_14(CODE[28]), STR_13(CODE[21]), STR_12(CODE[29]), 
		 -> STR_11(CODE[24]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[29]), 
		 -> STR_7(CODE[42]), STR_6(CODE[34]), STR_5(CODE[44]), STR_4(CODE[41]), 
		 -> STR_3(CODE[41]), STR_2(CODE[24]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 44
		 -> STR_15(CODE[26]), STR_14(CODE[28]), STR_13(CODE[21]), STR_12(CODE[29]), 
		 -> STR_11(CODE[24]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[29]), 
		 -> STR_7(CODE[42]), STR_6(CODE[34]), STR_5(CODE[44]), STR_4(CODE[41]), 
		 -> STR_3(CODE[41]), STR_2(CODE[24]), STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S3499$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_15(CODE[26]), STR_14(CODE[28]), STR_13(CODE[21]), STR_12(CODE[29]), 
		 -> STR_11(CODE[24]), STR_10(CODE[34]), STR_9(CODE[34]), STR_8(CODE[29]), 
		 -> STR_7(CODE[42]), STR_6(CODE[34]), STR_5(CODE[44]), STR_4(CODE[41]), 
		 -> STR_3(CODE[41]), STR_2(CODE[24]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    calculate_crc32_buffer@buffer	PTR const unsigned char  size(2) Largest target is 4
		 -> FsScape_check_index_crc@_address(COMRAM[4]), 

    FsScape_get_index_crc_SRAM@crc	PTR unsigned long  size(2) Largest target is 4
		 -> main@check2(BANK0[4]), 

    FsScape_get_index_crc_SRAM@data	PTR volatile unsigned long  size(2) Largest target is 4
		 -> main@check2(BANK0[4]), 

    FsScape_get_index_SRAM@address	PTR unsigned long  size(2) Largest target is 4
		 -> main@adressme2(BANK0[4]), main@adressme(BANK0[4]), 

    FsScape_get_index_SRAM@data	PTR volatile unsigned long  size(2) Largest target is 4
		 -> main@adressme2(BANK0[4]), main@adressme(BANK0[4]), 

    I2C_Mem_Read@pData	PTR unsigned char  size(2) Largest target is 4
		 -> FsScape_get_index_crc_SRAM@_address(COMRAM[4]), FsScape_get_index_SRAM@_address(COMRAM[4]), 

    I2C_Mem_Write@pData	PTR unsigned char  size(2) Largest target is 4
		 -> FsScape_set_index_crc_SRAM@_address(COMRAM[4]), FsScape_set_index_SRAM@_address(COMRAM[4]), 

    S1172$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C1_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C1_Write1ByteRegister@data.data(COMRAM[3]), I2C1_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1172$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), 

    S1172$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E6150[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> increment_interrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> increment_interrupt(), NULL(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___almod
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _I2C_ModuleStart->___lldiv
    _I2C2_M_Poll->_I2C2_M_RecoverBus
    _I2C2_M_RecoverBus->_I2C2_M_BusReset
    _FsScape_set_index_crc_SRAM->_I2C_Mem_Write
    _FsScape_set_index_SRAM->_I2C_Mem_Write
    _I2C_Mem_Write->_I2C2_M_WriteByte
    _FsScape_get_index_crc_SRAM->_I2C_Mem_Read
    _FsScape_get_index_SRAM->_I2C_Mem_Read
    _I2C_Mem_Read->_I2C2_M_ReadByte
    _I2C_Mem_Read->_I2C2_M_WriteByte
    _FsScape_check_index_crc->_calculate_crc32_buffer
    _calculate_crc32_buffer->_calculate_crc32

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               311   311      0   23841
                                              0 BANK0     45    45      0
                                              0 BANK1    254   254      0
            _FsScape_check_index_crc
             _FsScape_get_index_SRAM
         _FsScape_get_index_crc_SRAM
             _FsScape_set_index_SRAM
         _FsScape_set_index_crc_SRAM
                    _I2C2_M_BusReset
                        _I2C2_M_Poll
                          _I2C_HWini
                    _I2C_ModuleStart
                     _I2C_ModuleStop
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             _millis
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   12739
                                             77 COMRAM     8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11290
                                             69 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           21    15      6   10823
                                             52 COMRAM    17    11      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                19    13      6    3608
                                             33 COMRAM    19    13      6
                                _pad
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                15     9      6    5162
                                             33 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2927
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1239
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     919
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             14 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     613
                                              4 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     625
                                              4 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4      34
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_ModuleStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ModuleStart                                      4     0      4     573
                                             17 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_HWini                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C2_M_Poll                                          6     4      2     343
                                             12 COMRAM     6     4      2
                 _I2C2_M_ClearErrors
                  _I2C2_M_RecoverBus
                       _I2C2_M_Start
                        _I2C2_M_Stop
                   _I2C2_M_WriteByte
 ---------------------------------------------------------------------------------
 (2) _I2C2_M_RecoverBus                                    4     2      2      71
                                              8 COMRAM     4     2      2
                    _I2C2_M_BusReset
 ---------------------------------------------------------------------------------
 (3) _I2C2_M_BusReset                                      4     2      2      37
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_M_ClearErrors                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FsScape_set_index_crc_SRAM                           8     4      4    1726
                                             27 COMRAM     8     4      4
                      _I2C_Mem_Write
 ---------------------------------------------------------------------------------
 (1) _FsScape_set_index_SRAM                               8     4      4    1726
                                             27 COMRAM     8     4      4
                      _I2C_Mem_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Mem_Write                                       18     6     12    1364
                                              9 COMRAM    18     6     12
                       _I2C2_M_Start
                        _I2C2_M_Stop
                   _I2C2_M_WriteByte
 ---------------------------------------------------------------------------------
 (1) _FsScape_get_index_crc_SRAM                          34    32      2    2070
                                             29 COMRAM    32    30      2
                       _I2C_Mem_Read
 ---------------------------------------------------------------------------------
 (1) _FsScape_get_index_SRAM                              34    32      2    2160
                                             29 COMRAM    32    30      2
                       _I2C_Mem_Read
 ---------------------------------------------------------------------------------
 (2) _I2C_Mem_Read                                        20     8     12    1701
                                              9 COMRAM    20     8     12
                    _I2C2_M_ReadByte
                     _I2C2_M_Restart
                       _I2C2_M_Start
                        _I2C2_M_Stop
                   _I2C2_M_WriteByte
 ---------------------------------------------------------------------------------
 (2) _I2C2_M_WriteByte                                     5     3      2      68
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_M_Stop                                          4     2      2      37
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C2_M_Start                                         4     2      2      37
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_M_Restart                                       4     2      2      37
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C2_M_ReadByte                                      5     3      2     105
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _FsScape_check_index_crc                             12     8      4    1229
                                             32 COMRAM    12     8      4
             _calculate_crc32_buffer
 ---------------------------------------------------------------------------------
 (2) _calculate_crc32_buffer                               9     5      4     833
                                             23 COMRAM     9     5      4
                    _calculate_crc32
 ---------------------------------------------------------------------------------
 (3) _calculate_crc32                                     21    16      5     455
                                              4 COMRAM    19    14      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                _increment_interrupt *
 ---------------------------------------------------------------------------------
 (12) _increment_interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FsScape_check_index_crc
     _calculate_crc32_buffer
       _calculate_crc32
   _FsScape_get_index_SRAM
     _I2C_Mem_Read
       _I2C2_M_ReadByte
       _I2C2_M_Restart
       _I2C2_M_Start
       _I2C2_M_Stop
       _I2C2_M_WriteByte
   _FsScape_get_index_crc_SRAM
     _I2C_Mem_Read
   _FsScape_set_index_SRAM
     _I2C_Mem_Write
       _I2C2_M_Start
       _I2C2_M_Stop
       _I2C2_M_WriteByte
   _FsScape_set_index_crc_SRAM
     _I2C_Mem_Write
   _I2C2_M_BusReset
   _I2C2_M_Poll
     _I2C2_M_ClearErrors
     _I2C2_M_RecoverBus
       _I2C2_M_BusReset
     _I2C2_M_Start
     _I2C2_M_Stop
     _I2C2_M_WriteByte
   _I2C_HWini
   _I2C_ModuleStart
     ___lldiv
   _I2C_ModuleStop
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _millis
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aldiv
           ___almod
           _abs
             ___almod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
         _fputc
         _xtoa
           _pad

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _increment_interrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      20       9       12.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FE      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlllhl      26      0       0      52        0.0%
BITBIGSFRhl         1D      0       0      38        0.0%
BITBIGSFRlllhhh     12      0       0      50        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhll       C      0       0      41        0.0%
BITBIGSFRlllhhl      9      0       0      51        0.0%
BITBIGSFRlhlhh       7      0       0      42        0.0%
BITBIGSFRlllhhh      6      0       0      49        0.0%
BITBIGSFRlhllhh      6      0       0      43        0.0%
BITBIGSFRllhh        6      0       0      47        0.0%
BITBIGSFRllhl        6      0       0      48        0.0%
BITBIGSFRlhllhh      2      0       0      44        0.0%
BITBIGSFRlhhlhl      2      0       0      40        0.0%
BITBIGSFRlhllhl      2      0       0      45        0.0%
BITBIGSFRlhhh        1      0       0      39        0.0%
BITBIGSFRlhlll       1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     301      33        0.0%
DATA                 0      0     301       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Mar 26 15:37:33 2024

                       __end_of_I2C_ModuleStart 17BE                          I2C_Mem_Read@DevAddress 0018  
              FsScape_check_index_crc@crc_value 0021                         _fsscape_SRAM_index_addr 0096  
                                           l201 19F8                                             l125 1B58  
                                           l231 1BC8                                             l128 1BB2  
                                           l225 1B5C                                             l243 1BE6  
                                           l155 1A9C                                             l228 1B6E  
                                           l501 1B82                                             l246 1BDC  
                                           l262 1C02                         calculate_crc32_buffer@i 0020  
                                           l249 1BF0                                             l361 1AC6  
                                           l391 1BD2                                             l752 1B94  
                                           l842 04B6                                             l843 0618  
                                           l844 0618                               ??_I2C2_M_BusReset 0007  
                              ??_I2C2_M_Restart 0007                                 _timer1ReloadVal 0058  
                                           _abs 197C                                             _pad 159C  
                                           tosl 0FFD                                             wreg 0FE8  
                                    _TXSTA1bits 0FAC                               ??_I2C2_M_ReadByte 0007  
                          _I2C1_DO_RX_NACK_STOP 0000                           I2C_Mem_Read@MemAdress 000A  
                        _FsScape_set_index_SRAM 18AE                                            l1120 1034  
                                          l1042 17BC                                            l1123 10AC  
                                          l1203 1452                                            l1051 1242  
                                          ?_abs 000F                                            l1124 1042  
                                          l1204 1406                                            l1060 1276  
                                          l2100 09B4                                            l1125 107C  
                                          l1053 1244                                            l1037 1BFE  
                                          l1045 1C06                                            l1118 0FF8  
                                          l1302 0E04                                            l1070 12B8  
                                          l2102 09BC                                            l1119 0FFA  
                                          l1151 16F2                                            l1207 1414  
                                          l1063 1288                                            l1128 108A  
                                          l1152 16CE                                            l1208 1430  
                                          l1080 12F0                                            l1072 12E0  
                                          l1064 128A                                            l1056 12FA  
                                          l1144 1A2A                                            l1400 14E6  
                                          l2112 0AD0                                            l1129 10A6  
                                          l1305 18AC                                            l1065 128E  
                                          l1145 1A34                                            l1162 157E  
                                          l1250 082A                                            l1234 0C0A  
                                          l1074 12E2                                            l1066 1290  
                                          l1090 1240                                            l2130 037E  
                                          l1235 0B12                                            l1075 12E4  
                                          l1067 12B4                                            l2051 1B14  
                                          l1308 197A                                            l1148 16C0  
                                          l1156 151A                                            l1084 1BF8  
                                          l1076 12E8                                            l1157 159A  
                                          l1077 12EA                                            l1069 12B6  
                                          l1078 12EE                                            l2150 19B2  
                                          l1159 1570                                            l1167 1684  
                                          l1407 14F6                                            l1168 166E  
                                          l1088 11AC                                            l1352 1B3A  
                                          l1249 0996                                            l2153 19BA  
                                          l2073 15BE                                            l1362 139C  
                                          l1370 175C                                            l2082 0670  
                                          l2146 1864                                            l1363 137E  
                                          l1364 13AC                                            l1292 18F4  
                                          l1452 0D16                                            l2084 0678  
                                          l2165 1176                                            l2173 1938  
                                          l2077 1614                                            l2085 06BE  
                                          l2096 07E8                                            l1289 0EF2  
                                          l1465 0FDE                                            l7001 0FCE  
                                          l7011 15CA                                            l7021 1996  
                                          l7013 15DE                                            l7005 159C  
                                          l7101 0A64                                            ?_pad 0017  
                                          l7111 1BDE                                            l7015 15E2  
                                          l7007 15AA                                            l7031 0664  
                                          l7023 0620                                            l7103 0A80  
                                          l7201 1424                                            l7121 124E  
                                          l7113 1BD4                                            l7017 1600  
                                          l7009 15B6                                            l7041 06B2  
                                          l7033 0680                                            l7025 0634  
                                          l7105 0A96                                            l7211 144A  
                                          l7123 125C                                            l7115 1BE8  
                                          l7019 197C                                            l7051 0718  
                                          l7043 06BA                                            l7035 0690  
                                          l7027 0644                                            l7107 0AB0  
                                          l7301 1350                                            l7205 143E  
                                          l7133 1294                                            l7117 1BCA  
                                          l7061 0788                                            l7053 071E  
                                          l7045 06C6                                            l7037 0696  
                                          l7029 0654                                            l7303 1366  
                                          l7151 150E                                            l7223 1636  
                                          l7215 1616                                            l7143 12F2  
                                          l7135 129A                                            l7127 1268  
                                          l7119 1246                                            l7063 07A2  
                                          l7055 0724                                            l7047 06D0  
                                          l7039 06A6                                            l7311 0076  
                                          l7305 1382                                            l7241 1694  
                                          l7161 1538                                            l7233 167C  
                                          l7225 1642                                            l7217 1628  
                                          l7137 12C6                                            l7129 1270  
                                          l7065 07B2                                            l7049 06D6  
                                          l7057 0758                                            l7081 09D6  
                                          l7073 0998                                            l7321 00BA  
                                          l7313 0084                                            l7307 1386  
                                          l7251 16DE                                            l7243 1698  
                                          l7171 158C                                            l7163 1544  
                                          l7155 1528                                            l7147 14F8  
                                          l7227 1646                                            l7219 162A  
                                          l7139 12D4                                            l7411 1C00  
                                          l7067 07B8                                            l7059 0772  
                                          l7091 0A0E                                            l7083 09DC  
                                          l7075 09A8                                            l7323 00C2  
                                          l7331 010C                                            l7315 0092  
                                          l7261 0FF2                                            l7245 16B4  
                                          l7237 1686                                            l7165 1548  
                                          l7157 152C                                            l7149 150A  
                                          l7229 1662                                            l7181 13B0  
                                          l7413 1B70                                            l7421 1B92  
                                          l7069 07C8                                            l7093 0A12  
                                          l7085 09E2                                            l7077 09C4  
                                          l7333 012A                                            l7341 01B6  
                                          l7325 00CA                                            l7317 0096  
                                          l7309 0050                                            l7263 0FFC  
                                          l7255 16EA                                            l7239 1688  
                                          l7167 1564                                            l7191 13DA  
                                          l7183 13BE                                            l7415 1B80  
                                          l7423 1A72                                            l7431 1A9E  
                                          l7095 0A22                                            l7087 09F2  
                                          l7079 09CC                                            l7351 023E  
                                          l7343 01E0                                            l7335 014C  
                                          l7319 00A6                                            l7273 1044  
                                          l7265 1008                                            l7249 16DC  
                                          l7177 1592                                            l7193 13DE  
                                          l7601 0896                                            l7505 0B62  
                                          l7425 1A7E                                            l7417 1B84  
                                          l7441 1AC2                                            l7433 1AAA  
                                          l7097 0A28                                            l7089 0A02  
                                          l7361 02F4                                            l7353 0276  
                                          l7345 01FC                                            l7337 0182  
                                          l7329 00D2                                            l7291 130C  
                                          l7283 1098                                            l7275 1050  
                                          l7267 100C                                            l7259 0FE2  
                                          l7195 13FA                                            l7187 13CA  
                                          l7611 08B2                                            l7515 0B7E  
                                          l7451 19F4                                            l7443 19BC  
                                          l7427 1A9A                                            l7419 1B90  
                                          l7435 1AB2                                            l7099 0A2E  
                                          l8411 00E6                                            l7285 109A  
                                          l7277 1054                                            l7269 1028  
                                          l7189 13CE                                            l7621 08CC  
                                          l7541 0BE8                                            l7525 0B9A  
                                          l7453 1BF2                                            l7461 1A22  
                                          l7701 14D6                                            l7445 19D0  
                                          l7429 1BA6                                            l7437 1AB4  
                                          l6901 1BC2                                            l7357 02AA  
                                          l8413 01CA                                            l7349 021C  
                                          l7373 0354                                            l7279 1070  
                                          l7199 1422                                            l7623 08D0  
                                          l7527 0BA6                                            l7463 1A2C  
                                          l7455 19FA                                            l7703 14E0  
                                          l7447 19DC                                            l7439 1AB6  
                                          l6911 10FA                                            l6903 10AE  
                                          l7367 0314                                            l8415 02BE  
                                          l7359 02D4                                            l7711 185C  
                                          l7297 131C                                            l7289 12FC  
                                          l7641 093C                                            l7633 08EC  
                                          l7561 081C                                            l7553 07EC  
                                          l7801 0E44                                            l7537 0BCE  
                                          l7481 0B16                                            l7473 0AEE  
                                          l7457 19FC                                            l7449 19E8  
                                          l7721 1B48                                            l6913 1130  
                                          l6905 10C0                                            l6921 1914  
                                          l8417 0334                                            l7369 0342  
                                          l7705 1816                                            l7299 1346  
                                          l7643 094A                                            l7635 08F8  
                                          l7571 0852                                            l7563 081E  
                                          l7555 07FA                                            l7803 0E56  
                                          l7539 0BD2                                            l7483 0B24  
                                          l7475 0B04                                            l7467 0AD4  
                                          l7459 1A08                                            l7723 1B4C  
                                          l7715 1B3C                                            l6931 0C2E  
                                          l6907 10D2                                            l6923 1918  
                                          l7707 1822                                            l7731 1AF0  
                                          l7653 095A                                            l7637 091C  
                                          l7573 0856                                            l7581 0864  
                                          l7821 0D18                                            l7549 0C02  
                                          l7485 0B3A                                            l7477 0B06  
                                          l7469 0AE2                                            l7813 1866  
                                          l7741 1762                                            l7725 1B50  
                                          l7717 1B40                                            l6941 0C64  
                                          l6933 0C32                                            l6925 0C0C  
                                          l6909 10DC                                            l6917 18F6  
                                          l7709 183E                                            l7733 1AF8  
                                          l7901 04CE                                            l7671 16FC  
                                          l7831 193A                                            l7639 092E  
                                          l7655 095E                                            l7583 0872  
                                          l7591 087A                                            l7575 0858  
                                          l7567 082E                                            l7559 0806  
                                          l7823 0D18                                            l7487 0B3E  
                                          l7495 0B4C                                            l7807 18AE  
                                          l7815 1876                                            l7751 1792  
                                          l7743 1766                                            l7727 1B54  
                                          l7719 1B44                                            l6951 0CA6  
                                          l6943 0C7A                                            l6935 0C40  
                                          l6927 0C10                                            l6919 1902  
                                          l7911 0528                                            l7903 04EA  
                                          l7673 1704                                            l7833 194A  
                                          l7665 098E                                            l7657 0974  
                                          l7569 083C                                            l7825 0D56  
                                          l7497 0B5A                                            l7489 0B40  
                                          l7809 18BE                                            l7761 1190  
                                          l7737 1BFA                                            l7753 17BA  
                                          l7745 1786                                            l7729 1B16  
                                          l6953 0CC4                                            l6945 0C82  
                                          l6961 0CE6                                            l6937 0C50  
                                          l6929 0C1E                                            l7921 058E  
                                          l7913 0534                                            l7905 04F6  
                                          l7841 0380                                            l7675 1738  
                                          l7835 196A                                            l7827 0D68  
                                          l7819 0D18                                            l7771 1200  
                                          l7763 11A6                                            l7755 117A  
                                          l7691 148E                                            l7683 1454  
                                          l7747 178C                                            l7739 175E  
                                          l6963 0CF6                                            l6955 0CD4  
                                          l6947 0C8E                                            l6939 0C54  
                                          l6971 0EF8                                            l7931 0614  
                                          l7923 05B6                                            l7915 0550  
                                          l7907 0508                                            l7851 03AC  
                                          l7843 0392                                            l7677 173A  
                                          l7669 16F4                                            l7765 11B4  
                                          l7757 117E                                            l7693 149C  
                                          l7685 1464                                            l7749 178E  
                                          l6965 0D06                                            l6957 0CD6  
                                          l6949 0C9C                                            l6981 0F38  
                                          l6973 0F06                                            l7925 05C8  
                                          l7917 055C                                            l7909 051C  
                                          l7861 03C4                                            l7853 03B0  
                                          l7845 039E                                            l7679 174C  
                                          l7767 11CA                                            l7759 118C  
                                          l7695 14A6                                            l7687 147A  
                                          l7839 1C04                                            l6959 0CE0  
                                          l6991 0F8E                                            l6983 0F4E  
                                          l6975 0F16                                            l7927 05D4  
                                          l7919 0582                                            l7871 03EA  
                                          l7863 03C6                                            l7855 03B4  
                                          l7847 03A4                                            l7785 122E  
                                          l7777 120C                                            l7769 11EE  
                                          l7697 14C4                                            l7689 1482  
                                          l6993 0F9E                                            l6985 0F56  
                                          l6977 0F1A                                            l6969 0EF4  
                                          l6897 1B5C                                            l7929 05F8  
                                          l7881 043A                                            l7873 03FA  
                                          l7865 03C8                                            l7857 03B6  
                                          l7849 03A8                                            l7795 0E06  
                                          l7779 1222                                            l7699 14D4  
                                          l6995 0FA8                                            l6987 0F62  
                                          l6979 0F28                                            l6899 1B6A  
                                          l7891 046E                                            l7883 043E  
                                          l7875 040A                                            l7867 03C8  
                                          l7859 03C2                                            l7797 0E06  
                                          l7789 123A                                            l6989 0F70  
                                          l6997 0FAE                                            l7893 0482  
                                          l7885 044A                                            l7877 041A  
                                          l7869 03DA                                            l7799 0E06  
                                          l6999 0FBE                                            l7895 049A  
                                          l7887 044E                                            l7879 042A  
                                          l7897 04AA                                            l7889 0462  
                                          l7899 04C2                                            STR_1 FFED  
                                          STR_2 FFC0                                            STR_3 FECB  
                                          STR_4 FEA2                                            STR_5 FE4C  
                                          STR_6 FF16                                            STR_7 FE78  
                                          STR_8 FF55                                            STR_9 FF16  
                                          _LATA 0F89                                            _LATB 0F8A  
                                          _LATC 0F8B                                            u5000 1028  
                                          u5001 1024                                            u5010 1042  
                                          u5011 103E                                            u5020 1070  
                                          u5100 023A                                            u5021 106C  
                                          u5101 0236                                            u5030 108A  
                                          u5110 1A22                                            u5031 1086  
                                          u5111 1A1E                                            u5040 1098  
                                          u5200 0BFE                                            u5120 0AE2  
                                          u5041 1094                                            u5201 0BFA  
                                          u5121 0ADE                                            u5050 1366  
                                          u5210 07FA                                            u5130 0B04  
                                          u4410 1B6A                                            u5051 1362  
                                          u5211 07F6                                            u5131 0B00  
                                          u4411 1B66                                            u5060 139C  
                                          u5300 094A                                            u5220 081C  
                                          u5140 0B3A                                            u4500 0C9C  
                                          u4420 10C0                                            u5061 1398  
                                          u5301 0946                                            u5221 0818  
                                          u5141 0B36                                            u4501 0C98  
                                          u4421 10BC                                            u5310 0974  
                                          u5230 0852                                            u5150 0B5A  
                                          u4510 0CC4                                            u4430 10D2  
                                          u5070 0076                                            u5311 0970  
                                          u5231 084E                                            u5151 0B56  
                                          u4511 0CC0                                            u4431 10CE  
                                          u5071 0072                                            u5320 098A  
                                          u5240 0872                                            u5160 0B7A  
                                          u5400 11A6                                            u4520 0CF6  
                                          u4440 10FA                                            u4600 1600  
                                          u5080 012A                                            u5321 0986  
                                          u5241 086E                                            u5161 0B76  
                                          u5401 11A2                                            u4521 0CF2  
                                          u4441 10F6                                            u4601 15FC  
                                          u5081 0126                                            u5330 174C  
                                          u5250 0892                                            u5170 0B96  
                                          u5410 11CA                                            u4530 0F06  
                                          u4610 1996                                            u4450 1130  
                                          u5090 0148                                            u5331 1748  
                                          u5251 088E                                            u5171 0B92  
                                          u5411 11C6                                            u4531 0F02  
                                          u4611 1992                                            u4451 112C  
                                          u5091 0144                                            u5260 08AE  
                                          u5180 0BCA                                            u5420 11EE  
                                          u5340 147A                                            u4540 0F28  
                                          u4460 1938                                            u4700 07A2  
                                          u4620 0630                                            u5261 08AA  
                                          u5181 0BC6                                            u5421 11EA  
                                          u5341 1476                                            u4541 0F24  
                                          u4461 1934                                            u4701 079E  
                                          u4621 062A                                            u5270 08C8  
                                          u5190 0BE8                                            u5430 1200  
                                          u5350 149C                                            u4470 0C1E  
                                          u4550 0F4E                                            u4710 07B2  
                                          u4630 0632                                            u5271 08C4  
                                          u5191 0BE4                                            u5431 11FC  
                                          u5351 1498                                            u4471 0C1A  
                                          u4551 0F4A                                            u4711 07AE  
                                          u5280 08E8                                            u4800 12B4  
                                          u5440 1222                                            u5360 14C4  
                                          u4480 0C40                                            u4560 0F70  
                                          u4640 0644                                            u4720 09A8  
                                          u5281 08E4                                            u4801 12B0  
                                          u5441 121E                                            u5361 14C0  
                                          u4481 0C3C                                            u4561 0F6C  
                                          u4641 0640                                            u4721 09A4  
                                          u5290 091C                                            u5450 0E56  
                                          u4810 12C6                                            u4490 0C7A  
                                          u4570 0F8E                                            u4650 0664  
                                          u4730 09F2                                            u5370 185C  
                                          u5291 0918                                            u5451 0E52  
                                          u4811 12C2                                            u4491 0C76  
                                          u4571 0F8A                                            u4651 0660  
                                          u4731 09EE                                            u5371 1858  
                                          u4900 1414                                            u5460 0D68  
                                          u4820 12D4                                            u5380 1786  
                                          u4580 0FBE                                            u4660 0690  
                                          u4740 0A4E                                            u4901 1410  
                                          u5461 0D64                                            u4821 12D0  
                                          u5381 1782                                            u4581 0FBA  
                                          u4661 068C                                            u4830 150A  
                                          u4910 1422                                            u5390 118C  
                                          u4590 15AA                                            u4670 06A6  
                                          u4750 0A80                                            u4831 1506  
                                          u4911 141E                                            u5391 1188  
                                          u4591 15A6                                            u4671 06A2  
                                          u4751 0A7C                                            u5471 038A  
                                          u4840 1528                                            u4920 143E  
                                          u4680 0772                                            u4760 0A96  
                                          u4841 1524                                            u4921 143A  
                                          u4681 076E                                            u4761 0A92  
                                          u4745 0A44                                            u5481 0398  
                                          u4850 1564                                            u4930 1628  
                                          u4690 0788                                            u4770 0AB0  
                                          u5490 049A                                            u4851 1560  
                                          u4931 1624                                            u4691 0784  
                                          u4771 0AAC                                            u5491 0496  
                                          u4860 157E                                            u4940 1662  
                                          u4780 125C                                            u4861 157A  
                                          u4941 165E                                            u4781 1258  
                                          u4870 158C                                            u4950 167C  
                                          u4790 1284                                            u4871 1588  
                                          u4951 1678                                            u4791 1280  
                                          u4960 16B4                                            u4880 13BE  
                                          u4961 16B0                                            u4881 13BA  
                            _I2C2_M_ClearErrors 1BF2                                            u4970 16CE  
                                          u4890 13FA                                            u4971 16CA  
                                          u4891 13F6                                            u4980 16DC  
                                          u4981 16D8                                            u5917 1248  
                                          u4990 0FF2                                            u4991 0FEE  
                                          _TMR1 0FCE                                            _WPUB 0F61  
                                 _EUSART1_Write 1B5A                                            abs@a 000F  
                                          _dbuf 0200                                            _main 0380  
                                          _dtoa 0620                                            _prec 00A0  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          pad@w 0020                                            fsr2l 0FD9  
                                          btemp 005B                                            _xtoa 0998  
                        I2C_Mem_Read@MemAddSize 000C                                            start 004C  
                           ?_I2C2_M_ClearErrors 0001                      ??_TMR1_SetInterruptHandler 0007  
                                  ___param_bank 0000                                    main@adressme 00CC  
                                    _FsScape_CS 00A4                             _increment_interrupt 1B96  
                                         ??_abs 0011                                           ??_pad 001D  
                         I2C_Mem_Read@SlaveAddr 0019                   __end_of_OSCILLATOR_Initialize 1BB4  
                              ?_calculate_crc32 0005                                 __end_of___aldiv 0D18  
                               __end_of___almod 0FE0                                           ?_main 0001  
                                         ?_dtoa 0022                                           STR_10 FEF4  
                                         STR_11 FFA8                                           STR_12 FF38  
                                         STR_13 FFD8                                           STR_14 FF72  
                                         STR_15 FF8E                                 __end_of___lldiv 14F8  
                                         ?_xtoa 0022                                           _T1CON 0FCD  
                                         i2l271 0040                                           i2l375 1AEE  
                                         i2l394 1C08                                           i2l388 1A70  
                    __end_of_i2c1_fsmStateTable FE41                                    vfpfcnvrt@fmt 0037  
                                         _TMR1H 0FCF                                           _TMR1L 0FCE  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                            ??_I2C2_M_ClearErrors 0005  
                                  _I2C_Mem_Read 07EA                     ?_FsScape_get_index_crc_SRAM 001E  
                   ?_FsScape_set_index_crc_SRAM 001C                          _FsScape_i2c_FLASH_addr 00A8  
                             ??_I2C1_Initialize 0005                                __end_of_TMR1_ISR 1A72  
                                         _flags 00A6                               __end_of_I2C_HWini 1C00  
                                         _fputc 10AE                                           _fputs 18F6  
                          ?_increment_interrupt 0001                                           pad@fp 0017  
                                         _width 009E                                           _putch 1BC0  
                                         dtoa@d 0024                                           dtoa@i 002F  
                                         dtoa@p 002A                                           dtoa@s 002E  
                                         dtoa@w 002C                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 1AC8                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         plusw1 0FE3                                           plusw2 0FDB  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 0FD8  
                                         wtemp8 005C                                           xtoa@c 0034  
                                         xtoa@d 0024                                           xtoa@i 0032  
                                         xtoa@p 0030                                           xtoa@w 002C  
                             ?_I2C2_M_WriteByte 0005              _EUSART1_DefaultFramingErrorHandler 0000  
                               _TMR1_WriteTimer 1AC8                              ??_I2C2_M_WriteByte 0007  
                               __initialization 17BE                      __end_of_EUSART1_Initialize 19FA  
                                  __end_of_main 0620                                    __end_of_dtoa 07EA  
                             _I2C2_M_RecoverBus 19FA                                ?_I2C_ModuleStart 0012  
                                  __end_of_xtoa 0AD2                                   main@adressme2 00D0  
                                 main@adressme3 00BC                              ?_I2C2_M_RecoverBus 0009  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0056  
                                        ??_dtoa 0028                                          ??_xtoa 0028  
                                 __activetblptr 0003             FsScape_set_index_SRAM@address_value 001C  
                           ??_I2C2_M_RecoverBus 000B                           ??_increment_interrupt 0001  
                            I2C_Mem_Write@pData 000E                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 0F38  
                                        ?_putch 0001                                          _ANSELB 0F39  
                                        _ANSELC 0F3A                        ??_FsScape_get_index_SRAM 0020  
                                        _T1GCON 0FCC                         _FsScape_i2c_EEPROM_addr 00A9  
                       TMR1_WriteTimer@timerVal 0001                                   main@bus_reset 00BA  
                                        i2l1358 1BA4                                          i2l5151 1AE0  
                                        i2l5143 1AC8                                          i2l5145 1AD6  
                                        i2l5153 1AE6                                          i2l5155 1AEA  
                                        i2l5147 1AD8                                          i2l5149 1ADC  
                                        i2l5481 1A44                                          i2l5483 1A58  
                                        i2l5389 1B96                                          i2l5477 1A36  
                                        i2l5479 1A38                                          i2l5861 003C  
                                        i2l5855 0012                                          i2l5857 0020  
                                        i2l5859 002E                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                        _SPBRG1 0FAF                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                     FsScape_get_index_SRAM@value 003C  
                              _I2C1_DO_TX_EMPTY 0000                                   _I2C_Mem_Write 0AD2  
                     __end_of_I2C2_M_RecoverBus 1A36            __end_of_TMR1_DefaultInterruptHandler 1C0A  
                  _TMR1_DefaultInterruptHandler 1C08                                    vfprintf@cfmt 004C  
                                     ??___aldiv 000D                                       ??___almod 000D  
           FsScape_check_index_crc@crc_computed 0029                         _FsScape_check_index_crc 193A  
                                     ??___lldiv 000D                              I2C2_M_Poll@DevAddr 000F  
                      ?_EUSART1_SetErrorHandler 0005                                          _millis 1B16  
                                        clear_0 17E4                                          clear_1 17F0  
                                        clear_2 17FC                                          isa$std 0001  
                                        _printf 1AF0                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                I2C_Mem_Read@Size 0010  
                                 main@valoresrx 0100                                   main@valorestx 00AB  
                         _I2C1_DO_SEND_ADR_READ 0000                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                I2C2_M_BusReset@i 0007  
                                  __mediumconst FE20                                          tblptrh 0FF7  
                                        tblptrl 0FF6                                          tblptru 0FF8  
                              __end_of_vfprintf 1866                                 ??_EUSART1_Write 0005  
      TMR1_SetInterruptHandler@InterruptHandler 0005                         __end_of_TMR1_WriteTimer 1AF0  
                                        xtoa@fp 0022                         _I2C1_DO_RX_NACK_RESTART 0000  
                       I2C2_M_RecoverBus@status 000B              FsScape_get_index_crc_SRAM@_address 0038  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 1B3C  
                                    __accesstop 0060                         __end_of__initialization 180C  
                                 ??_I2C2_M_Poll 000F                                   ??_I2C2_M_Stop 0007  
                FsScape_get_index_SRAM@_address 0038                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 0001                                  ?_I2C_Mem_Write 000A  
                              I2C2_M_ReadByte@t 0008                         _rdBlkRegCompleteHandler 0000  
                               _I2C2_M_BusReset 1242                      __end_of_spi2_configuration FE45  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 1BB4  
                           ??_SYSTEM_Initialize 0007                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                               _I2C2_M_ReadByte 0FE0                                   __end_of_fputc 1178  
                                 __end_of_fputs 193A                  FsScape_set_index_SRAM@_address 0020  
                                 __end_of_putch 1BCA                              _spi1_configuration FE45  
                       ?_FsScape_set_index_SRAM 001C                 FsScape_get_index_crc_SRAM@value 003C  
         __end_of_FsScape_FLASH_interface_style FE4A                   _FsScape_FLASH_interface_style FE49  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 1B5A  
                                       ??_fputs 0014                                         ??_putch 0006  
                             ??_SPI2_Initialize 0005                                      __pbssBANK0 0060  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                       I2C_Mem_Write@DevAddress 0016             FsScape_set_index_crc_SRAM@crc_value 001C  
                                I2C_Mem_Write@i 001A                            _timer_overflow_count 008A  
                         _rd1RegCompleteHandler 0000                               _I2C1_DO_SEND_STOP 0000  
                     ??_FsScape_check_index_crc 0025                           _wr1RegCompleteHandler 0000  
               __end_of_EUSART1_SetErrorHandler 1BF2                   FsScape_get_index_SRAM@address 001E  
                           __end_of_I2C2_M_Poll 1242                             __end_of_I2C2_M_Stop 1686  
                                    ??_TMR1_ISR 0003                                 _I2C1_Initialize 1B70  
                                       ?_millis 0005                  __end_of_FsScape_set_index_SRAM 18F6  
                                       ?_printf 004E          __end_of_EUSART1_SetFramingErrorHandler 1BE8  
                _EUSART1_SetFramingErrorHandler 1BDE                             I2C_Mem_Write@retval 0018  
                                       _OSCCON2 0FD2                         I2C_Mem_Write@MemAddSize 000C  
                                       _OSCTUNE 0F9B                                         _SPBRGH1 0FB0  
                                       _SSP1ADD 0FC8                                         _SSP2ADD 0F6E  
                                       _SSP1BUF 0FC9                                         _SSP2BUF 0F6F  
                              ?_TMR1_WriteTimer 0001                        ??_calculate_crc32_buffer 001C  
                       __end_of_I2C2_M_BusReset 12FC                                       _I2C_HWini 1BFA  
                            _i2c1_fsmStateTable FE21                                 ??_I2C_Mem_Write 0016  
                       __end_of_I2C2_M_ReadByte 10AE                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aldiv 0C0C  
                                       ___almod 0EF4                                         ___lldiv 1454  
                        _FsScape_get_index_SRAM 0E06                                       ?_vfprintf 0046  
                                       __micros 0092                                         __pcinit 17BE  
                                       __millis 008E                                         __ramtop 1000  
                                       __ptext0 0380                                         __ptext1 1AF0  
                                       __ptext2 1816                                         __ptext3 0050  
                                       __ptext4 0998                                         __ptext5 0620  
                                       __ptext6 159C                                         __ptext7 18F6  
                                       __ptext8 10AE                                         __ptext9 1BC0  
                ??_TMR1_DefaultInterruptHandler 0001                                       _T1CONbits 0FCD  
                         _OSCILLATOR_Initialize 1BA6                                ___aldiv@dividend 0005  
                            _EUSART1_Initialize 19BC                        ??_PIN_MANAGER_Initialize 0005  
                     ?_TMR1_SetInterruptHandler 0005                            end_of_initialization 180C  
                                _I2C_ModuleStop 1C04                                   ?_I2C2_M_Start 0005  
                             I2C_Mem_Read@pData 000E                             ?_EUSART1_Initialize 0001  
                                    ?_I2C_HWini 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00E7                                         fputs@fp 0012  
                        _I2C1_DO_SEND_ADR_WRITE 0000                                         millis@m 0009  
                                   _I2C2_M_Poll 1178                                     _I2C2_M_Stop 1616  
                       __end_of_I2C1_Initialize 1B84                                 ___lldiv@divisor 0009  
                               ___lldiv@counter 0011                                     _I2C1_Status 0060  
                             __end_of_vfpfcnvrt 0380                                ___aldiv@quotient 000F  
                                       postdec1 0FE5                                         postdec2 0FDD  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 003F  
                                    ??_vfprintf 004C                            ??_EUSART1_Initialize 0007  
                    _I2C1_DO_SEND_RESTART_WRITE 0000                                       _PORTCbits 0F82  
                   __end_of_increment_interrupt 1BA6                                calculate_crc32@b 000E  
                              calculate_crc32@j 0012                                       _TRISBbits 0F93  
                                     _TRISCbits 0F94                          __end_of_I2C_ModuleStop 1C08  
                                ??_I2C2_M_Start 0007                             EUSART1_Write@txData 0005  
                                    main@check1 00C0                                      main@check2 00D4  
                                    main@check3 00C4                                      main@check4 00C8  
                              ?_I2C2_M_BusReset 0005                                      main@valor2 00B7  
                              ?_I2C2_M_ReadByte 0005                    __end_of_INTERRUPT_Initialize 1C04  
                                   vfpfcnvrt@ap 0039                                     vfpfcnvrt@cp 0044  
                                   vfpfcnvrt@fp 0035                                  _I2C1_DO_RX_ACK 0000  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_millis 1B3C  
                               _SPI2_Initialize 1B84                                  __end_of_printf 1B16  
                            _spi2_configuration FE41                             start_initialization 17BE  
                                   __end_of_abs 19BC                                     __end_of_pad 1616  
                               ?_I2C_ModuleStop 0001                                     putch@txData 0006  
                         __end_of_EUSART1_Write 1B70                                     ??_I2C_HWini 0005  
                             I2C_Mem_Write@Size 0010                                   _FsScape_CSbit 00A2  
                             ??_calculate_crc32 000A                                ?_I2C1_Initialize 0001  
                                   vfprintf@fmt 0048                     I2C_ModuleStart@clock_output 0012  
                                   __pdataBANK0 00D8                                        ??_millis 0009  
                        _calculate_crc32_buffer 16F4                                        ??_printf 0054  
                              _I2C2_M_WriteByte 13AE                           _FsScape_i2c_SRAM_addr 00AA  
                                 ?_I2C_Mem_Read 000A                                     __pbssCOMRAM 0056  
                          _I2C1_DO_SEND_RESTART 0000                                   __pcstackBANK0 00AB  
                                 __pcstackBANK1 0100                               I2C2_M_Poll@retval 0011  
                  ??_FsScape_get_index_crc_SRAM 0020              FsScape_set_index_crc_SRAM@_address 0020  
                  ??_FsScape_set_index_crc_SRAM 0020                               ??_I2C_ModuleStart 0016  
                                _I2C2_M_Restart 1686                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                                   I2C_Mem_Read@i 001A  
                                     __pnvBANK0 00E3                           _rd2RegCompleteHandler 0000  
                        _PIN_MANAGER_Initialize 1A72                                 I2C2_M_Restart@t 0007  
                         _wr2RegCompleteHandler 0000                                       _dtoa$3526 0028  
                       ?_FsScape_get_index_SRAM 001E            __end_of_FsScape_SRAM_interface_style FE4C  
                  _FsScape_SRAM_interface_style FE4B                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 1BD4                                   __pmediumconst FE20  
                                      ?___aldiv 0005                         __end_of_SPI2_Initialize 1B96  
                                      ?___almod 0005                          I2C2_M_ReadByte@ACKflag 0007  
                                      ?___lldiv 0005                            __end_of_I2C2_M_Start 159C  
                     calculate_crc32_buffer@crc 001C                 FsScape_check_index_crc@_address 0025  
                  ??_INTERRUPT_InterruptManager 0003                                ___almod@dividend 0005  
                          I2C_Mem_Write@Timeout 0012                          I2C_Mem_Write@MemAdress 000A  
                                ??_I2C_Mem_Read 0016                                        _BAUDCON1 0FB8  
            _EUSART1_DefaultOverrunErrorHandler 0000                            _EUSART1_ErrorHandler 00E5  
                                      _AT45dbxx 0084                                        _I2Cflags 0056  
                       _EUSART1_SetErrorHandler 1BE8                          __end_of_I2C2_M_Restart 16F4  
                          _INTERRUPT_Initialize 1C00                                 ___aldiv@divisor 0009  
                      ?_FsScape_check_index_crc 0021                                 ___aldiv@counter 000D  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _LATBbits 0F8A  
                                      _LATCbits 0F8B                                    ?_I2C2_M_Poll 000D  
                                    _I2C1_DO_RX 0000                                      _I2C1_DO_TX 0000  
                                  ?_I2C2_M_Stop 0005                                        _PIE1bits 0F9D  
                         __end_of_I2C_Mem_Write 0C0C                  __end_of_FsScape_get_index_SRAM 0EF4  
                                      i2u328_40 1A58                                        i2u328_41 1A54  
                                      _PIR1bits 0F9E                                        i2u329_48 1A5E  
                                      i2u362_40 0020                                        i2u329_49 1A70  
                                      i2u362_41 001C                                        i2u363_40 002E  
                                      i2u363_41 002A                                        _PIR2bits 0FA1  
                                      i2u364_40 003C                                        i2u364_41 0038  
                                      _PIR3bits 0FA4                                        i2u299_40 1AD6  
                                      i2u299_41 1AD2                          I2C_Mem_Write@SlaveAddr 0017  
                                      _RCONbits 0FD0                       _I2C1_DO_SEND_RESTART_READ 0000  
                                     main@F6387 00D8                                       main@F6389 0300  
                                      _SSP1CON1 0FC6                                        _SSP1CON2 0FC5  
                                      _SSP2CON1 0F6C                                        _SSP2CON2 0F6B  
                                      _TMR1_ISR 1A36                                        _SSP1STAT 0FC7  
                                      _SSP2STAT 0F6D          __end_of_FsScape_EEPROM_interface_style FE4B  
                _FsScape_EEPROM_interface_style FE4A                                       _vfpfcnvrt 0050  
                                     _xtoa$3535 002E                               ??_TMR1_Initialize 0007  
                    __end_of_I2C2_M_ClearErrors 1BFA                                    _myi_AT45dbxx 009A  
                         I2C2_M_WriteByte@cData 0007                                       main@temp2 00B9  
                                     main@valor 00B6                                   _I2C1_DO_RESET 0000  
                               ?_I2C2_M_Restart 0005                                      vfpfcnvrt@c 0043  
                           I2C_Mem_Read@Timeout 0012                                     _INTCON2bits 0FF1  
                                     copy_data0 17D2                           ?_INTERRUPT_Initialize 0001  
                 FsScape_get_index_crc_SRAM@crc 001E                          fp__increment_interrupt 0000  
                  calculate_crc32_buffer@buffer 0018                                        __Hrparam 0000  
                             I2C2_M_WriteByte@t 0008                                      vfprintf@ap 004A  
                                      __Lrparam 0000                                      vfprintf@fp 0046  
                      ??_FsScape_set_index_SRAM 0020                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0005                                      ?_vfpfcnvrt 0035  
                      _TMR1_SetInterruptHandler 1BCA                                ??_I2C_ModuleStop 0005  
                         _TMR1_InterruptHandler 00E3                       ??_EUSART1_SetErrorHandler 0007  
                   _EUSART1_DefaultErrorHandler 0000              __end_of_FsScape_get_index_crc_SRAM 0E06  
                    _FsScape_get_index_crc_SRAM 0D18              __end_of_FsScape_set_index_crc_SRAM 18AE  
                    _FsScape_set_index_crc_SRAM 1866                                 _calculate_crc32 12FC  
                                      __ptext10 1B5A                                        __ptext11 197C  
                                      __ptext20 1BA6                                        __ptext12 0EF4  
                                      __ptext21 1C00                                        __ptext13 0C0C  
                                    _T1GCONbits 0FCC                                        __ptext30 1BFA  
                                      __ptext22 1B70                                        __ptext14 1B16  
                                      __ptext31 1178                                        __ptext23 19BC  
                                      __ptext15 1B3C                                        __ptext40 07EA  
                                      __ptext32 19FA                                        __ptext24 1BD4  
                                      __ptext16 1A9E                                        __ptext41 13AE  
                                      __ptext33 1242                                        __ptext25 1BDE  
                                      __ptext17 1BCA                                        __ptext50 1A36  
                                      __ptext42 1616                                        __ptext34 1BF2  
                                      __ptext26 1BE8                                        __ptext18 1B84  
                                      __ptext51 1C08                                        __ptext43 14F8  
                                      __ptext35 1866                                        __ptext27 1C04  
                                      __ptext19 1A72                                        __ptext52 1B96  
                                      __ptext44 1686                                        __ptext36 18AE  
                                      __ptext28 175E                                        __ptext53 1AC8  
                                      __ptext45 0FE0                                        __ptext37 0AD2  
                                      __ptext29 1454                                        __ptext54 0000  
                                      __ptext46 193A                                        __ptext38 0D18  
                                      __ptext47 16F4                                        __ptext39 0E06  
                                      __ptext48 12FC                 __end_of_FsScape_check_index_crc 197C  
                                  _SSP1CON1bits 0FC6                                    _SSP1CON2bits 0FC5  
                                  _SSP2CON1bits 0F6C                                 ___almod@divisor 0009  
                               ___almod@counter 000D                        _I2C1_CallbackReturnReset 0000  
                      __end_of_I2C2_M_WriteByte 1454                            __end_of_I2C_Mem_Read 0998  
                          calculate_crc32@state 0005  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      isa$xinst 0000                         ?_calculate_crc32_buffer 0018  
                                      int$flags 005B                                        _vfprintf 1816  
            __end_of_INTERRUPT_InterruptManager 004C                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 004E                                    _SSP1STATbits 0FC7  
                             ??_TMR1_WriteTimer 0003                                        main@temp 00B8  
                   _EUSART1_FramingErrorHandler 00E9                                    _I2C1_DO_IDLE 0000  
                                  _I2C1_DO_RCEN 0000                                 _I2C_ModuleStart 175E  
                                    _INTCONbits 0FF2                              I2C_Mem_Read@retval 001C  
                        ??_INTERRUPT_Initialize 0005                                        intlevel2 0000  
                                  _I2C2_M_Start 14F8                                ___lldiv@dividend 0005  
                                 I2C2_M_Start@t 0007                         ?_PIN_MANAGER_Initialize 0001  
                          I2C2_M_Poll@SlaveAddr 0010          __end_of_EUSART1_SetOverrunErrorHandler 1BDE  
                _EUSART1_SetOverrunErrorHandler 1BD4                                      _RCSTA1bits 0FAB  
                       _I2C1_CallbackReturnStop 0000                             calculate_crc32@data 0009  
                __end_of_calculate_crc32_buffer 175E                            _I2C1_DO_ADDRESS_NACK 0000  
                                      printf@ap 0054  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                                   ??_vfpfcnvrt 003B                      calculate_crc32_buffer@size 001A  
                       __end_of_calculate_crc32 13AE                              _eusart1RxLastError 005A  
                              ___lldiv@quotient 000D                                    I2C2_M_Stop@t 0007  
                            calculate_crc32@crc 0014                                    ___aldiv@sign 000E  
                                   _timer_fract 00A7                  __end_of_PIN_MANAGER_Initialize 1A9E  
                                  ___almod@sign 000E                                 _TMR1_Initialize 1A9E  
                    __end_of_spi1_configuration FE49  
